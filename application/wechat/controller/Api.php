<?php
/**
 * Created by PhpStorm.
 * Power by Mikkle
 * QQ:776329498
 * Date: 2017/5/19
 * Time: 11:27
 */

namespace app\wechat\controller;


use app\base\model\OfficeSign;
use app\base\model\PersonnelUser;
use app\erp\config\FieldValue;
use app\erp\config\ListUrl;
use mikkle\tp_wechat\Wechat;
use think\Config;
use think\Controller;
use think\Exception;
use think\Log;

class Api extends Base
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        Config::set(['default_return_type'    => 'json',]);
    }

    public function showFieldJsonArray($name=[]){

        $name_array=[
            "decoration_grade",
            "color_orientation",
            "decoration_style",
            "decoration_type",
            "customer_source",
            "sex_value",
            "householder_relation",
        ];
        $field_json=[];
        foreach($name_array as $value){
            $array=$this->getFieldJson($value);
            if ($array){
                $field_json[$value]=$array;
            }
        }
        return $field_json;
    }

    public function showFieldJson($name){


        $field_value = new FieldValue();
        if (isset($field_value->$name)){
            $array=[];
            foreach ($field_value->$name as $item => $value){
                $array[] = ['text'=>$value,'value'=>$item];
            }
            return json($array) ;
        }
        else{
            return "{}";
        }
    }

    private function getFieldJson($name){
        $field_value = new FieldValue();
        if (isset($field_value->$name)){
            $array=[];
            foreach ($field_value->$name as $item => $value){
                $array[] = ['text'=>$value,'value'=>$item];
            }
            return $array ;
        }
        else{
            return false;
        }
    }

    public function jsSign($url=''){
        if (!$this->request->isAjax()) return json(['err'=>true]);
        if ($this->request->server('HTTP_REFERER')!=$url) return json(['err'=>true]);
        $options = Config::get("wechat.erp_options");
        $my_sign = Wechat::script($options)->getJsSign($this->request->server('HTTP_REFERER'));
        return json($my_sign);
    }


    public function signSuperPush(){


        try{
            $param_list=[
                'user_uuid' => 'user_uuid',
                'message' => 'message',
                'latitude' => 'latitude',
                'longitude' => 'longitude',
                'speed' => 'speed',
                'type' => 'type',
                'accuracy' => 'accuracy',
                'openid' => 'openid',
                'image' => 'image',
            ];

            $save_data = $this->buildParam($param_list);
            $user = PersonnelUser::quickGet($save_data['user_uuid']);
            if(empty($user)){
                throw new Exception("用户不存在");
            }
            $save_data['company_id']=$user["company_id"];
            $save_data['department_id']=$user["department_id"];
            $save_data['jobs_id']=$user["jobs_id"];
            $save_data['user_name']=$user["name"];
            $save_data["photo_m"]=$save_data["image"];
            $save_data["image"]="http://wechat.yzfErp.com/upload/show_images/{$save_data["image"]}/480_600";
            $sign_model = new OfficeSign();
            $validate_name='base/OfficeSign.add';
            $result = $this->validate($save_data, $validate_name);
            if (true !== $result) {
                throw new Exception($result);
            };
            return $sign_model->addData($save_data);
        }catch (Exception $e){
            Log::error($e->getMessage());
            return self::showJsonReturnCodeWithOutData(1008,$e->getMessage());
        }






    }


}