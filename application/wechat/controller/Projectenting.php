<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\wechat\controller;

use app\base\model\Base;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelUser;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use think\Session;
use app\erp\config\Config;


class Project extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->config_list = Config::$project;
    }

    //显示添加联系人页面
    public function showContactEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('contacts_edit');
    }
    public function addContactsData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectContacts.edit';
            $model_name='base/ProjectContacts';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增联系人";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }

    }
    public function editContactsData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectContacts.edit';
            $model_name='base/ProjectContacts';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");

            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改联系人";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    public function showStructureEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('structure_edit');
    }
    public function addStructureData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectStructure.edit';
            $model_name='base/ProjectStructure';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增房屋结构";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return  json($re);
        }
    }
    public function editStructureData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectStructure.edit';
            $model_name='base/ProjectStructure';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改房屋结构";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }

    //手机页面添加项目(未完成)
    public  function saveProject(){
        $data = $this->request->post();
        $validate_name = "base/ProjectEnty.edit";
        $model_name='base/Project';
        return json($this->editData(false,$validate_name,$model_name,$data));

    }

    //添加日志.
    public function addTraceLogData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['uuid']=$this->uuid;
            $data['project_guid']=$this->request->param("project_guid");
            $data['department_id']=$this->member_info->department_id;
            $data['jobs_id']=$this->member_info->jobs_id;
            $data['log_type']='1';
            $validate_name='base/ProjectTraceLog.edit';
            $model_name='base/ProjectTraceLog';

            return json($this->editData(false,$validate_name,$model_name,$data));

        }

    }//提醒时间
    public function addTraceTimeData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['uuid']=$this->uuid;
            $data['project_guid']=$this->request->param("project_guid");
            $data['department_id']=$this->member_info->department_id;
            $data['jobs_id']=$this->member_info->jobs_id;
            $validate_time='base/ProjectTraceLog.time';
            $model_time='base/ProjectRemindTime';
            $data["remind_time"]=strtotime($data['remind_time']);
            $re=$this->editData(false,$validate_time,$model_time,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增提醒时间";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re );
        }

    }
    //显示楼盘信息修改页
    public function showBuildingEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('building_edit');
    }
    public function addBuildingData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectBuilding.edit';
            $model_name='base/ProjectBuilding';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增楼盘信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    public function editBuildingData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectBuilding.edit';
            $model_name='base/ProjectBuilding';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改楼盘信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    //显示项目修改页
    public function showProjectEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('system/project_edit');
    }
    public function editProjectData(){
        if($this->request->isAjax()){
            $validate_name='base/Project.edit';
            $model_name='base/Project';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改项目信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }

    public function showLog(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');

        $model_project= new \app\base\model\ProjectTraceLog();
        $model_user= new \app\base\model\PersonnelUser();
        $model_jobs= new \app\base\model\PersonnelJobs();
        $model_dep= new \app\base\model\PersonnelDepartment();
        $project_info= $model_project->getList(['project_guid'=>$id]);
        if($project_info){
            foreach($project_info as $value){
                $project_user=$model_user->getInfoByUuId($value["uuid"]);
                $project_dep=$model_dep->getInfoByGuId($value["department_id"]);
                $project_jobs=$model_jobs->getInfoByGuId($value["jobs_id"]);
                $value["username"]=$project_user['username'];
                $value["department_name"]=$project_dep['department_name'];
                $value["jobs_name"]=$project_jobs['jobs_name'];
            }
            return json($project_info);
        }
    }
    public function showRemindTime(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');
        $model_project= new \app\base\model\ProjectRemindTime();
        $project_info= $model_project->getList(['project_guid'=>$id]);
        foreach($project_info as $value){
            $value["remind_time"]=date("Y-m-d H:i:s", $value["remind_time"]);
        }
        return json($project_info);
    }

    public function showContacts(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');
        $model_project= new \app\base\model\ProjectContacts();
        $project_info= $model_project->getList(['project_guid'=>$id]);
        return json($project_info);
    }

    public function showProject(){
        $this->assignFieldValue();

        $id =$this->request->param('id');
        $model_project= new \app\base\model\Project();

        if(isset($id)){
            $project_info= $model_project->getInfoById($id)->toArray();
        }else{
            $guid=$this->request->param('guid');
            $project_info= $model_project->getInfoByGuId($guid)->toArray();
        };
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

//        dump($contacts_list);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);

//        dump($structure_list);

        return $this->fetch('project_details');
    }

    public function assignFieldValue(){
        $field_value = new FieldValue();
        $this ->assign('value',(array)$field_value);
    }

    public  function showProjectEntry(){
        return $this->fetch('project_entry');
    }

    public function showEntryMobile(){
        return $this->fetch('entry_mobile');
    }

    public  function addProjectEntry(){
        $pam_project =[
            'project_name' => 'project_name',
            'expected_duration' => 'expected_duration',
            'decoration_area' => 'decoration_area',
            'decoration_grade' => 'decoration_grade',
            'project_budget' => 'project_budget',
            'color_orientation' => 'color_orientation',
            'decoration_style' => 'decoration_style',
            'decoration_type' => 'decoration_type',
            'customer_source' => 'customer_source',
            'project_description' => 'project_description',

        ];
        $pam_contacts =[
            'contact_name' => 'contact_name',
            'contact_number' => 'contact_number',
            'sex' => 'sex',
            'customer_qq' => 'customer_qq',
            'customer_email' => 'customer_email',
            'householder_relation' => 'householder_relation',

        ];

        $data_project = $this->buildParam($pam_project,true);
        $data_project['department_id']=$this->member_info->department_id;
        $data_project['company_id']=$this->member_info->company_id;
        $validate_name = "base/ProjectEnty.edit";
        $result = $this->validate($data_project,$validate_name);
        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $data_contacts = $this->buildParam($pam_contacts,true);
        $validate_Cname = "base/ProjectEnty.cont";
        $result = $this->validate($data_contacts,$validate_Cname);
        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $model =new \app\base\model\Project();
        $data_project["feedback_stage"]="1";
        return json( $model->saveProjectWithContacts($data_project,$data_contacts));

    }
    //
    public function showDepartmentDataAll(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList([],'guid,department_name') );
    }
    //显示部门下拉
    public function showDepartmentData(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList(['company_id'=>$this->member_info->company_id],'guid,department_name') );
    }
    //显示部门下拉(部门)
    public function showDepartmentDataBy(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList(['guid'=>$this->member_info->department_id,'company_id'=>$this->member_info->company_id],'guid,department_name') );
    }
    //
    public function showUserDataAll(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList([],'uuid,username,name') );
    }
    //显示录入人下拉
    public function showUserData(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList(['company_id'=>$this->member_info->company_id],'uuid,username,name') );
    }
    //显示录入人下拉(部门)
    public function showUserDataBy(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList(['company_id'=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id],'uuid,username,name') );
    }

    //显示业务部个人的项目列表
    public function showProjectUserList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'uuid'=>$this->member_info->uuid,'feedback_stage'=>'1'],false,false);
            foreach($list["rows"] as $value){
                $ad=model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"],'transfer_type'=>'1']);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }

            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '个人项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectUserList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_list');
        }
    }
    public function projectEdit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/Project";
        $validate_name="base/Project.edit";
        $view_name="system/project_edit";
        $re=$this->editUserData($id,$action,$model_name,$validate_name,$view_name);
        if($action=="saveEdit"){
            $model=new ProjectTraceLog();
            $log=[];
            $log["log_content"]="修改项目信息";
            $log["guid"]=$id;
            $log["uuid"]=$this->uuid;
            $log["jobs_id"]=$this->member_info->jobs_id;
            $log["department_id"]=$this->member_info->department_id;
            $model->addProjectLog($log);
        }
        return $re;
    }
    //显示业务部部门的项目列表
    public function showProjectDepList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id,'feedback_stage'=>'1'],false,false);
            foreach($list["rows"] as $value){
                $ad=model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }

            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '部门项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectDepList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_list');
        }
    }
    //显示业务部公司的项目列表
    public function showProjectComList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'1'],false,false);
            foreach($list["rows"] as $value){
                $ad=model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]='';
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '公司项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectComList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_list');
        }
    }



    //转部申请
    public function showProjectAuditEdit($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $list=model("base/Project")->getPerByGuId($guid);
        if(empty($list)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>isset($list->guid) ? $list->guid : '' ,
            'project_name'=>isset($list->project_name) ? $list->project_name : '',
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_edit');
    }
    public function addProjectAuditEdit($guid="",$type=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectAudit.add';
            $model_name = 'base/ProjectAudit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["project_id"]=$guid;
            $data["company_id"]=$this->member_info->company_id;
            $data["transfer_uuid"]=$this->member_info->uuid;
            $data["transfer_status"]="1"; //  1 代表正在处于转部状态    0  表示不处于转部状态
            $data["examine_status"]="0";   //   0  表示正在等待审核   1  表示审核通过   当不通过时改变转部状态
            $data["transfer_type"]= empty($type) ? "1" :$type ;   // 1 代表是从业务阶段转部
            $result_add=$this->doModelAction($data, false, $model_name);
            if($result_add["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="转部申请";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($result_add);
        }else{
            return self::showJsonReturnCode("1003");
        }
    }

    //显示需要转部的项目
    public function showProjectAudit(){
        if($this->request->isPost()){                                                                                                                                                                        //申请的类型  1为转部申请，2为废单申请
            $list=$this->showEasyUiJsonListNoStatus('base/ProjectAudit',false,["company_id"=>$this->member_info->company_id,'examine_status'=>'0','transfer_status'=>'1','transfer_type'=>'1'],false,false);
            foreach($list["rows"] as $v){
                $model=new PersonnelUser();
                $userData=$model->setCacheSystem()["user"][$v["transfer_uuid"]];
                $department=$model->setCacheSystem()["department"][$userData["department_id"]];
                $v["name"]=$userData["name"];
                $v["department_name"]=$department["department_name"];
                $project=model("base/Project")->getPerByGuid($v["project_id"]);
                $v["project_name"]=$project["project_name"];
                $v['project_cid']=$project["id"];
            }
            return $list;
        }else{
            $assign_data = [
                'title' => '转部审核',
                'data_url' => "showProjectAudit",
                'dialog_url'=>url("showProjectEditAudit")
            ];
            $this->assign($assign_data);
            return $this->fetch('project_audit');
        }
    }
    //转部审核
    public function showProjectEditAudit($action="",$guid="",$id=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if(empty($action)){
            return self::showJsonReturnCode("1003");
        }
        switch($action){
            case "show":
                config(['default_ajax_return' => 'html',]);
                if(empty($guid)){
                    return self::showJsonReturnCode("1003");
                }
                $list=model("base/Project")->getPerByGuId($guid);
                if(empty($list)){
                    return self::showJsonReturnCode("1003");
                }
                $assign_data = [
                    'guid'=>isset($list->guid) ? $list->guid : '' ,
                    'project_name'=>isset($list->project_name) ? $list->project_name : '',
                ];
                $this->assign($assign_data);
                return $this->fetch('project/project_transfer_audit');
                break;
            case "add":
                if(empty($id)){
                    return self::showJsonReturnCode("1003");
                }
                $data=$this->request->post();
                $validate_name = 'base/ProjectAudit.save';
                $model_name = 'base/ProjectAudit';
                $result = $this->validate($data, $validate_name);
                if(gettype($result)=='string'){
                    return ['code' => '1003', 'msg' => $result,];
                }
                $arr=[
                    "examine_status"=>$data['examine_status'],
                    "examine_desc"=>$data["examine_desc"],
                    'examine_uuid'=>$this->member_info->uuid,
                    'transfer_status'=>'2' //已经申请过的
                ];
                $re=model("base/ProjectAudit")->save($arr,["id"=>$id]);
                if($data['examine_status']=="1"){
                    $rq=model("base/Project")->save(["feedback_stage"=>'2'],["guid"=>$guid]);
                    if($rq!="1"){
                        return ['code' => '1010', 'msg' => '转部失败，请联系管理员',];
                    }else{
                        $cont["project_id"]=$guid;
                        $pro_data=model("base/Project")->getPerByGuid($guid);
                        $cont["company_id"]=$pro_data["company_id"];
//                        $cont["department_id"]=$pro_data["department_id"];
                        $cont["uuid"]=$pro_data["uuid"];
                        $model=new PersonnelUser();
                        $cont["department_type"]=$model->setCacheSystem()["department"][$pro_data["department_id"]]["department_type"];
                        model("base/ProjectRelatedPerson")->save($cont);
                    }
                }
                if($re=="1"){
                    $model=new ProjectTraceLog();
                    $log=[];
                    $log["log_content"]="转部审核";
                    $log["guid"]=$guid;
                    $log["uuid"]=$this->uuid;
                    $log["jobs_id"]=$this->member_info->jobs_id;
                    $log['department_id']=$this->member_info->department_id;
                    $model->addProjectLog($log);

                    return ['code' => '1001', 'msg' => '审核成功',];
                }
                break;
            default:;
        }
    }
    //操作记录
    public function showProjectAuditLog($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>$guid
        ];
        $this->assign($assign_data);
        return $this->fetch('projectAuditLog');
    }
}