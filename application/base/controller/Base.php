<?php
namespace app\base\controller;
use app\base\model\PersonnelLogRecord;
use think\Config;
use think\Controller;
use think\Request;
use think\Session;
use think\Loader;
/**
 * Created by PhpStorm.
 * Power by Mikkle
 * QQ:776329498
 * Date: 2017/4/12
 * Time: 13:28
 */
abstract class Base extends Controller
{
    protected $isLogin = false;  //判断是否登陆
    protected $uuid;              //登陆后的UUID

    protected $error;             //出错时候的记录
    protected $log=[];            //要保存的记录
    protected $save_log = false ;
    protected $member_info;

    protected $version; //版本号

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        date_default_timezone_set('Asia/Shanghai');
    }


    /**
     * 获取返回码数组
     * Power by Mikkle
     * QQ:776329498
     * @param string $code
     * @param array $data
     * @param string $msg
     * @return array
     */
    static public function showReturnCode($code = '', $data = [], $msg = '')
    {
        $return_data = [
            'code' => '500',
            'msg' => '未定义消息',
            'data' => $code == 1001 ? $data : [],
        ];
        if (empty($code)) return $return_data;
        $return_data['code'] = $code;
        if(!empty($msg)){
            $return_data['msg'] = $msg;
        }else if (isset(ReturnCode::$return_code[$code]) ) {
            $return_data['msg'] = ReturnCode::$return_code[$code];
        }
        return $return_data;
    }

    /**
     * 获取返回码数组别名函数 以json格式返回
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param string $code
     * @param array $data
     * @param string $msg
     * @return array
     */
    static public function showJsonReturnCode($code = '', $data = [], $msg = ''){
        Config::set(['default_return_type'    => 'json',]);
        return self::showReturnCode($code, $data, $msg);
    }

    /**
     * 获取返回码数组别名函数 无返回值
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param string $code
     * @param string $msg
     * @return array
     */
    static public function showReturnCodeWithOutData($code = '', $msg = '')
    {
        return self::showReturnCode($code,[],$msg);
    }

    /**
     * 获取返回码数组别名函数 以json格式返回 无返回值
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param string $code
     * @param string $msg
     * @return array
     */
    static public function showJsonReturnCodeWithOutData($code = '', $msg = ''){
        Config::set(['default_return_type'    => 'json',]);
        return self::showReturnCode($code, [], $msg);
    }


    /**
     * 获取当前类名称
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param bool|false $all
     * @return string
     */
    public function getClassName($all = false){
        return $all
            ? get_called_class()
            : basename(str_replace('\\', '/', get_called_class()),'.php');
    }



    protected function saveLog(){
        if (!empty($this->log)){
            foreach($this->log as $value){
                dump($value);
            }
        }
    }

    public function __destruct()
    {
        // TODO: Implement __destruct() method.
        //记录日志
        if (!empty($this->log) && $this->save_log == true){
            $this->saveLog();
        }

    }

    /**
     * 快速修改
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param bool|false $parameter
     * @param bool|false $validate_name
     * @param bool|false $model_name
     * @param array $save_data
     * @return array
     */
    protected function editData($parameter = false, $validate_name = false, $model_name = false, $save_data = [])
    {
        if (empty($save_data)) {
            if ($parameter != false && is_array($parameter)) {
                $data = $this->buildParam($parameter);
            } else {
                $data = $this->request->post();
            }
        } else {
            $data = $save_data;
        }
        if (!$data) return $this->showReturnCode(1004);
        if ($this->checkLoginGlobal() && !isset($data['uuid'])) $data['uuid'] = $this->uuid;
        if ($validate_name != false) {
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return $this->showReturnCodeWithOutData(1003,$result);
        }
        $model_edit = Loader::model($model_name);
        if (!$model_edit) return ['code' => 1010];
        return $model_edit->editData($data);
    }

    /**
     * 快速调用执行model函数
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param $param_data
     * @param bool|false $validate_name
     * @param bool|false $model_name
     * @param string $action_name
     * @return array
     */
    protected function doModelAction($param_data,$validate_name = false, $model_name = false,$action_name='editData'){

        if ($validate_name != false) {
            $result = $this->validate($param_data, $validate_name);
            if (true !== $result) return $this->showReturnCode(1003, [], $result);
        }
        $model_edit = Loader::model($model_name);
        if (!$model_edit) return $this->showReturnCode(1010);
        return $model_edit->$action_name($param_data);
    }

    /**
     * 数据库字段 网页字段转换
     * 标识为数据库字段 值为浏览器提交字段
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param $array   标识为数据库字段 值为浏览器提交字段
     * @param bool|false $uuid  是否追加UUID信息
     * @return array
     */
    protected function buildParam($array,$uuid=false)
    {
        $data=[];
        foreach( $array as $item=>$value ){
            $data[$item] = $this->request->param($value);
        }
        if ($uuid && isset($this->uuid)){
            $data['uuid'] = $this->uuid;
        }
        return $data;
    }

    /**
     * 设置全局登录
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param array $member_info
     * @param int $login_type
     */
    public function setLoginGlobal($member_info = [], $login_type = 0)
    {
        if ($member_info) {
            Session::set('member_info', $member_info, 'Global');
            Session::set('uuid', $member_info['uuid'], 'Global');
        }
        $login_name =isset( ApiCode::$globalLoginCode[$login_type])?ApiCode::$globalLoginCode[$login_type]:'其他登陆方式';
        $data = [
            'uuid' => $member_info['uuid'],
            'name' => '用户登录',
            'desc' => '用户登录,登录方式:' . $login_name,
            'ip' => $this->request->ip(),
        ];
        $model = new PersonnelLogRecord();
        $model->editData($data);
    }

    /**
     * Power by Mikkle
     * QQ:776329498
     * @return bool
     */
    public function checkLoginGlobal()
    {
        if (Session::has('uuid', 'Global') && Session::has('member_info', 'Global')) {
            $this->uuid = Session::get('uuid', 'Global');
            $this->member_info =Session::get('member_info', 'Global');
            return true;
        } else {
            return false;
        }
    }

    static public function echoHtml(){
        Config::set(['default_ajax_return' => 'html',]);
    }

    static public function echoJson()
    {
        Config::set(['default_ajax_return' => 'json',]);
    }


    protected function logoutGlobal(){

        Session::delete('member_info', 'Global');
        Session::delete('uuid', 'Global');
        $this->isLogin = false;
        $this->uuid = null;
        return true;
    }
    protected function getData(){
        if ($this->request->isPost()){
            return $this->request->post();
        }else{
            return $this->request->get();
        }
    }

    //读取版本信息
    protected  function readVersion(){
        $file='install/version/version_number.txt';
        if (empty($this->version)){
            if(is_file(APP_PATH . $file)){
                $this->version=file_get_contents(APP_PATH .$file);
            }else{
                $this->version='1.0.0';
            }
        }
        return $this->version;
    }

    

}