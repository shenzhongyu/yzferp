<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\controller\Upload;
use app\base\model\Base;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelUser;
use app\base\model\project\ProjectField;
use app\base\model\project\ProjectPhoto;
use app\base\model\project\WasteApply;
use app\base\model\ProjectAudit;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Loader;
use think\Log;
use think\Session;
use app\erp\config\Config;


class Project extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->config_list = Config::$project;
    }
   
    //显示添加联系人页面
    public function showContactEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('contacts_edit');
    }
    public function showDepartmentJson(){
        $model=new PersonnelDepartment();
        $department_type=array_search("设计部",FieldValue::getFieldValue("department_type"))?:3;
        $list=$model->getList(['company_id'=>$this->member_info->company_id,'department_type'=>$department_type],'guid,department_name');
        return $list;
    }
    public function showDepartmentJsonCopy(){
        $model=new PersonnelDepartment();
        $department_type=array_search("设计部",FieldValue::getFieldValue("department_type"))?:3;
        $list=$model->getList(['company_id'=>$this->member_info->company_id,'department_type'=>$department_type],'guid,department_name');
        return $list;
    }
    /*删除项目*/
    public function delproject($id=""){
        if(empty($id)){
            return self::showJsonReturnCode(1003);
        }
        if ($this->request->isPost()){
            $model=new \app\base\model\Project();
            return $model->delData($id);

        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*项目联系人的添加*/
    public function addContactsData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectContacts.edit';
            $model_name='base/ProjectContacts';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增联系人";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }

    }
    /*项目联系人的修改*/
    public function editContactsData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectContacts.edit';
            $model_name='base/ProjectContacts';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");

            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改联系人";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    public function showStructureEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('structure_edit');
    }
    /*项目房屋数据的添加*/
    public function addStructureData(){
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectStructure.edit';
            $model_name='base/ProjectStructure';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增房屋结构";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return  json($re);
        }
    }
    /*项目房屋结构的修改*/
    public function editStructureData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectStructure.edit';
            $model_name='base/ProjectStructure';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改房屋结构";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }



    /*添加日志.*/
    public function addTraceLogData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['uuid']=$this->uuid;
            $data['project_guid']=$this->request->param("project_guid");
            $data['department_id']=$this->member_info->department_id;
            $data['jobs_id']=$this->member_info->jobs_id;
            $data['log_type']='1';
            $validate_name='base/ProjectTraceLog.edit';
            $model_name='base/ProjectTraceLog';
            return json($this->editData(false,$validate_name,$model_name,$data));

        }

    }
    /*提醒时间*/
    public function addTraceTimeData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['uuid']=$this->uuid;
            $data['project_guid']=$this->request->param("project_guid");
            $data['department_id']=$this->member_info->department_id;
            $data['jobs_id']=$this->member_info->jobs_id;
            $validate_time='base/ProjectTraceLog.time';
            $model_time='base/ProjectRemindTime';
            if ($validate_time != false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data["remind_time"]=strtotime($data['remind_time']);
            $re=$this->editData(false,$validate_time,$model_time,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增提醒时间";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re );
        }

    }
    /*显示楼盘信息修改页*/
    public function showBuildingEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('building_edit');
    }
    /*项目楼盘的添加*/
    public function addBuildingData()
    {
        if($this->request->isAjax()){
            $data = $this->request->post();
            $data['project_guid']=$this->request->param('project_guid');
            $validate_name='base/ProjectBuilding.edit';
            $model_name='base/ProjectBuilding';
            $re=$this->editData(false,$validate_name,$model_name,$data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="新增楼盘信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    /*项目楼盘信息修改*/
    public function editBuildingData(){
        if($this->request->isAjax()){
            $validate_name='base/ProjectBuilding.edit';
            $model_name='base/ProjectBuilding';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改楼盘信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    /*显示项目修改页*/
    public function showProjectEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('system/project_edit');
    }
    /*修改项目信息*/
    public function editProjectData(){
        if($this->request->isAjax()){
            $validate_name='base/Project.edit';
            $model_name='base/Project';
            $save_data = $this->request->post();
            $save_data['guid'] = $this->request->param("id");
            $re=$this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid');
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改项目信息";
                $log["guid"]=$this->request->param('project_guid');
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return json($re);
        }
    }
    /*项目日志的数据显示*/
    public function showLog(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');
        $model_project= new \app\base\model\ProjectTraceLog();
        $model_user= new \app\base\model\PersonnelUser();
        $model_jobs= new \app\base\model\PersonnelJobs();
        $model_dep= new \app\base\model\PersonnelDepartment();
        $pro_log_list=$this->showEasyUiJsonList('base/ProjectTraceLog',false,['project_guid'=>$id],false,[],false);
//        $project_info= $model_project->getList(['project_guid'=>$id]);
        if(!empty($pro_log_list['rows'])){
            foreach($pro_log_list['rows'] as $value){
                $project_user=$model_user->getInfoByUuId($value["uuid"]);
                $project_dep=$model_dep->getInfoByGuId($value["department_id"]);
                $project_jobs=$model_jobs->getInfoByGuId($value["jobs_id"]);
                $value["username"]=$project_user['username'];
                $value["department_name"]=$project_dep['department_name'];
                $value["jobs_name"]=$project_jobs['jobs_name'];
            }
            return json($pro_log_list);
        }
    }

    /*项目的提醒数据显示*/
    public function showRemindTime(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');
        $model_project= new \app\base\model\ProjectRemindTime();
        $list=$this->showEasyUiJsonList("base/ProjectRemindTime",false,["project_guid"=>$id]);
//        $project_info= $model_project->getList(['project_guid'=>$id]);
//        foreach($project_info as $value){
//            $value["remind_time"]=date("Y-m-d H:i:s", $value["remind_time"]);
//        }
        $list=$model_project->getTimeHours($list,'remind_time');
        return json($list);
    }
    /*项目的联系人数据显示*/
    public function showContacts(){
        $this->assignFieldValue();
        $id =$this->request->param('project_guid');
        $model_project= new \app\base\model\ProjectContacts();
        $project_info= $model_project->getList(['project_guid'=>$id]);
        return json($project_info);
    }
    /*查看项目信息（未判断权限）*/
    public function showProject(){   //
        $this->assignFieldValue();

        $id =$this->request->param('id');
        $model_project= new \app\base\model\Project();

        if(isset($id)){
            $project_info= $model_project->getInfoById($id)->toArray();
        }else{
            $guid=$this->request->param('guid');
            $project_info= $model_project->getInfoByGuId($guid)->toArray();
        };
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

//        dump($contacts_list);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);



        return $this->fetch('project_details');
    }
    /*查看项目信息（判断公司权限）*/
    public function showProjectOfCompany(){   //
        $this->assignFieldValue();

        $id =$this->request->param('id');
        $model_project= new \app\base\model\Project();

        if(isset($id)){
            $project_info= $model_project->getInfoById($id);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        }else{
            $guid=$this->request->param('guid');
            $project_info= $model_project->getInfoByGuId($guid);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        };
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

//        dump($contacts_list);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);
        if ($project_info['company_id']!=$this->member_info->company_id){
            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
            return self::showJsonReturnCode(1010,[],'无权限访问');
        }


        return $this->fetch('project_details');
    }
    /*查看项目信息（判断部门权限）*/
    public function showProjectOfDepartment(){   //
        $this->assignFieldValue();
        $id =$this->request->param('id');
        $model_project= new \app\base\model\Project();

        if(isset($id)){
            $project_info= $model_project->getInfoById($id);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        }else{
            $guid=$this->request->param('guid');
            $project_info= $model_project->getInfoByGuId($guid);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        };
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

//        dump($contacts_list);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);
        if ($project_info['company_id']!=$this->member_info->company_id){
            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
            return self::showJsonReturnCode(1010,[],'无权限访问');
        }
        if ($project_info['department_id']!=$this->member_info->department_id && $project_info['design_department']!=$this->member_info->department_id){
            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
            return self::showJsonReturnCode(1010,[],'无权限访问');
        }


        return $this->fetch('project_details');
    }
    /*查看项目信息（判断个人权限）*/
    public function showProjectOfUser(){
        $this->assignFieldValue();
        $id =$this->request->param('id');
        $model_project= new \app\base\model\Project();

        if(isset($id)){
            $project_info= $model_project->getInfoById($id);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        }else{
            $guid=$this->request->param('guid');
            $project_info= $model_project->getInfoByGuId($guid);
            if (empty($project_info)){
                return self::showJsonReturnCode(1010);
            }
            $project_info=is_object($project_info)?$project_info->toArray():$project_info;
        };
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

//        dump($contacts_list);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);

        if ($project_info['company_id']!=$this->member_info->company_id){
            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
            return self::showJsonReturnCode(1010,[],'无权限访问');
        }
          //可能出现业务员转部情况转部
//        if ($project_info['department_id']!=$this->member_info->department_id){
//            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
//            return self::showJsonReturnCode(1010,[],'无权限访问');
//        }
        $list=Loader::model('base/ProjectRelatedPerson')->getList(['company_id'=>$this->member_info->company_id,'project_id'=>$guid]);
        $flag=false;
        if (!empty($list)){
            foreach ($list as $value){
                if ($value['uuid']==$this->uuid){
                    $flag=true;
                    break;
                }
            }
        }
        if ($project_info['uuid']!=$this->member_info->uuid && !$flag){
            Log::error($this->member_info->name.'非法访问项目'.$project_info['project_name']);
            return self::showJsonReturnCode(1010,[],'无权限访问');
        }

        return $this->fetch('project_details');
    }




    public function assignFieldValue(){
        $field_value = new FieldValue();
        $this ->assign('value',(array)$field_value);
    }
    /*业务登记頁面*/
    public  function showProjectEntry(){
        $arr=[
          'value'=>0  ,//市场部录入的
        ];
        $this->assign($arr);
        return $this->fetch('project_entry');
    }
    /*客户录入页面*/
    public  function showProjectEntryCopy(){
        $arr=[
            'value'=>1  //说明是客服部录入的
        ];
        $this->assign($arr);
        return $this->fetch('project_entry_copy');
    }

    public function showEntryMobile(){
        return $this->fetch('entry_mobile');
    }
    /*客户录入*/
    public  function addProjectEntryCopy(){   // 客服录入
        $pam_project =[
            'project_name' => 'project_name',
            'expected_duration' => 'expected_duration',
            'decoration_area' => 'decoration_area',
            'decoration_grade' => 'decoration_grade',
            'project_budget' => 'project_budget',
            'color_orientation' => 'color_orientation',
            'decoration_style' => 'decoration_style',
            'decoration_type' => 'decoration_type',
            'customer_source' => 'customer_source',
            'project_description' => 'project_description',
            'project_address'=>'project_address',

        ];
        $pam_contacts =[
            'contact_name' => 'contact_name',
            'contact_number' => 'contact_number',
            'sex' => 'sex',
            'customer_qq' => 'customer_qq',
            'customer_email' => 'customer_email',
            'householder_relation' => 'householder_relation',

        ];

        $data_project = $this->buildParam($pam_project,true);
        $data_project['department_id']=$this->member_info->department_id;
        $data_project['company_id']=$this->member_info->company_id;
        $validate_name = "base/ProjectEnty.edit";
        $result = $this->validate($data_project,$validate_name);

        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $data_contacts = $this->buildParam($pam_contacts,true);
        $validate_Cname = "base/ProjectEnty.cont";
        $result = $this->validate($data_contacts,$validate_Cname);
        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $model =new \app\base\model\Project();
        $data_project["feedback_stage"]="1";
        $data_project["project_type"]="1";
        return json( $model->saveProjectWithContacts($data_project,$data_contacts));
    }
    /*市场录入*/
    public  function addProjectEntry(){
        $pam_project =[
            'project_name' => 'project_name',
            'expected_duration' => 'expected_duration',
            'decoration_area' => 'decoration_area',
            'decoration_grade' => 'decoration_grade',
            'project_budget' => 'project_budget',
            'color_orientation' => 'color_orientation',
            'decoration_style' => 'decoration_style',
            'decoration_type' => 'decoration_type',
            'customer_source' => 'customer_source',
            'project_description' => 'project_description',
            'project_address'=>'project_address',
        ];
        $pam_contacts =[
            'contact_name' => 'contact_name',
            'contact_number' => 'contact_number',
            'sex' => 'sex',
            'customer_qq' => 'customer_qq',
            'customer_email' => 'customer_email',
            'householder_relation' => 'householder_relation',

        ];

        $data_project = $this->buildParam($pam_project,true);
        $data_project['department_id']=$this->member_info->department_id;
        $data_project['company_id']=$this->member_info->company_id;
        $validate_name = "base/ProjectEnty.edit";
        $result = $this->validate($data_project,$validate_name);

        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $data_contacts = $this->buildParam($pam_contacts,true);
        $validate_Cname = "base/ProjectEnty.cont";
        $result = $this->validate($data_contacts,$validate_Cname);
        if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);

        $model =new \app\base\model\Project();
        $data_project["feedback_stage"]="1";
        $data_project["project_type"]="0";
       return json( $model->saveProjectWithContacts($data_project,$data_contacts));
    }
    //
    public function showDepartmentDataAll(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList([],'guid,department_name') );
    }
    //显示部门下拉
    public function showDepartmentData(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList(['company_id'=>$this->member_info->company_id],'guid,department_name') );
    }
    //显示部门下拉(部门)
    public function showDepartmentDataBy(){
        $model=new \app\base\model\PersonnelDepartment();
        return json( $model->getList(['guid'=>$this->member_info->department_id,'company_id'=>$this->member_info->company_id],'guid,department_name') );
    }
    //
    public function showUserDataAll(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList([],'uuid,username,name') );
    }
    //显示录入人下拉
    public function showUserData(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList(['company_id'=>$this->member_info->company_id],'uuid,username,name') );
    }
    //显示录入人下拉(部门)
    public function showUserDataBy(){
        $model=new \app\base\model\PersonnelUser();
        return json( $model->getList(['company_id'=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id],'uuid,username,name') );
    }

    /*显示业务部个人的项目列表*/
    public function showProjectUserList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'uuid'=>$this->member_info->uuid,'feedback_stage'=>'1','project_type'=>0],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"],'transfer_type'=>'1']);

                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }
                $wa=Loader::model('base/project/WasteApply')->where(['project_id'=>$value['guid'],'status'=>1,'examine_status'=>0])->find();
                $value['waste']=empty($wa) ? 0 :1;
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '个人项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectUserList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_user_list');
        }
    }
    /*显示客户部个人的项目列表*/
    public function showProjectUserListCopy(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'uuid'=>$this->member_info->uuid,'feedback_stage'=>'1','project_type'=>1],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"],'transfer_type'=>'1']);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }

            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '个人项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectUserListCopy'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_user_list_copy');
        }
    }
    public function showAddField(){ //个人项目添加附件
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
        ];
        $this->assign($assign_data);
        return $this->fetch('addFieldHtml');
    }
    /*附件数据保存*/
    public function AddField($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->post()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            if (isset($data['photo_name']) || isset($data['photo_address'])){
                $model=new ProjectPhoto();
                $validate_name = 'base/ProjectField.addP';

            }else if (isset($data['field_name']) || isset($data['field_address'])){
                $model=new ProjectField();
                $validate_name = 'base/ProjectField.addF';
            }else{
                return self::showReturnCodeWithOutData(1003);
            }
            $result= $this->validate($data, $validate_name);
            if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);
            $data['uuid']=$this->uuid;
            $data['uuid_name']=$this->member_info->name;
            $data['company_id']=$this->member_info->company_id;
            $data['project_id']=$guid;
            $re=$model->saveData($data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="上传了项目附件";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*删除项目图片*/
    public function delProPhoto(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            if (!isset($data['guid'])) return self::showReturnCodeWithOutData(1003);
            $model=new ProjectPhoto();
            return $model->delProPhoto($data['guid']);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*删除项目附件*/
    public function delProField(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            if (!isset($data['guid'])) return self::showReturnCodeWithOutData(1003);
            $model=new ProjectField();
            return $model->delProField($data['guid']);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }


    public function showPhotoList($project_id=""){ //项目图片列表
        if (empty($project_id)) return self::showReturnCodeWithOutData(1003);
        $model=new ProjectPhoto();
        $list=$model->getList(['project_id'=>$project_id]);
        return $list;
    }
    public function showFieldList($project_id=""){ //项目图片列表
        if (empty($project_id)) return self::showReturnCodeWithOutData(1003);
        $model=new ProjectField();
        $list=$model->getList(['project_id'=>$project_id],'guid,field_name,uuid_name,field_m');
        return $list;
    }
    public function showHtml($m="",$type=""){
        if (empty($m)) return self::showReturnCodeWithOutData(1003);
        if (empty($type)) return self::showReturnCodeWithOutData(1003);
        if ($type=="field"){
            Upload::downloadFileByMd5($m);
        }else if($type=="photo"){
            Upload::downloadPictureByMd5($m);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*修改项目信息*/
    public function projectEdit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/Project";
        $validate_name="base/Project.edit";
        $view_name="system/project_edit";
        $re=$this->editUserData($id,$action,$model_name,$validate_name,$view_name);
        if($action=="saveEdit"){
            $model=new ProjectTraceLog();
            $log=[];
            $log["log_content"]="修改项目信息";
            $log["guid"]=$id;
            $log["uuid"]=$this->uuid;
            $log["jobs_id"]=$this->member_info->jobs_id;
            $log["department_id"]=$this->member_info->department_id;
            $model->addProjectLog($log);
        }
        return $re;
    }
    /*显示市场部部门的项目列表*/
    public function showProjectDepList(){  //
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id,'feedback_stage'=>'1','project_type'=>0],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }

            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '部门项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectDepList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_dep_list');
        }
    }
    /*显示客服部部门的项目列表*/
    public function showServiceDepList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id,'feedback_stage'=>'1','project_type'=>1],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]="";
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }

            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '部门项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showServiceDepList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_dep_list_service');
        }
    }
    /*显示公司市场部的项目列表*/
    public function showProjectComList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'1','project_type'=>0],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]='';
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '公司项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectComList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_list');
        }
    }
    /*显示公司客服部的项目列表*/
    public function showProjectSevComList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'1','project_type'=>1],false,false);
            foreach($list["rows"] as $value){
                $ad=Loader::model("base/ProjectAudit")->getDataByProject(["project_id"=>$value["guid"]]);
                if(empty($ad)){
                    $value["transfer_status"]="0";
                    $value["transfer_desc"]="";
                    $value["examine_status"]="";
                    $value["examine_desc"]="";
//                    $value["application_type"]='';
                }else{
                    $value["transfer_status"]=$ad[0]["transfer_status"];  //转部状态
                    $value["transfer_desc"]=$ad[0]["transfer_desc"];
                    $value["examine_status"]=$ad[0]["examine_status"];    //审核状态
                    $value["examine_desc"]=$ad[0]["examine_desc"];
//                    $value["application_type"]=$ad[0]["application_type"];
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '公司项目表',
                'dialog_url' => 'projectEdit',
                'data_url' => url('showProjectSevComList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('pro_list_sev');
        }
    }



    /*市场部转部申请*/
    public function showProjectAuditEdit($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $list=Loader::model("base/Project")->getPerByGuId($guid);
        if(empty($list)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>isset($list->guid) ? $list->guid : '' ,
            'project_name'=>isset($list->project_name) ? $list->project_name : '',
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_edit');
    }
    /*客服部转设计部申请*/
    public function showProjectAuditEditCopy($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $list=Loader::model("base/Project")->getPerByGuId($guid);
        if(empty($list)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>isset($list->guid) ? $list->guid : '' ,
            'project_name'=>isset($list->project_name) ? $list->project_name : '',
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_edit');
    }
    /*市场部转部申请*/
    public function addProjectAuditEdit($guid="",$type=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectAudit.add';
            $model_name = new ProjectAudit();
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["project_id"]=$guid;
            $data["company_id"]=$this->member_info->company_id;
            $data["transfer_uuid"]=$this->member_info->uuid;
            $data["transfer_status"]="1"; //  1 代表正在处于转部状态    0  表示不处于转部状态
            $data["examine_status"]="0";   //   0  表示正在等待审核   1  表示审核通过   当不通过时改变转部状态
            $data["transfer_type"]= empty($type) ? "1" :$type ;   // 1 代表是从业务阶段转部
            $model_project=new \app\base\model\Project();
            $req=$model_project->where(['guid'=>$guid,'status'=>1])->value('feedback_stage');
            switch ($req){  //判断是从哪个阶段提交的转部申请
                case "1":
                    $text='业务阶段转设计阶段申请';
                    break;
                case "2":
                    $text='设计阶段转工程阶段申请';
                    break;
                default:
                    $text='未知转部申请';
                    break;
            }
            $result_add=$model_name->addProjectAudit($data);
            if($result_add["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$text;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('business');

            }
            return json($result_add);
        }else{
            return self::showJsonReturnCode("1003");
        }
    }
    /*客服部转部申请*/
    public function addProjectAuditEditCopy($guid="",$type=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectAudit.add';
            $model_name = new ProjectAudit();
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["project_id"]=$guid;
            $data["company_id"]=$this->member_info->company_id;
            $data["transfer_uuid"]=$this->member_info->uuid;
            $data["transfer_status"]="1"; //  1 代表正在处于转部状态    0  表示不处于转部状态
            $data["examine_status"]="0";   //   0  表示正在等待审核   1  表示审核通过   当不通过时改变转部状态
            $data["transfer_type"]= empty($type) ? "1" :$type ;   // 1 代表是从业务阶段转部
            $model_project=new \app\base\model\Project();
            $req=$model_project->where(['guid'=>$guid,'status'=>1])->value('feedback_stage');
            switch ($req){  //判断是从哪个阶段提交的转部申请
                case "1":
                    $text='业务阶段转设计阶段申请';
                    break;
                case "2":
                    $text='设计阶段转工程阶段申请';
                    break;
                default:
                    $text='未知转部申请';
                    break;
            }
            $result_add=$model_name->addProjectAudit($data);
            if($result_add["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$text;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('business');

            }
            return json($result_add);
        }else{
            return self::showJsonReturnCode("1003");
        }
    }

    /*显示需要转部的项目*/
    public function showProjectAudit(){
        if($this->request->isPost()){                                                                                                                                                                        //申请的类型  1为转部申请，2为废单申请
            $list=$this->showEasyUiJsonListNoStatus('base/ProjectAudit',false,["company_id"=>$this->member_info->company_id,'examine_status'=>'0','transfer_status'=>'1','transfer_type'=>'1'],false,false);
            $user_model=new PersonnelUser();
            $dep_model=new PersonnelDepartment();
            foreach($list["rows"] as $key=>$v){
                $project=Loader::model("base/Project")->getPerByGuid($v["project_id"]);
                if (empty($project)){
                    unset($list['rows'][$key]);
                    continue;
                }
                $userData=$user_model->getInfoByGuId($v["transfer_uuid"]);
                if(!empty($userData)){
                    $department=$dep_model->getInfoByGuId($userData["department_id"]);
                    $v["name"]=$userData["name"];
                    $v["department_name"]=$department["department_name"];
                    $v["project_name"]=$project["project_name"];
                    $v['project_cid']=$project["id"];
                }else{
                    $v["name"]='';
                    $v["department_name"]='';
                    $v["project_name"]=$project["project_name"];
                    $v['project_cid']=$project["id"];
                }

            }
            return $list;
        }else{
            $assign_data = [
                'title' => '转部审核',
                'data_url' => "showProjectAudit",
                'dialog_url'=>url("showProjectEditAudit")
            ];
            $this->assign($assign_data);
            return $this->fetch('project_audit');
        }
    }

    /*转部审核*/
    public function showProjectEditAudit($guid="",$id=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if ($this->request->isPost()){
            if(empty($id)){
                return self::showJsonReturnCode("1003");
            }
            $data=$this->request->post();
            $validate_name = 'base/ProjectAudit.save';
            $result = $this->validate($data, $validate_name);
            if(gettype($result)=='string'){
                return ['code' => '1003', 'msg' => $result,];
            }
            $data['uuid']=$this->uuid;
            $model_project=new \app\base\model\Project();
            $req=$model_project->where(['guid'=>$guid,'status'=>1])->value('feedback_stage');

            $re=Loader::model("base/ProjectAudit")->editProjectAudit($data,$id);
            switch ($req){  //判断是从哪个阶段提交的转部申请
                case "1":
                    $text='业务阶段转设计阶段审核';
                    break;
                case "2":
                    $text='设计阶段转工程阶段审核';
                    break;
                default:
                    $text='未知转部审核';
                    break;
            }
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$text;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            if(empty($guid)){
                return self::showJsonReturnCode("1003");
            }
            $list=Loader::model("base/Project")->getPerByGuId($guid);
            if(empty($list)){
                return self::showJsonReturnCode("1003");
            }
            $assign_data = [
                'guid'=>isset($list->guid) ? $list->guid : '' ,
                'project_name'=>isset($list->project_name) ? $list->project_name : '',
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('project/project_transfer_audit');
        }
    }
    /*操作记录*/
    public function showProjectAuditLog($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>$guid
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_log');
    }
    /*操作记录*/
    public function showProjectAuditLogCopy($guid=""){
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>$guid
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_log');
    }

    /*客服部废单申请*/
    public function wasteApplyCopy($guid=""){  //
        if (empty($guid)) return self::showReturnCode(1003);
        $pro=\app\base\model\Project::quickGet($guid);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteApply();
            $validate_time='base/Project.wasteApply';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['company_id']=$this->member_info->company_id;
            $data['apply_uuid']=$this->uuid;
            $data['project_id']=$guid;
            $data['project_type']=empty($pro)?"":$pro['project_type'];
            $pro=\app\base\model\Project::quickGet($guid);
            $data['project_name']=empty($pro)?"":$pro['project_name'];
            $user=PersonnelUser::quickGet($this->uuid);
            $data['apply_name']=empty($user)?"":$user['name'];
            $re=$model->saveApplyData($data);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='废单申请,原因：'.$data['apply_desc'];
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            $arr=[
               'title'=>empty($pro)?"":$pro['project_name'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("waste_apply");
        }
    }
    /*废单项目审核列表*/
    public function wasteApplyList(){  //
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'examine_status'=>0,
                'project_type'=>1,
            ];
//            $model=new WasteApply();
            $list=$this->showEasyUiJsonList('base/project/WasteApply',false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $pro=\app\base\model\Project::quickGet($value['project_id']);
                    $value['project_name']=empty($pro)?"":$pro['project_name'];
                    $user=PersonnelUser::quickGet($value['apply_uuid']);
                    $value['name']=empty($user)?"":$user['name'];
                }
            }
            return $list;
        }else{
            $arr=[
                'title'=>'废单审核列表',
                'data_url'=>url('wasteApplyList'),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("project_waste_apply");
        }
    }
    /*客服部废单审核*/
    public function showWasteApplyEdit($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteApply();
            $re=$model->editProjectAudit($data,$guid);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='废单审核,原因：'.isset($data['examine_desc'])?$data['examine_desc']:'';
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            if(empty($guid)){
                return self::showJsonReturnCode("1003");
            }
            $list=\app\base\model\Project::quickGet($guid);
            if(empty($list)){
                return self::showJsonReturnCode("1003");
            }
            $assign_data = [
                'guid'=>isset($list->guid) ? $list->guid : '' ,
                'project_name'=>$list['project_name'],
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('project/project_transfer_audit');
        }
    }


    /*市场部废单申请*/
    public function wasteApply($guid=""){  //
        if (empty($guid)) return self::showReturnCode(1003);
        $pro=\app\base\model\Project::quickGet($guid);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteApply();
            $validate_time='base/Project.wasteApply';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['company_id']=$this->member_info->company_id;
            $data['apply_uuid']=$this->uuid;
            $data['project_id']=$guid;
            $data['project_type']=empty($pro)?"":$pro['project_type'];
            $pro=\app\base\model\Project::quickGet($guid);
            $data['project_name']=empty($pro)?"":$pro['project_name'];
            $user=PersonnelUser::quickGet($this->uuid);
            $data['apply_name']=empty($user)?"":$user['name'];
            $re=$model->saveApplyData($data);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='废单申请,原因：'.$data['apply_desc'];
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            $arr=[
                'title'=>empty($pro)?"":$pro['project_name'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("waste_apply");
        }
    }
    /*市场废单项目审核列表*/
    public function wasteApplyListCopy(){
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'examine_status'=>0,
                'project_type'=>0,
            ];
            $list=$this->showEasyUiJsonList('base/project/WasteApply',false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $pro=\app\base\model\Project::quickGet($value['project_id']);
                    $value['project_name']=empty($pro)?"":$pro['project_name'];
                    $user=PersonnelUser::quickGet($value['apply_uuid']);
                    $value['name']=empty($user)?"":$user['name'];
                }
            }
            return $list;
        }else{
            $arr=[
                'title'=>'废单审核列表',
                'data_url'=>url('wasteApplyListCopy'),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("project_waste_apply_copy");
        }
    }
    /*市场废单审核*/
    public function showWasteApplyEditCopy($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteApply();
            $re=$model->editProjectAudit($data,$guid);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='废单审核,原因：'.isset($data['examine_desc'])?$data['examine_desc']:'';
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            if(empty($guid)){
                return self::showJsonReturnCode("1003");
            }
            $list=\app\base\model\Project::quickGet($guid);
            if(empty($list)){
                return self::showJsonReturnCode("1003");
            }
            $assign_data = [
                'guid'=>isset($list->guid) ? $list->guid : '' ,
                'project_name'=>$list['project_name'],
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('project/project_transfer_audit');
        }
    }
}