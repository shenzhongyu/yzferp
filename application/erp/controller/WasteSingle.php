<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 *  废单池管理
 */

namespace app\erp\controller;

use app\base\controller\PDF;
use app\base\controller\RedisHash;
use app\base\controller\Word;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\DefaultRateCopy;
use app\base\model\budget\PrintRequest;
use app\base\model\BudgetDefaultBook;
use app\base\model\BudgetDefaultRate;
use app\base\model\BudgetDefaultProject;
use app\base\model\build\BuildContractRint;
use app\base\model\build\BuildProjectCategoryPhoto;
use app\base\model\build\BuildProjectPercentage;
use app\base\model\build\BuildProjectTime;
use app\base\model\build\BuildSupervision;
use app\base\model\build\BuildSupervisionTem;
use app\base\model\build\BuildSupervisionUser;
use app\base\model\design\DesignPhoto;
use app\base\model\DesignBudgetAccess;
use app\base\model\DesignBudgetListAccess;
use app\base\model\DesignPhase;
use app\base\model\engin\EnginProjectBuildTypeAudit;
use app\base\model\engin\EnginProjectMaterial;
use app\base\model\engin\EnginProjectMaterialAddress;
use app\base\model\engin\EnginProjectMaterialApply;
use app\base\model\engin\EnginProjectMaterialCopy;
use app\base\model\MaterialDataStyle;
use app\base\model\MaterialListEdit;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelUser;
use app\base\model\Project;
use app\base\model\project\ProjectCollectPricePay;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRelatedPerson;
use app\base\model\DesignBudget;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\base\model\waste_single\WasteProjectApply;
use app\erp\config\FieldValue;
use app\erp\controller\Auth;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Db;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class WasteSingle extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /*显示市场营销的废单项目*/
    public function showWasteSingleList(){  //
        if ($this->request->isPost()){
            $map=[
                'status'=>'-2',
                'company_id'=>$this->member_info->company_id,
                'project_type'=>0,
            ];
            $list=$this->showEasyUiJsonListNoStatus('base/Project',false,$map);
            return $list;
        }else{
            $arr=[
                'data_url'=>url("showWasteSingleList"),
                'title'=>'废单池'
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_waste_single_list');
        }
    }
    public function lookProjectMore($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $model_project=new Project();
        $project_info= $model_project->where(['guid'=>$guid,'status'=>'-2'])->find()->toArray();
        if (empty($project_info) ) return self::showJsonReturnCode(1003);
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);
        return $this->fetch('project_details');
    }
    public function apply($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name='base/ApplyModel.apply_track';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['uuid']=$this->member_info->uuid;
            $data['company_id']=$this->member_info->company_id;
            $obj=Project::quickGet($guid);
            $data['project_name']=$obj?$obj['project_name']:'';
            $model=new WasteProjectApply();
            $re=$model->addApply($data,$guid);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                if(isset($data['examine_desc'])){
                    $title=$data['examine_desc'];
                }else{
                    $title="";
                }
                $log["log_content"]='废单申请跟踪,原因：'.$title;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage("wasteOutCheck");
            }
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('apply_model/track_log');
        }
    }

    public function showWasteProjectApply(){
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'examine_status'=>0
            ];
            $list=$this->showEasyUiJsonList('base/waste_single/WasteProjectApply',false,$map);
            return $list;
        }else{
            $arr=[
                'title'=>'废单跟踪申请',
                'data_url'=>url("showWasteProjectApply"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_waste_project_apply');
        }
    }
    public function applyEdit($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteProjectApply();
            $re=$model->editApply($data,$guid);
            $obj=$model->getInfoByGuId($guid);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                if($data["examine_status"]=="1"){
                    $title="废单跟踪审核通过" ;
                }else if($data["examine_status"]=="-1"){
                    $title="废单跟踪审核不通过" ;
                }else{
                    $title="废单跟踪审核" ;
                }
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=empty($obj)?"":$obj["project_id"];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('apply_model/track_log_edit');
        }
    }
    /*显示客服部已废单的项目*/
    public function showWasteSingleListCopy(){  //
        if ($this->request->isPost()){
            $map=[
                'status'=>'-2',
                'company_id'=>$this->member_info->company_id,
                'project_type'=>1,
            ];
            $list=$this->showEasyUiJsonListNoStatus('base/Project',false,$map);
            return $list;
        }else{
            $arr=[
                'data_url'=>url("showWasteSingleList"),
                'title'=>'废单池'
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_waste_single_list');
        }
    }
    public function lookProjectMoreCopy($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $model_project=new Project();
        $project_info= $model_project->where(['guid'=>$guid,'status'=>'-2'])->find()->toArray();
        if (empty($project_info) ) return self::showJsonReturnCode(1003);
        $model_contacts = new ProjectContacts();
        $contacts_list = $model_contacts->getList(['project_guid'=>$project_info['guid']]);

        $model_structure = new ProjectStructure();
        $structure_list = $model_structure->getProjectByProjectGuId($project_info['guid']);

        $model_building = new ProjectBuilding();
        $building_list = $model_building->getProjectByProjectGuId($project_info['guid']);

        $this->assign('project',$project_info);
        $this->assign('contacts',$contacts_list);
        $this->assign('structure',$structure_list);
        $this->assign('building',$building_list);
        return $this->fetch('project_details');
    }
    public function applyCopy($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name='base/ApplyModel.apply_track';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['uuid']=$this->member_info->uuid;
            $data['company_id']=$this->member_info->company_id;
            $obj=Project::quickGet($guid);
            $data['project_name']=$obj?$obj['project_name']:'';
            $model=new WasteProjectApply();
            $re=$model->addApply($data,$guid);
            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='废单申请跟踪,原因：'.isset($data['examine_desc'])?$data['examine_desc']:'';
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('apply_model/track_log');
        }
    }

    public function showWasteProjectApplyCopy(){
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'examine_status'=>0
            ];
            $list=$this->showEasyUiJsonList('base/waste_single/WasteProjectApply',false,$map);
            return $list;
        }else{
            $arr=[
                'title'=>'废单跟踪申请',
                'data_url'=>url("showWasteProjectApply"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_waste_project_apply');
        }
    }
    public function applyEditCopy($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new WasteProjectApply();
            $re=$model->editApply($data,$guid);
            $obj=$model->getInfoByGuId($guid);

            if($re['code']=="1001"){
                $model=new ProjectTraceLog();
                if($data["examine_status"]=="1"){
                    $title="废单跟踪审核通过" ;
                }else if($data["examine_status"]=="-1"){
                    $title="废单跟踪审核不通过" ;
                }else{
                    $title="废单跟踪审核" ;
                }
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=empty($obj)?"":$obj["project_id"];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('apply_model/track_log_edit');
        }
    }

}