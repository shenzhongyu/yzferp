<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\controller\PDF;
use app\base\controller\RedisHash;
use app\base\controller\Word;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\PrintRequest;
use app\base\model\BudgetDefaultBook;
use app\base\model\BudgetDefaultRate;
use app\base\model\BudgetDefaultProject;
use app\base\model\design\DesignPhoto;
use app\base\model\DesignBudgetAccess;
use app\base\model\DesignBudgetListAccess;
use app\base\model\DesignPhase;
use app\base\model\engin\EnginProjectMaterial;
use app\base\model\engin\EnginProjectMaterialAddress;
use app\base\model\engin\EnginProjectMaterialApply;
use app\base\model\engin\EnginProjectMaterialCopy;
use app\base\model\MaterialListEdit;
use app\base\model\PersonnelDepartment;
use app\base\model\Project;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRelatedPerson;
use app\base\model\DesignBudget;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class Engin extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /*菜单节点中未找到*/
    public function consignee(){
        $list=Loader::model("base/PersonnelUser")->getList(['company_id'=>$this->member_info->company_id],'uuid,name,mobile');
        $arr[0]=[
            'uuid'=>0,
            'name'=>'请选择收货人',
            'mobile'=>'',
        ];
        return array_merge($arr,$list);
    }
    /*显示工程阶段的项目*/
    public function showEnginProject(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'3'],false,false);
            $material_model=new EnginProjectMaterial();
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $numb_model=new BudgetBookNumber();
                    $book_number=$numb_model->where(['project_id'=>$value['guid'],'status'=>1])->value('book_number');
                    $material_list=$material_model->where(['project_id'=>$value['guid'],'book_number'=>$book_number,'status'=>1])->count();
                    $value['is_material']=$material_list;
                    $is_audit=Loader::model('base/engin/EnginProjectMaterialApply')->where(['project_id'=>$value['guid'],'status'=>1,'book_number'=>$book_number])->find();
                    if($is_audit['examine_status']=="1"){
                        unset($list['rows'][$key]);  //材料选择通过就不需要在选材了
                        continue;
                    }
                    $value['is_audit']=$is_audit['examine_status'];
                    $value['ex_desc']=$is_audit['examine_desc'];
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=$list['total'];
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '项目表',
                'data_url' => url('showEnginProject'),
            ];
            $this->assign($assign_data);
            return $this->fetch('project_engin_list');
        }
    }
    /*预算选材*/
    public function addMaterial($pro_id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $numb_model=new BudgetBookNumber();
            $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $model="base/budget/DefaultProjectCopy";
            $map=[
                "company_id"=>$this->member_info->company_id,
                'project_id'=>$pro_id,
                'book_number'=>$book_number,
                'zc_dj'=>['>',0]
            ];
            $list=$this->showEasyUiJsonList($model,false,$map,false,false);
            $material_model=new EnginProjectMaterial();
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $material_list=$material_model->where(['project_id'=>$pro_id,'book_number'=>$book_number,'project_data_id'=>$value['guid'],'status'=>1])->count();
                    $value['is_material']=$material_list;
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '装饰项目',
                'data_url' => url('addMaterial',["pro_id"=>$pro_id]),
                'pro_id'=>$pro_id,
            ];
            $this->assign($assign_data);
            return $this->fetch('data_list');
        }
    }
    /*装饰项目添加材料*/
    public function showMaterialAdd($guid="",$pro_id=""){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            $model=new EnginProjectMaterial();
            $re=$model->saveData($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="项目用料选择主材";
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            if (empty($guid)) return self::showReturnCodeWithOutData(1003);
            if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'测试',
                'tree_title'=>'材料类别',
                'list_title'=>'材料信息',
                'tree_url'=>url('material/showCategoryTree'),
                'data_url'=>url('material/materialList'),
                'dialog_url'=>'',
                'load_url'=>url('material/materialListLoad'),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
                'guid'=>$guid, //装饰项目的id
                'pro_id'=>$pro_id,
                'add_url'=>url('showMaterialAdd'),//添加项目主材
            ];
            $this->assign($assign_data);
            return $this->fetch('material_list');
        }
    }
    /*查看已选取的材料*/
    public function lookMaterialByData($guid="",$pro_id=""){
        if (empty($guid) ) return self::showReturnCode(1003);
        if (empty($pro_id) ) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectMaterial',false,['project_data_id'=>$guid]);
            return $list;
        }else{
            $arr=[
                'guid'=>$guid,
                'pro_id'=>$pro_id,
                'map'=>['company_id'=>$this->member_info->company_id]
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('project_material');
        }
    }
    /*更换材料*/
    public function replaceMaterial($guid="",$pro_id=""){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            $model=new EnginProjectMaterial();
            $re=$model->replaceData($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="项目用料主材更换";
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            if (empty($guid)) return self::showReturnCodeWithOutData(1003);
            if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'测试',
                'tree_title'=>'材料类别',
                'list_title'=>'材料信息',
                'tree_url'=>url('material/showCategoryTree'),
                'data_url'=>url('material/materialList'),
                'dialog_url'=>'',
                'load_url'=>url('material/materialListLoad'),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
                'guid'=>$guid,
                'pro_id'=>$pro_id,
                'add_url'=>url('replaceMaterial'),//需要更换的主材id
            ];
            $this->assign($assign_data);
            return $this->fetch('material_list_replace');
        }
    }
    /*更改材料用量*/
    public function editMaterialNumber($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        $model=new EnginProjectMaterial();
        if ($this->request->isPost()){
            $data=$this->request->post();
            $pro_id=$model->where(['guid'=>$guid])->value('project_id');
            $validate_time='base/EnginProjectMaterial.add';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $re=$model->editNumber($data,$guid);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="项目用料主材修改需求量";
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            config(['default_ajax_return' => 'html',]);
            $number=$model->where(['guid'=>$guid])->value('number');
            $assign_data= [
                'number'=>empty($number)?0:$number,
                'guid'=>$guid,
            ];
            $this->assign($assign_data);
            return $this->fetch('edit_material_number');
        }
    }
    /*删除选好的材料*/
    public function delMaterial(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['guid'])) return self::showReturnCode(1003);
            $model=new EnginProjectMaterial();
            $re=$model->delDate($data['guid']);
            if ($re['code']=="1001"){
                $pro_id=$model->where(['guid'=>$data['guid']])->value('project_id');
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="项目用料主材删除";
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*采购清单*/
    public function lookPurchaseList($pro_id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        $numb_model=new BudgetBookNumber();
        $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
        if ($this->request->isPost()){
            $model="base/budget/DefaultProjectCopy";
            $map=["company_id"=>$this->member_info->company_id,'project_id'=>$pro_id,'book_number'=>$book_number,'zc_dj'=>['>',0]];
            $list=$this->showEasyUiJsonListNo($model,false,$map,false,false);
            $material_model=new EnginProjectMaterial();
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $material_list=$material_model->getList(['project_id'=>$pro_id,'book_number'=>$book_number,'project_data_id'=>$value['guid']]);
                    if (!empty($material_list)){
                        foreach ($material_list as $item){
                            $item['name']=$item['material_name'];
                            $item['price']=$item['floor_price']; //单价等于成本价
                            $item['_parentId']=$value['guid'];
                            $item['desc']=$item['material_desc'];
                            $item['is_material']=1;
                            $item['unit']=$item['unit_name'];
                            $list['rows'][]=$item;
                        }
                    }
                }
            }
            $list['total']=count($list['rows']);
            return $list;
        }else{
            $map=[
                'project_id'=>$pro_id,
                'status'=>1,
                'book_number'=>$book_number,
                'examine_status'=>0
            ];
            $re=Loader::model('base/engin/EnginProjectMaterialApply')->where($map)->find();
            $assign_data= [
                'title'=>'项目材料清单',
                'pro_id'=>$pro_id,
                'none'=>empty($re) ? "inline-block":'none',
                'book_number'=>$book_number,
                'data_url'=>url("lookPurchaseList",['pro_id'=>$pro_id,'number'=>$book_number])
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('project_purchase_list');
        }
    }
    /**/
    public function showMore($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $model=new EnginProjectMaterial();
        $obj=$model->getInfoByGuId($guid);
        $material_type=$model->setCacheMaterialOfStyle()['material_category'];
        $material_supplier=$model->setCacheMaterialOfStyle()['material_supplier'];
        $array=FieldValue::getFieldValue("unit_name");
        $assign_data= [
            'type'=>$material_type[$obj['category_id']]['category_name'],
            'supplier'=>$material_supplier[$obj['supplier_id']]['supplier_name'],
            'obj'=>$obj,
            'unit'=>$array[$obj['unit_name']]
        ];
        $this->assign($assign_data);
        self::echoHtml();
        return $this->fetch('show_more_for_material');
    }
    public function showMoreCopy($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $model=new EnginProjectMaterialCopy();
        $obj=$model->getInfoByGuId($guid);
        $material_type=$model->setCacheMaterialOfStyle()['material_category'];
        $material_supplier=$model->setCacheMaterialOfStyle()['material_supplier'];
        $array=FieldValue::getFieldValue("unit_name");
        $assign_data= [
            'type'=>$material_type[$obj['category_id']]['category_name'],
            'supplier'=>$material_supplier[$obj['supplier_id']]['supplier_name'],
            'obj'=>$obj,
            'unit'=>$array[$obj['unit_name']]
        ];
        $this->assign($assign_data);
        self::echoHtml();
        return $this->fetch('show_more_for_material');
    }
    /*材料采购页面*/
    public function materialBuy($pro_id="",$number=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        if (empty($number)) return self::showReturnCode(1003);
        if ($this->request->isPost()){

        }else{
            $assign_data= [
                'data_url'=>url("showMaterialList",['pro_id'=>$pro_id,'number'=>$number]),
                'tree_url'=>url("showMaterialSup",['pro_id'=>$pro_id,'number'=>$number]),
                'pro_id'=>$pro_id,
                'number'=>$number,
                'map'=>['company_id'=>$this->member_info->company_id]
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('material_buy');
        }

    }
    public function showMaterialSup($pro_id="",$number=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        if (empty($number)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $model=new EnginProjectMaterial();
            //查询该项目一共与哪些供应商关联
            $list=$model->where(['project_id'=>$pro_id,'book_number'=>$number,'status'=>1])->group('supplier_id')->select();
            $arr=[];
            if (!empty($list)){
                foreach ($list as $value){
                    $arr[]=Loader::model("base/MaterialSupplier")->where(["guid"=>$value['supplier_id'],'status'=>1])->find();
                }
            }
            return $arr;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /**/
    public function showMaterialList($pro_id="",$number=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        if (empty($number)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectMaterial',false,['project_id'=>$pro_id,'book_number'=>$number]);
            return $list;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*	材料采购申请列表*/
    public function showProjectMaterialList(){
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'3'],false,false);
            $material_model=new EnginProjectMaterialApply();
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $numb_model=new BudgetBookNumber();
                    $book_number=$numb_model->where(['project_id'=>$value['guid'],'status'=>1])->value('book_number');
                    $material_list=$material_model->where(['project_id'=>$value['guid'],'book_number'=>$book_number,'status'=>1,'examine_status'=>1])->count();
                    if ($material_list!=1){
                        unset($list['rows'][$key]);
                        continue;
                    }
                    $value['is_material']=$material_list;
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '项目表',
                'data_url' => url('showProjectMaterialList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('project_engin_list_copy');
        }
    }
    /*清单列表*/
    public function lookPurchaseListCopy($pro_id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        $numb_model=new BudgetBookNumber();
        $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
        if ($this->request->isPost()){
            $model="base/budget/DefaultProjectCopy";
            $map=["company_id"=>$this->member_info->company_id,'project_id'=>$pro_id,'book_number'=>$book_number,'zc_dj'=>['>',0]];
            $list=$this->showEasyUiJsonListNo($model,false,$map,false,false);
            $material_model=new EnginProjectMaterialCopy();
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $material_list=$material_model->getList(['project_id'=>$pro_id,'book_number'=>$book_number,'project_data_id'=>$value['guid']]);
                    if (!empty($material_list)){
                        foreach ($material_list as $item){
                            $item['name']=$item['material_name'];
                            $item['price']=$item['floor_price']; //单价等于成本价
                            $item['_parentId']=$value['guid'];
                            $item['desc']=$item['material_desc'];
                            $item['is_material']=1;
                            $item['unit']=$item['unit_name'];
                            $list['rows'][]=$item;
                        }
                    }
                }
            }
            return $list;
        }else{
            $assign_data= [
                'title'=>'项目材料清单',
                'map'=>['company_id'=>$this->member_info->company_id],
                'pro_id'=>$pro_id,
                'book_number'=>$book_number,
                'data_url'=>url("lookPurchaseListCopy",['pro_id'=>$pro_id,'number'=>$book_number]),
                'applyBuy_url'=>url("applyMaterialBuy")
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('project_purchase_list_copy');
        }
    }
    /*选材完毕申请审核*/
    public function applyReview(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            $model=new EnginProjectMaterialApply();
            $data['apply_id']=$this->member_info->uuid;
            $data['apply_name']=$this->member_info->name;
            $data['company_id']=$this->member_info->company_id;
            $re=$model->saveData($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="项目用料选择完成申请审核";
                $log["guid"]=$data['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('projectMaterial');
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*显示需要审核的项目选材*/
    public function showProjectMaterialAudit(){ //
        if($this->request->isPost()){
            $model="base/Project";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'3'],false,false);
            $material_model=new EnginProjectMaterial();
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $numb_model=new BudgetBookNumber();
                    $book_number=$numb_model->where(['project_id'=>$value['guid'],'status'=>1])->value('book_number');
                    $material_list=$material_model->where(['project_id'=>$value['guid'],'book_number'=>$book_number,'status'=>1])->count();
                    $value['is_material']=$material_list;
                    $map=[
                        'project_id'=>$value['guid'],
                        'status'=>1,
                        'book_number'=>$book_number,
                        'examine_status'=>0
                    ];
                    $obj=Loader::model('base/engin/EnginProjectMaterialApply')->where($map)->find();
                    if(empty($obj)){
                        unset($list['rows'][$key]);  //材料选择通过就不需要在选材了
                        continue;
                    }
                    $value['is_audit']=$obj['examine_status'];
                    $value['apply_id']=$obj['guid'];
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '项目表',
                'data_url' => url('showProjectMaterialAudit'),
            ];
            $this->assign($assign_data);
            return $this->fetch('project_engin_list_audit');
        }
    }
    /*审核的项目选材的权限*/
    public function auditApply($apply_id=""){
        if (empty($apply_id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['examine_status'])) return self::showReturnCode(1003);
            if (!in_array($data['examine_status'],['-1','0','1'])) return self::showReturnCode(1003);
            $model=new EnginProjectMaterialApply();
            $data['examine_uuid']=$this->member_info->uuid;
            $data['examine_name']=$this->member_info->name;
            $re=$model->editCont($data,$apply_id);
            $pro_id=$model->where(['guid'=>$apply_id])->value('project_id');
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$data['examine_status']=="1" ? "项目用料选择完成审核通过" : "项目用料选择完成审核不通过,原因是".$data['examine_desc'];
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*材料申请采购页面(显示需要采购的材料)*/
    public function showMaterialBuyHtml($pro_id=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        $numb_model=new BudgetBookNumber();
        $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
        if ($this->request->isPost()){
            $list_number=Loader::model('base/engin/ProjectDetailedListNumber')->where(['project_id'=>$pro_id,'book_number'=>$book_number])->value('number');
            $map=[
                'project_id'=>$pro_id,
                'list_number'=>$list_number,
            ];
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectMaterialCopy',false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $value['price']=$value['floor_price'];
                }
            }
            return $list;

        }else{
            $assign_data= [
                'title' => '主材采购列表',
                'data_url' => url('showMaterialBuyHtml',['pro_id'=>$pro_id]),
                'pro_id'=>$pro_id,
                'book_number'=>$book_number,
                'applyBuy_url'=>url('applyMaterialBuy'),
                'map'=>['company_id'=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('show_material_buy_html');
        }

    }
    /**/
    public function showApplyEdit($pro_id="",$number=''){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        if (empty($number)) return self::showReturnCodeWithOutData(1003);
        $obj=Loader::model("base/Project")->where(["guid"=>$pro_id])->find();
        $assign_data= [
            'number'=>$number,
            'name'=>$obj['project_name'],
            'address'=>$obj['project_address'],
        ];
        $this->assign($assign_data);
        self::echoHtml();
        return $this->fetch('show_apply_edit');
    }
    /*	提交材料采购申请*/
    public function applyMaterialBuy(){  //材料采购申请
        if ($this->request->isPost()){
            $data=$this->request->post();
            if(empty($data)) return self::showReturnCode(1003);
            $model=new EnginProjectMaterialAddress();
            $validate_time='base/EnginProjectMaterial.buy';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['apply_uuid']=$this->uuid;
            $data['apply_name']=$this->member_info->name;
            $re=$model->saveData($data,$this->member_info->company_id);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='材料采购申请';
                $log["guid"]=$data['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('materialBuy');
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*显示采购申请(材料采购审核列表)*/
    public function showProjectBuyMaterial(){
        if ($this->request->isPost()){
            $numb_model=new BudgetBookNumber();
            $model=new EnginProjectMaterialAddress();
            $list=$this->showEasyUiJsonListNo('base/Project',false,['company_id'=>$this->member_info->company_id,'feedback_stage'=>3]);
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $book_number=$numb_model->where(['project_id'=>$value['guid'],'status'=>1])->value('book_number');
                    $brr=[
                       'guid'=>$value['guid'],
                       'collect_name'=>$value['project_name'],
                    ];
                    $arr['rows'][]=$brr;
                    if (!empty($book_number)){
                        $collect_list=$model->getList(['project_id'=>$value['guid'],'number'=>$book_number,'examine_status'=>0]);
                        if (!empty($collect_list)){
                            foreach ($collect_list as $item){
                                $item['_parentId']=$value['guid'];
                                $arr['rows'][]=$item;
                            }
                        }
                    }
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            $arr=[
                'title'=>'项目表',
                'data_url'=>url(),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_project_buy_material');
        }
    }
    /*采购材料的详细*/
    public function showMoreByMaterial($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $model=new EnginProjectMaterialAddress();
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/engin/MaterialAdressAccess',false,['receipt_id'=>$guid]);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $obj=Loader::model('base/engin/EnginProjectMaterialCopy')->getInfoByGuid($value['material_id']);

                    $value['material_name']=$obj['material_name'];
                    $value['unit_name']=$obj['unit_name'];
                    $value['specifications']=$obj['specifications'];
                    $value['floor_price']=$obj['floor_price'];
                }
            }
            return $list;
        }else{
            $obj=$model->where(['guid'=>$guid])->find();
            $obj=$model->getTime($obj,'collect_date',false);
            $project=$model->setCacheProjectData()['project'];
            $arr=[
                'name'=>$project[$obj['project_id']]['project_name'],
                'obj'=>$obj,
                'invoice'=>$obj['invoice_value']==0?'否':'是',
                'guid'=>$guid,
                'create_time'=>$obj['create_time'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_more_by_material');
        }
    }
    /*审核是否采购*/
    public function editBuyMaterial($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $model=new EnginProjectMaterialAddress();
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['examine_status'])) return self::showReturnCode(1003);
            if (!in_array($data['examine_status'],['1','-1'])) return self::showReturnCode(1003);
            $data['examine_uuid']=$this->uuid;
            $data['examine_uuid_name']=$this->member_info->name;
            $re=$model->editBuyMaterial($data,$guid);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $obj=$model->where(['guid'=>$guid])->find();
                $log=[];
                $log["log_content"]=$data['examine_status']=="1" ?'材料采购申请通过':'材料采购申请不通过,原因是'.$data['examine_desc'];
                $log["guid"]=$obj['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);

                //采购申请通过就提示付款通知
                SendTemplateMessage::sendTemplateMessage('collectionPay');
                //采购申请通过就提示验收通知
                SendTemplateMessage::sendTemplateMessage('materialCheck');
            }
            return $re;
        }else{
            $obj=$model->getInfoByGuId($guid);
            $obj=$model->getTime($obj,'collect_date',false);
            $project=$model->setCacheProjectData()['project'];
            $arr=[
                'name'=>$project[$obj['project_id']]['project_name'],
                'obj'=>$obj,
                'guid'=>$guid,
                'create_time'=>$obj['create_time'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('edit_buy_material');
        }
    }
    /*材料采购验收*/
    public function showAcceptanceMaterial (){
        if ($this->request->isPost()){
            $numb_model=new BudgetBookNumber();
            $model=new EnginProjectMaterialAddress();
            $list=$this->showEasyUiJsonListNo('base/Project',false,['company_id'=>$this->member_info->company_id,'feedback_stage'=>3]);
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $book_number=$numb_model->where(['project_id'=>$value['guid'],'status'=>1])->value('book_number');
                    $brr=[
                        'guid'=>$value['guid'],
                        'collect_name'=>$value['project_name'],
                    ];
                    $arr['rows'][]=$brr;
                    if (!empty($book_number)){
                        $collect_list=$model->getList(['project_id'=>$value['guid'],'number'=>$book_number,'examine_status'=>1,'accepatance_status'=>0,"status"=>2]);
                        if (!empty($collect_list)){
                            foreach ($collect_list as $item){
                                $item['_parentId']=$value['guid'];
                                $arr['rows'][]=$item;
                            }
                        }
                    }
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            $arr=[
                'title'=>'项目表',
                'data_url'=>url(),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_project_acceptance_material');
        }
    }
    /*	采购验收权限*/
    public function editAccepatanceMaterial($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $model=new EnginProjectMaterialAddress();
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            $data['accepatance_uuid']=$this->uuid;
            $data['accepatance_uuid_name']=$this->member_info->name;
            $re=$model->editAcceMaterial($data,$guid);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $obj=$model->where(['guid'=>$guid])->find();
                $log=[];
                $log["log_content"]='材料采购全部验收';
                $log["guid"]=$obj['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            $obj=$model->where(['guid'=>$guid])->find();
            $obj=$model->getTime($obj,'collect_date',false);
            $project=Project::quickGet($obj['project_id']);
//            $project=Loader::model('base/Project')->getInfoByGuid($obj['project_id']);
            $arr=[
                'name'=>$project['project_name'],
                'obj'=>$obj,
                'guid'=>$guid,
                'create_time'=>$obj['create_time'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('edit_accepa_material');
        }
    }
}