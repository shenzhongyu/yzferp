<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\controller\PDF;
use app\base\controller\Word;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultBookCopy;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\PrintRequest;
use app\base\model\BudgetDefaultBook;
use app\base\model\BudgetDefaultRate;
use app\base\model\BudgetDefaultProject;
use app\base\model\contract\ContractField;
use app\base\model\contract\ContractTem;
use app\base\model\design\DesignCheck;
use app\base\model\design\DesignField;
use app\base\model\design\DesignPhoto;
use app\base\model\DesignBudgetAccess;
use app\base\model\DesignBudgetListAccess;
use app\base\model\DesignPhase;
use app\base\model\MaterialListEdit;
use app\base\model\PersonnelCompany;
use app\base\model\PersonnelDepartment;
use app\base\model\Project;
use app\base\model\project\ProjectContract;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRelatedPerson;
use app\base\model\DesignBudget;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Exception;
use think\Loader;
use think\Log;
use think\Session;
use app\erp\config\Config;


class Contract extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /*合同模板管理*/
    public function showContractEdit()
    {
        $model = new ContractTem();
        $map = [
            'company_id' => $this->member_info->company_id,
            'status' => 1
        ];
        $obj = $model->where($map)->find();
        $mobile = Loader::model('base/BudgetDefaultBook')->where($map)->find();
        $arr = [
            'obj' => $obj,
            'mobile' => empty($mobile) ? '' : $mobile['telephone'],
            'guid' => empty($obj) ? "" : $obj['guid'],
        ];
        $this->assign($arr);
        self::echoHtml();
        if (empty($obj)) {
            return $this->fetch('show_contract_edit');
        } else {
            return $this->fetch('show_contract_content');
        }

    }
    /*保存合同模板*/
    public function saveContractData(){
        if ($this->request->isPost()) {
            $data = $this->request->post();
            $data['company_id'] = $this->member_info->company_id;
            $model=new PersonnelCompany();
            $company_name = $model->getInfoByGuId($this->member_info->company_id);
            //$company_name = PersonnelCompany::quickGet($this->member_info->company_id);
            $data['company_name'] = empty($company_name) ? '' : $company_name['company_name'];
            $data['uuid'] = $this->uuid;
            $model = new ContractTem();
            $re = $model->saveBuild($data);
            return $re;
        } else {
            return self::showJsonReturnCodeWithOutData(1003);
        }
    }
    /*打印合同模板*/
    public function downloadContract($guid = "")
    {
        if (empty($guid)) return self::showJsonReturnCodeWithOutData(1003);
        $model=new ContractTem();
        $obj = $model->getInfoByGuId($guid);
        $arr = [
            'obj' => $obj,
			'company_name' => $obj,
            'mobile' => empty($mobile) ? '' : $mobile['telephone'],
            'guid' => empty($obj) ? "" : $obj['guid'],
        ];
		
        $this->assign($arr);
        self::echoHtml();
        return $this->fetch('contract_download_tem');
    }
    /*修改合同模板*/
    public function editContract($guid=""){
        if (empty($guid)) return self::showJsonReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new ContractTem();
            $re=$model->editCheck($data,$guid);
            return $re;
        }else{
            $arr = [
                'guid'=>$guid,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('edit_contract');
        }
    }
    /*菜单中未找到该方法*/
    public function showContractData(){
        if ($this->request->isPost()){
            $guid=$this->request->post('id');
            $model=new ContractTem();
            $data=$model->getInfoByGuId($guid);
            if (empty($data)){
                return self::showJsonReturnCodeWithOutData(1003);
            }
            if ($data['company_id']!=$this->member_info->company_id){
                return self::showJsonReturnCodeWithOutData(1003);
            }
            return ['code'=>'1001','msg'=>$data];
        }
    }
    /*浏览合同权限*/
    public function lookContract($pro_id="")
    {
        if (empty($pro_id)) return self::showJsonReturnCodeWithOutData(1003);
        $numb_model = new BudgetBookNumber();
        $book_number = $numb_model->where(['project_id' => $pro_id, 'status' => 1])->value('book_number');
        $model = new DefaultBookCopy();
        $obj = $model->where(['project_id' => $pro_id, 'book_number' => $book_number, 'status' => 1, 'company_id' => $this->member_info->company_id])->find();
        if (empty($obj)) {
            Log::error($this->member_info->name . '访问非本公司项目,项目id是' . $pro_id);
            return self::showJsonReturnCodeWithOutData(1003);
        }
        $contract = new ContractTem();
        $map = [
            'company_id' => $this->member_info->company_id,
            'status' => 1
        ];
        $contract_data = $contract->where($map)->find();
        if (empty($contract_data)) return self::showJsonReturnCodeWithOutData(1010, '未设置合同模板');
        $arr = [
            'project' => $obj,
            'obj' => $contract_data,
        ];
        $this->assign($arr);
        self::echoHtml();
        return $this->fetch('look_contract');
    }
    /*打印合同*/
    public function printContract($guid=""){
        if (empty($guid)) return self::showJsonReturnCodeWithOutData(1003);
        $model=new ProjectContract();
        $data=$model->getInfoByGuId($guid);
       // $data=ProjectContract::quickGet($guid);
        if (empty($data)){
            return self::showJsonReturnCodeWithOutData(1010,'数据不存在');
        }else{
            if ($data['company_id' ]!=$this->member_info->company_id){
                return self::showJsonReturnCodeWithOutData(1018,'数据不存在');
            }else{
                $model = new DefaultBookCopy();
                $obj = $model->where(['project_id' => $data['project_id'], 'book_number' => $data['book_number'], 'status' => 1, 'company_id' => $this->member_info->company_id])->find();
                if (empty($obj)) {
                    Log::error($this->member_info->name . '访问非本公司项目,项目id是' .  $data['project_id']);
                    return self::showJsonReturnCodeWithOutData(1003);
                }
                $contract = new ContractTem();
                $map = [
                    'company_id' => $this->member_info->company_id,
                    'status' => 1
                ];
                $contract_data = $contract->where($map)->find();
                if (empty($contract_data)) return self::showJsonReturnCodeWithOutData(1010, '未设置合同模板');
                $arr = [
                    'project' => $obj,
                    'obj' => $contract_data,
                ];
                $this->assign($arr);
                self::echoHtml();
                $log_model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="打印合同";
                $log["guid"]=$data["project_id"];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $log_model->addProjectLog($log);
                return $this->fetch('contract_download');
            }

        }
    }
    /*上传已签定的合同*/
    public function AddContractField($pro_id=""){
        if ($this->request->isPost()){
            if (empty($pro_id)) return self::showJsonReturnCodeWithOutData(1003);
            $data=$this->request->post();
            $model=new ContractField();
            $validate_name = 'base/ProjectField.addP';
            $result= $this->validate($data, $validate_name);
            if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);
            $data['company_id']=$this->member_info->company_id;
            $data['uuid']=$this->uuid;
            $data['project_id']=$pro_id;
            $re=$model->saveBuild($data);
            if($re["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="上传已签过的合同";
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model->addProjectLog($log);
            }
            return $re;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
            ];
            $this->assign($assign_data);
            return $this->fetch('finance/add_photo');
        }
    }
}