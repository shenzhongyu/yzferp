<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 *  车辆管理
 */

namespace app\erp\controller;

use app\base\model\office\OfficeVehicleApply;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelUser;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Db;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class OfficeVehicle extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /*公司车辆录入*/
    public function addOfficeVehicle(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new \app\base\model\office\OfficeVehicle();
            $validate_name='base/OfficeSupplies.vehicle';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['company_id']=$this->member_info->company_id;
            return json($model->saveData($data));
        }else{
            $arr=[
                'title'=>'车辆录入',
                'url'=>url("addOfficeVehicle"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('add_office_vehicle');
        }
    }
    /*车辆列表（有用车申请功能）*/
    public function showVehicleList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeVehicle",false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                'title'=>'车辆列表',
                'data_url'=>url("showVehicleList")
            ];
            $this->assign($arr);
            return $this->fetch('show_vehicle_list');
        }
    }
    /*申请用车*/
    public function applyUseVehicle($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $data['start_time']=strtotime($data['start_time']);
            $data['end_time']=strtotime($data['end_time']);
            $validate_name='base/OfficeSupplies.apply';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['company_id']=$this->member_info->company_id;
            $data['uuid']=$this->uuid;
            $model=new OfficeVehicleApply();
            $data['vehicle_id']=$guid;
            $data['examine_status']=0;
            $re=$model->saveApplyData($data);
            if ($re["code"]=="1001"){
                SendTemplateMessage::sendTemplateMessage("carCheck");
            }
            return $re;
        }else{
            $department=Loader::model("base/PersonnelDepartment")->getInfoByGuid($this->member_info->department_id);
            $arr=[
                'user'=>$this->member_info->name,
                'department'=>$department?$department['department_name']:"",
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("apply_use_vehicle");
        }
    }
    /*用车申请列表*/
    public function showApplyVehicleList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeVehicleApply",false,["company_id"=>$this->member_info->company_id,'examine_status'=>0]);
            if (!empty($list["rows"])){
                foreach ($list["rows"] as $key=>$value){
                    $model=new \app\base\model\office\OfficeVehicle();
                    $obj=$model->getInfoByGuId($value["vehicle_id"]);
                    $list["rows"][$key]["vehicle_num"]=$obj?$obj["number"]:"";
                }
            }
            return $list;
        }else{
            $arr=[
                'title'=>'用车申请列表',
                'data_url'=>url("showApplyVehicleList"),
            ];
            $this->assign($arr);
            return $this->fetch("show_apply_vehicle_list");
        }
    }
    /*用车申请审核*/
    public function editApply($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new OfficeVehicleApply();
            $data["examine_uuid"]=$this->member_info->uuid;
            return $model->editProjectAudit($data,$guid);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*车辆列表（用于修改删除和查看用车申请记录）*/
    public function showCarList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeVehicle",false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                'title'=>'车辆管理',
                'data_url'=>url("showCarList")
            ];
            $this->assign($arr);
            return $this->fetch('show_car_list');
        }
    }
    /*删除车辆*/
    public function delCar(){
        if ($this->request->isPost()){
            $data=$this->request->post("guid");
            if (empty($data)) return self::showJsonReturnCode(1003);
            $model=new \app\base\model\office\OfficeVehicle();
            return $model->delCar($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*修改车辆*/
    public function editCar($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new \app\base\model\office\OfficeVehicle();
            $validate_name='base/OfficeSupplies.vehicle';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return json($model->editCar($data,$guid));

        }else{
            $model=new \app\base\model\office\OfficeVehicle();
            $obj=$model->getInfoByGuId($guid);
            if (empty($obj)) return self::showJsonReturnCode(1003);
            $arr=[
                "car"=>$obj,
                'title'=>'车辆信息修改',
                'url'=>url("editCar",["guid"=>$guid])
            ];
            $this->assign($arr);
            return $this->fetch('edit_car');
        }
    }
    /*用车申请记录*/
    public function showApplyCarLog($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNoStatus("base/office/OfficeVehicleApply",false,["company_id"=>$this->member_info->company_id,'vehicle_id'=>$guid]);
            $model=new PersonnelUser();
            if (!empty($list["rows"])){
                foreach ($list["rows"] as $key=>$value){
                    $user=$model->getInfoByGuId($value["examine_uuid"]);
                    $list["rows"][$key]["examine_uuid_name"]=$user["name"];
                }
            }
            return $list;
        }else{
            $arr=[
                'data_url'=>url("showApplyCarLog",["guid"=>$guid]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("show_apply_car_log");
        }
    }
}