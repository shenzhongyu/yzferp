<?php

/**

 * Created by PhpStorm.

 * Power by Mikkle

 * QQ:776329498

 * Date: 2017/4/18

 * Time: 13:14

 */

namespace app\erp\controller;


use app\base\controller\Upload;
use app\base\model\Base;
use app\base\model\OfficeComplaint;
use app\base\model\OfficePlan;
use app\base\model\OfficeNotice;
use app\base\model\OfficePlanLog;
use app\base\model\personal\UserOpus;
use app\base\model\PersonnelCompany;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelRole;
use app\base\model\PersonnelRoleNodeAccess;
use app\base\model\PersonnelUser;
use app\base\model\PersonnelTrackStatus;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelNode;
use app\base\model\Project;
use app\base\model\ProjectContacts;
use app\base\model\We;
use app\base\model\WeMenu;
use app\erp\config\Config;
use app\erp\config\FieldValue;
use think\Session;
use app\base\model\WeMenuButton;
use think\Loader;


class User extends Auth
{
    protected $config_list = [];

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$work;
    }


    public function _empty()
    {
        $action = $this->request->action();
        if (isset($this->config_list[$action])) {
            $action_name = $this->config_list[$action]['action_name'];
            if (method_exists($this, $action_name)) {
                return $this->$action_name($action);
            } else {
                $this->error('你配置的方法不存在');
            }
        } else {
            $this->error('你配置的参数不存在');
        }
    }
    //显示员工录入页面
    public function showUserAdd(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('user_add');
    }
    public function showCompanyJson(){//显示公司数据
        $model=new PersonnelCompany();
        $list=$model->getListCom(["guid"=>$this->member_info->company_id,'status'=>1]);
        return json($list);
    }
    public function showDepartmentJson(){
        $model=new PersonnelDepartment();
        $arr=$model->getListDep(['company_id'=>$this->member_info->company_id,'status'=>1]);
        return json($arr);

    }

    public function showJobsJson($department=""){
        $model=new PersonnelJobs();
        $arr=$model->getListJobs(['company_id'=>$this->member_info->company_id,'status'=>1]);
        if (!empty($department)){
            $list=$model->getListJobs(['company_id'=>$this->member_info->company_id,'department_id'=>$department,'status'=>1]);
            return $list;
        }
        return json($arr);
    }
//        //员工通讯录（管理者的）
//    public function userAdminList(){
//        if($this->request->isPost()){
//            $model="base/PersonnelUser";
//            $list=$this->showEasyUiJsonListNoStatus($model,false,["company_id"=>$this->member_info->company_id],false,false);
//            return $list;
//        }else{
//            config(['default_ajax_return' => 'html',]);
//            $assign_data= [
//                'title' =>"员工通讯录",
//                'data_url'=>url('userAdminList'),
//                'dialog_url'=>url("userEdit"),
//                'map'=>["company_id"=>$this->member_info->company_id],
//                'ma'=>["guid"=>$this->member_info->company_id],
//            ];
//            $this->assign($assign_data);
//            return $this->fetch('user_list');
//        }
//    }
    public function userEdit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelUser";
        $validate_name="base/PersonnelUser.edit";
        $view_name="user_edit";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    public function showUserList(){  //单纯的通讯录
        if($this->request->isPost()){
            $model="base/PersonnelUser";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false,['status'=>'desc']);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"通讯录",
                'data_url'=>url('showUserList'),
                'dialog_url'=>url("userEditByRole"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('show_user_list');
        }
    }
//    public function showUserTree(){  //单纯的通讯录
//        if($this->request->isPost()){
//            $model="base/PersonnelUser";
//            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false,['status'=>'desc']);
//            return $list;
//        }else{
//            config(['default_ajax_return' => 'html',]);
//            $assign_data= [
//                'list_title' =>"通讯录",
//                'tree_title'=>'部门',
//                'data_url'=>url('showUserTree'),
//                'tree_url'=>url("showDepartmentTree"),
//                'load_url'=>'',
//                'map'=>["company_id"=>$this->member_info->company_id],
//            ];
//            $this->assign($assign_data);
//            return $this->fetch('user_tree');
//        }
//    }
//    public function showDepartmentTree(){ //
//
//
//    }
    public function userByRole(){ //人事的通讯录
        if($this->request->isPost()){
            $model="base/PersonnelUser";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false,['status'=>'desc']);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"通讯录",
                'data_url'=>url('userByRole'),
                'dialog_url'=>url("userEditByRole"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('userbyrole');
        }
    }
    public function userEditByRole(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelUser";
        $validate_name="base/PersonnelUser.eredit";
        $view_name="usereditbyrole";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    public function editUserInfo($id=""){  //修改用户资料
        if (empty($id)) return self::showJsonReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new PersonnelUser();
            $validate_time='base/PersonnelUser.edit_user';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $type=PersonnelDepartment::quickGet($data['department_id'])['department_type'];
            $data['department_type']=$type;
            $re=$model->editUserInfo($data,$id);
            return json($re);
        }else{
            $model=new PersonnelUser();
            $user=$model->getInfoByGuId($id);
            $arr=[
                'user'=>$user,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('edit_user_info');
        }
    }
    public function showRoleList(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/PersonnelRole',false,['company_id'=>$this->member_info->company_id]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"角色管理列表",
                'data_url'=>url('showRoleList'),
                'add_url'=>url('addRoleData'),
                'del_url'=>url("delRoleData")
            ];
            $this->assign($assign_data);
            return $this->fetch('role_list');
        }
    }
    public function addRoleData(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['company_id'])){
                $data['company_id']=$this->member_info->company_id;
            }
            $model=new PersonnelRole();
            return $model->addRoleData($data);
        }else{
            return self::showReturnCode(1003);
        }
    }
    public function delRoleData(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new PersonnelRole();
            return $model->delRoleData($data);
        }else{
            return self::showReturnCode(1003);
        }
    }
    public function editUserNodeRole($rid = false,$is_mobile=0)
    {
        $is_mobile = empty($is_mobile) ? 0 : 1 ;

        if ($this->request->isPost()) {
            if (empty($rid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $post_data = [
                'rid' => $rid,
                'rule' => $this->request->post('rule'),
            ];
            $model = new PersonnelRoleNodeAccess();
            return $model->saveRoleNodeAccess($post_data['rid'], $post_data['rule'],$is_mobile);

        } else {

            if (empty($rid)) {
                $this->error('缺少参数');
            }
            $assign_data = [
                'title' => '权限管理',
                'rid' => $rid,
                'tree_node_url' => url('showUserNodeJson', ['top' => 1,'is_mobile'=>$is_mobile]),
                'role_node_url' => '',
                'is_mobile'=>$is_mobile,
                'title_name'=>$is_mobile==0?'权限编辑':'手机端权限编辑',
            ];
            $this->assign($assign_data);
            return $this->fetch('node_role_edit');
        }
    }

    public function getMenuList($role_id,$is_mobile=0)
    {
        $is_mobile = empty($is_mobile) ? 0 : 1 ;
        $model = new PersonnelRoleNodeAccess();
        return $model->getRoleMenuList($role_id,$is_mobile);
    }

    /**
     * 非管理员
     * Power: Mikkle
     * Email：776329498@qq.com
     * @param int $top
     * @param int $is_mobile
     * @return \think\response\Json
     */
    public function showUserNodeJson($top = 0,$is_mobile=0)
    {
        $node = new PersonnelNode();
        $json = $node->getNodeListToTreeJson($where=["auth_grade"=>1],$is_mobile);
        if ($top == 1) {
            return json($json);
        }
        $obj = ['id' => 0, 'text' => '顶级菜单', 'children' => $json];
        return json([$obj]);
    }
    public function showRoleJson()
    {
        $model = new PersonnelRole();
        return json($model->getList(['company_id'=>$this->member_info->company_id,'status'=>1]));
    }


    //用户微信管理
    public function showUserWX(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/PersonnelUser',false,['company_id'=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                'title'=>'用户列表',
                'data_url'=>url('showUserWX'),
                'map'=>['company_id'=>$this->member_info->company_id],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_user_wx');
        }
    }
    public function getBanDingCode(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new PersonnelUser();
            return $model->getBanDingCode($data);
        }else{
            return self::showReturnCode(1003);
        }
    }
    public function resetBanDingCode(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new PersonnelUser();
            return $model->resetBanDingCode($data);
        }else{
            return self::showReturnCode(1003);
        }
    }
    //个人优秀作品
    public function excellentOpus(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/personal/UserOpus',false,['uuid'=>$this->uuid,'status'=>1]);
            return $list;
        }else{
            $arr=[
                'data_url'=>url('excellentOpus'),
                'title'=>'个人优秀作品',
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('excellent_opus_list');
        }
    }
    public function addUserOpus(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectField.addP';
            $result= $this->validate($data, $validate_name);
            if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);
            $data['company_id']=$this->member_info->company_id;
            $data['uuid']=$this->uuid;
            $model=new UserOpus();
            $re=$model->saveBuild($data);
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('finance/add_photo');
        }
    }
    public function delUserOpus(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new UserOpus();
            return $model->delUserOpus($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    public function editUserOpus($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectField.addP';
            $result= $this->validate($data, $validate_name);
            if (true !== $result) return $this->showJsonReturnCode(1003, [], $result);
            $model=new UserOpus();
            $re=$model->editCheck($data,$guid);
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('finance/add_photo');
        }
    }
    public function showEditUserOpus($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $model=new UserOpus();
        $obj=$model->getInfoByGuId($guid,['uuid'=>$this->uuid]);
        return $obj;
    }


    //人事档案
    public function showUserFiles(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/PersonnelUser',false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                'title'=>'人事档案',
                'data_url'=>url("showUserFiles"),
                'ma'=>["guid"=>$this->member_info->company_id],
                'map'=>["company_id"=>$this->member_info->company_id],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("show_user_files");
        }
    }
    //下载资料
    public function showHtml($m=""){
        if (empty($m)) return self::showReturnCodeWithOutData(1003);
        Upload::downloadFileByMd5($m);
    }


}