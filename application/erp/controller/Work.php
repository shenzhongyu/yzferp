<?php

/**

 * Created by PhpStorm.

 * Power by Mikkle

 * QQ:776329498

 * Date: 2017/4/18

 * Time: 13:14

 */

namespace app\erp\controller;


use app\base\model\Base;
use app\base\model\OfficeComplaint;
use app\base\model\OfficePlan;
use app\base\model\OfficeNotice;
use app\base\model\OfficePlanLog;
use app\base\model\PersonnelCompany;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelRole;
use app\base\model\PersonnelRoleNodeAccess;
use app\base\model\PersonnelUser;
use app\base\model\PersonnelTrackStatus;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelNode;
use app\base\model\Project;
use app\base\model\ProjectContacts;
use app\base\model\We;
use app\base\model\WeMenu;
use app\erp\config\Config;
use app\erp\config\FieldValue;
use think\Session;
use app\base\model\WeMenuButton;
use think\Loader;


class Work extends Auth
{
    protected $config_list = [];

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$work;
    }




    public function _empty()
    {
        $action = $this->request->action();
        if (isset($this->config_list[$action])) {
            $action_name = $this->config_list[$action]['action_name'];
            if (method_exists($this, $action_name)) {
                return $this->$action_name($action);
            } else {
                $this->error('你配置的方法不存在');
            }
        } else {
            $this->error('你配置的参数不存在');
        }
    }
    /*显示管理员重置用户密码*/
    public function showUserPassword(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/PersonnelUser",false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else {
            config(['default_ajax_return' => 'html',]);
            $assign_data = [
                'title' => "用户密码重置",
                'data_url' => url('showUserPassword'),
                 'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('list_user_pass_word');
        }
    }
    //
    public function resetPersonnelPassword($id = false){
        if (empty($this->uuid)) return self::showJsonReturnCodeWithOutData(1004);
        if(empty($id)) return self::showJsonReturnCodeWithOutData(1003);
        $model = new PersonnelUser();
        $password="123123";
        $re = $model->setPersonnelPassword($id, $password);
        if ($re) return self::showJsonReturnCode(1001);
        return self::showJsonReturnCodeWithOutData(1007, "重置密码失败");
    }
    //工作进度
    public function showWorkStatus(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('system/work_plan_status');
    }
    //处理进度进度
    public function showProcessingStatus(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('processing_status');
    }
    /*修改个人计划的工作进度*/
    public function editWorkStatus($guid=""){
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $data = $this->request->post();
            $validate_name = 'base/OfficePlan.scheduleedit';
            $model_name = 'base/OfficePlan';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['guid']=$guid;
            $result_add=$this->doModelAction($data, false, $model_name, 'saveInfoByGuidWithSaveLog');
            return json( $result_add );

        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //计划审核
    public function showPlanExamine(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('system/leave_not_edit');
    }
    /*个人计划进行审核*/
    public function editPlanExamine($guid=""){
        if ($this->request->isPost()) {
            if (empty($guid)){
                return self::showReturnCodeWithOutData(1003);
            }
            $data = $this->request->post();
            $validate_name = 'base/OfficePlan.notedit';
            $model_name = 'base/OfficePlan';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['guid']=$guid;
            $result_add=$this->doModelAction($data, false, $model_name, 'saveInfoByGuid');
            if($result_add["code"]=="1001"){
                $model=new OfficePlanLog();
                $log=[];
                $log["title"]="计划审核";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["content"]=$data["dep_manager"];
                $model->addOfficePlanLog($log);
            }
            return json( $result_add );
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*所有计划*/
    public function showAllPlanList(){
        config(['default_ajax_return' => 'html',]);
        $assign_data = [
            'title' => '计划管理',
            'data_url' => "showPlanAll",
        ];
        $this->assign($assign_data);
        return $this->fetch('workall_list');

    }
    public function showPlanAll(){
        if($this->request->isPost()){
//            $model=new OfficePlan();
            $list=$this->showEasyUiJsonList('base/OfficePlan',false,["company_id"=>$this->member_info->company_id]);
//            $list=$model->getList(["company_id"=>$this->member_info->company_id]);
//            foreach($list as $value){
//                if(isset($value["uuid"]) &&  !empty($value["uuid"]) ){
//                    $model_user=new PersonnelUser();
//                    $user=$model_user->getInfoByUuId($value["uuid"]);
//                    $value["name"]=$user["name"];
//                }
//                if(isset($value["end_time"]) &&  !empty($value["end_time"]) ){
//                    $value["end_time"]=date("Y-m-d", $value["end_time"]);
//                }
//            }
            return json($list);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*计划明细*/
    public function showWorkDetailed($guid=""){
        if (empty($guid)) {
            return self::showReturnCodeWithOutData(1003);
        }
        config(['default_ajax_return' => 'html',]);
        $model=new OfficePlan();
        $data=$model->getPerByGuId($guid);
        if(empty($data)){
            return self::showReturnCodeWithOutData(1003,"数据错误");
        }
        $value=new FieldValue();
        $assign_data = [
            "plan_name"=>$data["plan_name"],
            "plan_grade"=>$value->plan_grade[$data["plan_grade"]],
            "start_time"=>date("Y-m-d", $data["start_time"]),
            "end_time"=>date("Y-m-d",$data["end_time"]),
            "plan_content"=>$data["plan_content"],
            "plan_desc"=>$data["plan_desc"],
            'manager_content'=>$data["manager_content"],
            "dep_manager"=>$value->audit_status[$data["dep_manager"]],
            'audit_status'=>$value->work_schedule[$data["work_schedule"]],
        ];
        $this->assign($assign_data);
        return $this->fetch('workdetailed');
    }
    //部门计划
    public function showDepPlanList(){
        config(['default_ajax_return' => 'html',]);
        $assign_data = [
            'title' => '计划列表',
            'data_url' => "showPlanDep",
        ];
        $this->assign($assign_data);
        return $this->fetch('workdep_list');
    }
    public function showPlanDep(){
        if($this->request->isPost()){
//            $model=new OfficePlan();
//            $list=$model->getList(["department_id"=>$this->member_info->department_id,'company_id'=>$this->member_info->company_id]);
            $list=$this->showEasyUiJsonList('base/OfficePlan',false,["department_id"=>$this->member_info->department_id,'company_id'=>$this->member_info->company_id]);
//            foreach($list as $value){
//                if(isset($value["uuid"]) &&  !empty($value["uuid"]) ){
//                    $model_user=new PersonnelUser();
//                    $user=$model_user->getInfoByUuId($value["uuid"]);
//                    $value["name"]=$user["name"];
//                }
//                if(isset($value["end_time"]) &&  !empty($value["end_time"]) ){
//                    $value["end_time"]=date("Y-m-d", $value["end_time"]);
//                }
//            }
            return json($list);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //通知公告
    public function showNotice(){
        config(['default_ajax_return' => 'html',]);
        $model=new PersonnelDepartment();
        $model_v=new FieldValue();
        $arr=[];
        foreach ($model_v->department_type as $key => $value){
            if(!empty($key)){
                $list=$model->getList(["department_type"=>$key,'company_id'=>$this->member_info->company_id]);
                if(!empty($list)){
                    $arr[$value]=$list;
                }
            }
        }
        $data=Loader::model("base/PersonnelDepartment")->getPerByGuid($this->member_info->department_id);
        $model=new FieldValue();
        $assign_data = [
            'department' => $arr,
            'data' => $data,
            "dep_type"=>$model->department_type[$data['department_type']],
        ];
        $this->assign($assign_data);

        $role_id=$this->member_info->role_id;
        $map=[
            'role_id'=>$role_id,
        ];
        $role_list=Loader::model("base/PersonnelRoleNodeAccess")->where($map)->select();
        if (!empty($role_list)){
            foreach ($role_list as $value){
                switch ($value['node_id']){
                    case 'ND59520C2E2203D101505': //公告发布
                        return $this->fetch('notice');
                        break;
                    case 'ND59537D9B8B5F2985698': //公告发布(部门)
                        return $this->fetch('notice_dep');
                        break;
                    case 'ND5955ADE6C5F40549953': //公告发布(部门可选)
                        $this->fetch('notice_dep_select');
                        break;
                    default:
                        break;
                }
            }
        }
        return $this->fetch('notice');
    }
//    //通知公告(部门)
//    public function showNoticeDepartment(){
//        config(['default_ajax_return' => 'html',]);
//        $data=Loader::model("base/PersonnelDepartment")->getPerByGuid($this->member_info->department_id);
//        $model=new FieldValue();
//        $assign_data = [
//            'data' => $data,
//            "dep_type"=>$model->department_type[$data['department_type']],
//        ];
//        $this->assign($assign_data);
//        return $this->fetch('notice_dep');
//    }
//    //通知公告(部门 可选择)
//    public function showNoticeDepSel(){
//        config(['default_ajax_return' => 'html',]);
//        $model=new PersonnelDepartment();
//        $model_v=new FieldValue();
//        $arr=[];
//        foreach ($model_v->department_type as $key => $value){
//            if(!empty($key)){
//                $list=$model->getList(["department_type"=>$key,'company_id'=>$this->member_info->company_id]);
//                if(!empty($list)){
//                    $arr[$value]=$list;
//                }
//            }
//        }
//        $assign_data = [
//            'department' => $arr,
//        ];
//        $this->assign($assign_data);
//        return $this->fetch('notice_dep_select');
//    }
    //公告添加
    public function addNoticeAndDepartment(){
        if($this->request->isPost()){
            $data = $this->request->post();
            $model=new OfficeNotice();
            $validate_name="base/OfficeNotice.edit";
            $result=$this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["uuid"]=$this->member_info->uuid;
            $data["company_id"]=$this->member_info->company_id;
            $data["department_id"]=$this->member_info->department_id;
            $data["jobs_id"]=$this->member_info->jobs_id;
            return $model->saveNotice($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //显示公告详细
    public function showNoticeDetailed($guid=""){
        if (empty($guid)) {
            return self::showReturnCodeWithOutData(1003);
        }
        config(['default_ajax_return' => 'html',]);
        $list=model("base/OfficeNotice")->getPerByGuId($guid);
        if(isset($list["uuid"])){
            if(!empty($list["uuid"])){
                $list["name"]=Loader::model("base/PersonnelUser")->getInfoByUuId($list["uuid"])['name'];
            }
        }
        if(isset($list["jobs_id"])){
            if(!empty($list["jobs_id"])){
                $list["jobs_name"]=Loader::model("base/PersonnelJobs")->getPerByGuId($list["jobs_id"])->jobs_name;
            }
        }
        if(isset($list["company_id"])){
            if(!empty($list["company_id"])){
//                $value=model("base/PersonnelCompany")->getPerByGuId($list["company_id"]);
                $list["company_name"]=Loader::model("base/PersonnelCompany")->getPerByGuId($list["company_id"])->company_name;

            }
        }
        if(isset($list["department_id"])){
            if(!empty($list["department_id"])){
                $list["department_name"]=Loader::model("base/PersonnelDepartment")->getPerByGuId($list["department_id"])['department_name'];
            }
        }
        $assign_data = [
            'data' =>$list,
        ];
        $this->assign($assign_data);
        return $this->fetch('notice_detailed');

    }
    //所有公告
    public function showNoticeAll($type=""){
        if (empty($type)) {
            return self::showReturnCodeWithOutData(1003);
        }
        if($this->request->isPost()){
            if($type=="1"){
                $list=$this->showEasyUiJsonList("base/OfficeNotice",false,["type"=>$type,"company_id"=>$this->member_info->company_id]);
            }else if($type=="2"){
                $list=$this->showEasyUiJsonList("base/OfficeNotice",false,["type"=>$type,"company_id"=>$this->member_info->company_id]);
                $arr=[];
                $arr['rows']=[];
                if (!empty($list['rows'])){
                    foreach ($list['rows'] as $value){
                        $dep_list=Loader::model("base/OfficeNoticeAccess")->getList(['notice_id'=>$value['guid']],'department_id');
                        if (!empty($dep_list)){
                            foreach ($dep_list as $item){
                                if ($item['department_id']==$this->member_info->department_id){
                                    $arr['rows'][]=$value;
                                }
                            }
                        }
                    }
                }
                $arr['total']=count($arr['rows']);
                return $arr;
            }
            if(!empty($list["rows"])){
                foreach($list["rows"] as $value){
                    if(isset($value["jobs_id"])){
                        if(!empty($value["jobs_id"])){
                            $list["jobs_name"]=Loader::model("base/PersonnelJobs")->getPerByGuId($value["jobs_id"])->jobs_name;
                        }
                    }
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data = [
                'title' => $type=="1" ?  "公司公告列表" : "部门公告列表",
                'data_url'=>url('ShowNoticeAll', ['type' => $type])
            ];
            $this->assign($assign_data);
            return $this->fetch('notice_all_list');
        }
    }
    //通知公告管理(全公司)
    public function showNoticeList(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/OfficeNotice",false,["company_id"=>$this->member_info->company_id]);
            if(!empty($list["rows"])){
//                foreach($list["rows"] as $value){
////                    if(isset($value["jobs_id"])){
////                        if(!empty($value["jobs_id"])){
////                            $value["jobs_name"]=$list["jobs_name"]=model("base/PersonnelJobs")->getPerByGuId($value["jobs_id"])->jobs_name;
////                        }
////                    }
////                    if(isset($value["uuid"])){
////                        if(!empty($list["uuid"])){
////                            $list["name"]=model("base/PersonnelUser")->getInfoByUuId($value["uuid"])['name'];
////                        }
////                    }
//                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data = [
                'title' =>"通知公告列表",
                'data_url'=>url('showNoticeList')
            ];
            $this->assign($assign_data);
            return $this->fetch('notice_list');
        }
    }
    //通知公告管理(部门)
    public function showNoticeListByDep(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/OfficeNotice",false,["company_id"=>$this->member_info->company_id,'department_id'=>$this->member_info->department_id]);
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $dep_list=Loader::model("base/OfficeNoticeAccess")->getList(['notice_id'=>$value['guid']],'department_id');
                    if (!empty($dep_list)){
                        foreach ($dep_list as $item){
                            if ($item['department_id']==$this->member_info->department_id){
                                $arr['rows'][]=$value;
                            }
                        }
                    }
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
//            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data = [
                'title' =>"通知公告列表",
                'data_url'=>url('showNoticeListByDep')
            ];
            $this->assign($assign_data);
            return $this->fetch('notice_by_dep_list');
        }
    }
    //修改公告
    public function showNoticeEdit($id=""){
        if (empty($id)) {
            return self::showReturnCodeWithOutData(1003);
        }

        if($this->request->post()){
            $data=model("base/OfficeNotice")->getPerByGuid($id);
            return self::showReturnCodeWithOutData(1001,$data);
        }else{
            config(['default_ajax_return' => 'html',]);
            $data=model("base/OfficeNotice")->getPerByGuid($id);
            $assign_data = [
                'guid' =>$data->guid,
                'id'=>$data->id
            ];
            $this->assign($assign_data);
            return $this->fetch('notice_edit');
        }

    }
    public  function NoticeEdit($id=""){
        if (empty($id)) {
            return self::showReturnCodeWithOutData(1003);
        }
        if($this->request->post()){
            $data=$this->request->post();
            $data["id"]=$id;
            $model_name="base/OfficeNotice";
            $validate_name='base/OfficeNotice.ed';
            return $this->doModelAction($data, $validate_name, $model_name);
        }
    }
    //删除公告
    public function delNotice(){
        if($this->request->isPost()){
            $id = $this->request->param('id');
            $model_name="base/OfficeNotice";
            if (isset($id)) {
                return self::showReturnCodeWithOutData(Loader::model($model_name)->setStatusDelByGuid($id) ? 1001 : 1010);
            } else {
                return self::showReturnCodeWithOutData(1010);
            }
        }
    }
    //总经理专线
    public function showAddManagerLine(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('manager_line');
    }
    //提交总经理专线
    public function addManagerLine(){
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/OfficeManagerLine.edit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["uuid"]=$this->member_info->uuid;
            $data["company_id"]=$this->member_info->company_id;
            $data["department_id"]=$this->member_info->department_id;
            $data["jobs_id"]=$this->member_info->jobs_id;
            return json(model("base/OfficeManagerLine")->editData($data));
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //我的专线
    public function showManagerList($type=""){
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
            'title' =>"我的专线",
            'data_url'=>url('showManagerListUser')
        ];
        $this->assign($assign_data);
        return $this->fetch('manager_line_list_u');
    }
    public function showManagerListUser(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/OfficeManagerLine",false,["uuid"=>$this->member_info->uuid]);
            foreach($list["rows"] as $value){
                if(isset($value["department_id"])){
                    $value["department_name"]=model("base/PersonnelDepartment")->getPerByGuId($value["department_id"])->department_name;
                }
            }
             return $list;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //专线审核
    public function showManagerStatus(){
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
            'title' =>"专线审阅",
            'data_url'=>url('ManagerListStatus')
        ];
        $this->assign($assign_data);
        return $this->fetch('manager_line_list');
    }
    public function ManagerListStatus(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/OfficeManagerLine",false,["company_id"=>$this->member_info->company_id],false,["order"=>"asc","sort"=>'manager_status']);
            foreach($list["rows"] as $value){
                if(isset($value["department_id"])){
                    $value["department_name"]=model("base/PersonnelDepartment")->getPerByGuId($value["department_id"])->department_name;
                }
                if(isset($value["company_id"])){
                    $value["company_name"]=model("base/PersonnelCompany")->getPerByGuId($value["company_id"])->company_name;
                }
            }
            return $list;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    public function editManagerStatus($guid=""){
        if (empty($guid)){
            return self::showReturnCodeWithOutData(1003);
        }
        if($this->request->isPost()){
            $list=model("base/OfficeManagerLine")->getPerByGuid($guid);
            return self::showReturnCodeWithOutData(1001,$list);
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'guid' =>$guid,
            ];
            $this->assign($assign_data);
            return $this->fetch('manager_status_edit');
        }
    }
    public function editStatusManager(){
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/OfficeManagerLine.dit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return json(model("base/OfficeManagerLine")->editData($data));
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //维修投诉
    public function showComplaint(){
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
            'guid' =>1,
        ];
        $this->assign($assign_data);
        return $this->fetch('complaint');
    }
    //添加维修投诉单
    public function addComplaint(){
        if($this->request->isPost()){
            $data=$this->request->post();
            $data["time"]=strtotime($data["time"]);
            $data["end_time"]=strtotime($data["end_time"]);
            $data["uuid"]=$this->member_info->uuid;
            $data["company_id"]=$this->member_info->company_id;
            $validate_name="base/OfficeComplaint.edit";
            $re=$this->validate($data, $validate_name);
            if (true !== $re) return ['code' => '1003', 'msg' => $re,];
            return  json(model("base/OfficeComplaint")->editData($data));
        }
    }
    //维修投诉单列表
    public function showComplaintList(){
        if($this->request->isPost()){
            $model="base/OfficeComplaint";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false);
            if(!empty($list["rows"])){
                foreach($list["rows"] as $value){
                    $value["time"]=date("Y-m-d",$value["time"]);
                    $user=model("base/PersonnelUser")->getInfoByUuId($value["uuid"]);
                    $value["uuid_name"]=$user->name;
                    if(!empty($value["complaint_uuid"])){
                        $single=model("base/PersonnelUser")->getInfoByUuId($value["complaint_uuid"]);
                        $value["complaint_uuid"]=$single->name;
                    }
                }
            }

            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"维修投诉单列表",
                'data_url'=>url('showComplaintList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('complaint_list');
        }
    }
    public function showUser($guid=''){
        if(empty($guid)){
            return self::showReturnCodeWithOutData(1003);
        }
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
            'url'=>url('getUserJson'),
            'guid'=>$guid,
        ];
        $this->assign($assign_data);
        return $this->fetch('appoint_user');
    }
    public function getUserJson(){
        $model = "base/PersonnelUser";
        $list = $this->showEasyUiJsonList($model, false, ["company_id"=>$this->member_info->company_id], false, false);
        if(!empty($list["rows"])){
            foreach($list["rows"] as $value){
                $user=model("base/PersonnelUser")->getInfoByUuId($value["uuid"]);
            }
        }
        return $list;
    }
    public function addComplaintUuid(){
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/OfficeComplaint.dit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return model("base/OfficeComplaint")->saveInfoByGuid($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //显示个人添加的维修单
    public function showComplaintUserAdd(){
        if($this->request->isPost()){
            $model="base/OfficeComplaint";
            $list=$this->showEasyUiJsonList($model,false,["uuid"=>$this->member_info->uuid],false,false);
            if(!empty($list["rows"])){
                foreach($list["rows"] as $value){
                    $value["time"]=date("Y-m-d",$value["time"]);
                    $user=model("base/PersonnelUser")->getInfoByUuId($value["uuid"]);
                    $value["uuid_name"]=$user->name;
                    if(!empty($value["complaint_uuid"])){
                        $single=model("base/PersonnelUser")->getInfoByUuId($value["complaint_uuid"]);
                        $value["complaint_uuid"]=$single->name;
                    }
                }
            }

            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"我的维修投诉单管理",
                'data_url'=>url('showComplaintUserAdd'),
            ];
            $this->assign($assign_data);
            return $this->fetch('complaint_user_add');
        }
    }
    //显示我需要处理的维修单
    public function showComplaintUserHave(){
        if($this->request->isPost()){
            $model="base/OfficeComplaint";
            $list=$this->showEasyUiJsonList($model,false,["complaint_uuid"=>$this->member_info->uuid],false,false);
            if(!empty($list["rows"])){
                foreach($list["rows"] as $value){
                    $value["time"]=date("Y-m-d",$value["time"]);
                    $user=model("base/PersonnelUser")->getInfoByUuId($value["uuid"]);
                    $value["uuid_name"]=$user->name;
                    if(!empty($value["complaint_uuid"])){
                        $single=model("base/PersonnelUser")->getInfoByUuId($value["complaint_uuid"]);
                        $value["complaint_uuid"]=$single->name;
                    }
                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"我的维修投诉单管理",
                'data_url'=>url('showComplaintUserHave'),
            ];
            $this->assign($assign_data);
            return $this->fetch('complaint_user_have');
        }
    }
    //处理状态的修改
    public function editProcessingStatus($guid=""){
        if(empty($guid)){
            return self::showReturnCodeWithOutData(1003);
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/OfficeComplaint.ed';
            $result= $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["guid"]=$guid;
            return model("base/OfficeComplaint")->saveInfoByGuid($data);
        }else{
           return self::showReturnCodeWithOutData(1003);
        }
    }
    //维修回访
    public function showComplaintDesc(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('complaint_desc');
    }
    public function addComplaintDesc($guid=""){
        if(empty($guid)){
            return self::showReturnCodeWithOutData(1003);
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/OfficeComplaint.desc';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["guid"]=$guid;
            return model("base/OfficeComplaint")->saveInfoByGuid($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
//    //员工通讯录（管理者的）
//    public function userAdminList(){
//        if($this->request->isPost()){
//            $model="base/PersonnelUser";
//            $list=$this->showEasyUiJsonListNoStatus($model,false,["company_id"=>$this->member_info->company_id],false,false);
//            return $list;
//        }else{
//            config(['default_ajax_return' => 'html',]);
//            $assign_data= [
//                'title' =>"员工通讯录",
//                'data_url'=>url('userAdminList'),
//                'dialog_url'=>url("userEdit"),
//                'map'=>["company_id"=>$this->member_info->company_id],
//                'ma'=>["guid"=>$this->member_info->company_id],
//            ];
//            $this->assign($assign_data);
//            return $this->fetch('user_list');
//        }
//    }
//    public function userEdit(){
//        $id = $this->request->param('id');
//        $action = $this->request->param('action');
//        $model_name="base/PersonnelUser";
//        $validate_name="base/PersonnelUser.edit";
//        $view_name="user_edit";
//        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
//    }
    public function userByRole(){ //人事的
        if($this->request->isPost()){
            $model="base/PersonnelUser";
            $list=$this->showEasyUiJsonListNoStatus($model,false,["company_id"=>$this->member_info->company_id],false,false,['status'=>'desc']);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"通讯录",
                'data_url'=>url('userByRole'),
                'dialog_url'=>url("userEditByRole"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('userbyrole');
        }
    }
    public function userEditByRole(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelUser";
        $validate_name="base/PersonnelUser.eredit";
        $view_name="usereditbyrole";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }

    //显示公司数据
    public function showCompanyJson(){
//        $model=new PersonnelCompany();
        $com=PersonnelCompany::quickGet($this->member_info->company_id);
//        $list=$model->setCacheSystem()["company"][$this->member_info->company_id];
//        $arr["id"]=$list["guid"];
//        $arr["text"]=$list["company_name"];
        $arr[]=$com;
       return json($arr);
    }
    public function showDepartmentJson($type=""){
        $model=new PersonnelDepartment();
        $arr=$model->getList(['company_id'=>$this->member_info->company_id]);
        return json($arr);

    }
    public function showJobsJson($department=""){
        $model=new PersonnelJobs();
        if (empty($department)) return json([]);
        $list=$model->getList(['department_id'=>$department]);
//        $list=$model->setCacheSystem()["jobs"];
//        $arr=[];
//        if(empty($department)){
//            foreach($list as $value){
//                if($value["company_id"]==$this->member_info->company_id){
//                    $arr[]=$value;
//                }
//            }
//            return json($arr);
//        }
//        foreach($list as $value){
//            if($value["company_id"]==$this->member_info->company_id && $value["department_id"]==$department){
//                $arr[]=$value;
//            }
//        }
//
//        if(empty($arr)){
//            foreach($list as $value){
//                if($value["company_id"]==$this->member_info->company_id){
//                    $arr[]=$value;
//                }
//            }
//        }
        return json($list);
    }
    //显示添加公司页面
    public function company(){
        if($this->request->isPost()){
            $model="base/PersonnelCompany";
            $list=$this->showEasyUiJsonList($model,false,["guid"=>$this->member_info->company_id],false,false);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"公司列表",
                'data_url'=>url('company'),
                'dialog_url'=>url("company_edit"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('company_list');
        }
    }
    public function company_edit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelCompany";
        $validate_name="base/PersonnelCompany.edit";
        $view_name="system/company_edit";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    //显示添加部门页面
    public function department(){
        if($this->request->isPost()){
            $model="base/PersonnelDepartment";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"部门列表",
                'data_url'=>url('department'),
                'dialog_url'=>url("department_edit"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('department_list');
        }
    }
    public function department_edit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelDepartment";
        $validate_name="base/PersonnelDepartment.edit";
        $view_name="department_edit";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    //显示添加职位页面
    public function jobs(){
        if($this->request->isPost()){
            $model="base/PersonnelJobs";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"职位列表",
                'data_url'=>url('jobs'),
                'dialog_url'=>url("jobs_edit"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('jobs_list');
        }
    }
    public function jobs_edit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelJobs";
        $validate_name="base/PersonnelJobs.edit";
        $view_name="jobs_edit";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    //显示待分配权限的用户
    public function showNoRoleByUser(){
        if($this->request->isPost()){
            $model="base/PersonnelUser";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'status'=>0],false,false);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' =>"需分配权限用户",
                'data_url'=>url('showNoRoleByUser'),
                'dialog_url'=>url("user_edit"),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["guid"=>$this->member_info->company_id],
            ];
            $this->assign($assign_data);
            return $this->fetch('set_user_role');
        }
    }
    public function user_edit(){
        $id = $this->request->param('id');
        $action = $this->request->param('action');
        $model_name="base/PersonnelUser";
        $validate_name="";
        $view_name="work/setuserrole_edit";
        return $this->editUserData($id,$action,$model_name,$validate_name,$view_name);
    }
    //我的假条
    public function showMyLeave(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/OfficeLeave',false,['leave_name'=>$this->uuid]);
            return $list;
        }else{
            $arr=[
                'title'=>'我的假条',
                'data_url'=>url("showMyLeave"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('user/show_my_leave');
        }
    }

    public function showRoleJson(){
        $model=new PersonnelRole();
        $list=$model->getList(['company_id'=>$this->member_info->company_id]);
        return $list;
    }















//    //显示员工录入页面
//    public function showUserAdd(){
//        config(['default_ajax_return' => 'html',]);
//        return $this->fetch('userAdd');
//    }
}