<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\BudgetCopySpace;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\PrintRequest;
use app\base\model\budget\ReviseBudget;
use app\base\model\budget\SpaceTemplateUser;
use app\base\model\budget\BudgetTem;
use app\base\model\BudgetDefaultProject;
use app\base\model\design\DesignApplyTurning;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelUser;
use app\base\model\Project;
use app\base\model\project\ProjectContractAudit;
use app\base\model\ProjectAudit;
use app\base\model\ProjectContacts;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class DesignExtract extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    public function showTemEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('show_tem_edit');
    }
    public function showApplyEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('show_apply_edit');
    }
    /*项目预算保存为模板*/
    public function copySpace($type="",$guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name='base/BudgetTem.add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['company_id']=$this->member_info->company_id;
            $model=new BudgetTem();
            $data['type']=empty($type) || !in_array($type, ['1',"2"]) ? "1" :$type;
            $data['uuid']=$this->member_info->uuid;
            return $model->saveSpace($data,$guid);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*复制单一空间*/
    public function spaceCopy(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $data['company_id']=$this->member_info->company_id;
            $model=new BudgetCopySpace();
            $data['type']=empty($type) || !in_array($type, ['1',"2"]) ? "1" :$type;
            $data['uuid']=$this->member_info->uuid;
            return $model->saveSpace($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*模板提取页面*/
    public function showTemHtml($pro_id="",$type=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        if (empty($type)) return self::showReturnCodeWithOutData(1003);
        if (!in_array($type, ['1',"2"])) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $model="base/budget/BudgetTem";
            if ($type=="1"){
                $list=$this->showEasyUiJsonListNo($model,false,["company_id"=>$this->member_info->company_id,'type'=>1,'uuid'=>$this->uuid],false,false);
            }else if($type=="2"){
                $list=$this->showEasyUiJsonListNo($model,false,["company_id"=>$this->member_info->company_id,'type'=>2],false,false);
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'pro_id' => $pro_id,
                'title'=>$type=="1" ? '个人模板' : '共享模板',
                'data_url'=>url("showTemHtml",['pro_id'=>$pro_id,'type'=>$type])
            ];
            $this->assign($assign_data);
            return $this->fetch('show_tem_html');
        }
    }
    /*提取空间*/
    public function getSpace($pro_id="",$type=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        if (empty($type)) return self::showReturnCodeWithOutData(1003);
        if (!in_array($type, ['1',"2"])) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $model="base/budget/BudgetCopySpace";
            if ($type=="1"){
                $list=$this->showEasyUiJsonListNo($model,false,["company_id"=>$this->member_info->company_id,'space_type'=>1,'uuid'=>$this->uuid,'pid'=>0],false,false);
            }else if($type=="2"){
                $list=$this->showEasyUiJsonListNo($model,false,["company_id"=>$this->member_info->company_id,'space_type'=>2,'pid'=>0],false,false);
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'pro_id' => $pro_id,
                'title'=>$type=="1" ? '个人空间' : '共享空间',
                'data_url'=>url("getSpace",['pro_id'=>$pro_id,'type'=>$type])
            ];
            $this->assign($assign_data);
            return $this->fetch('get_space');
        }
    }
    /*删除預算模板*/
    public function delTem(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new BudgetTem();
            return  $model->delTem($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*删除空间*/
    public function delSpace(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new BudgetCopySpace();
            return  $model->delSpace($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }

    /*模板提取*/
    public function copyTemData(){
        if ($this->request->post()){
            $data=$this->request->post();
            $model=new BudgetDefaultProject();
            return $model->copyTem($data,$this->member_info->name,$this->member_info->mobile,$this->uuid);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*空间提取*/
    public function getSpaceData(){
        if ($this->request->post()){
            $data=$this->request->post();
            $model=new BudgetDefaultProject();
            return $model->getSpaceData($data,$this->member_info->name,$this->member_info->mobile,$this->uuid);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*打印申请*/
    public function applySpace($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003,'申请原因不能为空');
            if (!isset($data['desc'])) return self::showReturnCodeWithOutData(1003);
            $model=new PrintRequest();
            $data['company_id']=$this->member_info->company_id;
            $re=$model->savaData($data,$guid,$this->uuid,$this->member_info->name);
            if ($re['code']=="1001"){
                $model_name=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="打印申请";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('budgetPrint');
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*打印审核页面*/
    public function showApplyList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/budget/PrintRequest',false,["examine_status"=>0,'company_id'=>$this->member_info->company_id]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'审核列表',
                'data_url'=>url("showApplyList"),
                'url'=>url('saveApprovalEdit'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_apply_list');
        }
    }
    /*	模板内容详情*/
    public function lookTem($guid="",$pro_id=""){
        if (empty($guid) || empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        $tem=Loader::model("base/budget/BudgetTem")->getInfoByGuId($guid);
        if ($this->request->isPost()){
            $list=Loader::model("base/budget/SpaceTemplateUser")->getList(["company_id"=>$this->member_info->company_id,'space_id'=>$guid,'pid'=>0]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'模板详情内容',
                'data_url'=>url("lookTem",["guid"=>$guid,'pro_id'=>$pro_id]),
                'name'=>empty($tem) ? "" : $tem['name'],
                'pro_id'=>$pro_id,
            ];
            $this->assign($assign_data);
            return $this->fetch('look_tem');
        }
    }
    /*提取模板的某个空间数据*/
    public function copyData(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data))  return self::showReturnCodeWithOutData(1003);
            $model=new BudgetDefaultProject();
            $data['company_id']=$this->member_info->company_id;
            $data['uuid']=$this->uuid;
            $data['user_name']=$this->member_info->name;
            $data['user_tel']=$this->member_info->mobile;
            return $model->copyData($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*查看某个空间数据*/
    public function showTemData($pro_id="",$guid=""){
        if (empty($pro_id) || empty($guid)) return self::showReturnCodeWithOutData(1003);
        $tem=Loader::model("base/budget/SpaceTemplateUser")->getInfoByGuId($guid);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/budget/SpaceTemplateUser',false,["company_id"=>$this->member_info->company_id,'pid'=>$guid]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'data_url'=>url("showTemData",['pro_id'=>$pro_id,"guid"=>$guid]),
                'pro_id'=>$pro_id,
                'name'=>empty($tem) ? "" : $tem['name'],
                'none'=>'inline-block'
            ];
            $this->assign($assign_data);
            return $this->fetch('show_tem_data');
        }
    }
    /*菜单节点中未找到*/
    public function lookSpace($guid="",$pro_id=""){
        if (empty($pro_id) || empty($guid)) return self::showReturnCodeWithOutData(1003);
        $tem=Loader::model("base/budget/BudgetCopySpace")->getInfoByGuId($guid);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/budget/BudgetCopySpace',false,["company_id"=>$this->member_info->company_id,'pid'=>$guid]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'data_url'=>url("lookSpace",['pro_id'=>$pro_id,"guid"=>$guid]),
                'pro_id'=>$pro_id,
                'name'=>empty($tem) ? "" : $tem['name'],
                'none'=>'none'
            ];
            $this->assign($assign_data);
            return $this->fetch('show_tem_data');
        }
    }
    /*提取预算模板中的多条数据*/
    public function saveTemData(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data))  return self::showReturnCodeWithOutData(1003);
            $model=new BudgetDefaultProject();
            $data['company_id']=$this->member_info->company_id;
            $data['uuid']=$this->uuid;
            $data['user_name']=$this->member_info->name;
            $data['user_tel']=$this->member_info->mobile;
            return $model->copyDataMore($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    public function showApprovalEdit(){  //打印审批页面
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('show_approval_edit');
    }
    /*打印审核权限*/
    public function saveApprovalEdit($id="",$guid=""){
        if (empty($id)) return self::showReturnCodeWithOutData(1003);
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);

            $m=isset($data['examine_status']) ? $data['examine_status'] : 0 ;


            $model=new PrintRequest();
            $data['examine_uuid']=$this->uuid;
            $data['examine_uuid_name']=$this->member_info->name;
            $re=$model->buildBudgetBook($data,$id,$guid);

            if ($re['code']=="1001" && in_array($m,[1,-1]) ){
                $model_name=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=($m==1)? "打印审批通过":"打印审批不通过";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*申请预算修改*/
    public function appChangeData($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003,'申请原因不能为空');
            if (!isset($data['desc'])) return self::showReturnCodeWithOutData(1003);
            $model=new ReviseBudget();
            $data['company_id']=$this->member_info->company_id;
            $re=$model->savaData($data,$guid,$this->uuid,$this->member_info->name);
            if ($re['code']=="1001"){
                $model_print=new PrintRequest();
                $model_print->delData($guid);
                $model_name=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="修改预算申请";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('budgetRevise');
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*显示申请预算修改的列表*/
    public function showChangeList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/budget/ReviseBudget',false,["examine_status"=>0,'company_id'=>$this->member_info->company_id]);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'审核列表',
                'data_url'=>url("showChangeList"),
                'url'=>url('saveChangeEdit'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_apply_list');
        }
    }
    /*修改预算审核权限*/
    public function saveChangeEdit($id="",$guid=""){
        if (empty($id)) return self::showReturnCodeWithOutData(1003);
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            $model=new ReviseBudget();
            $data['examine_uuid']=$this->uuid;
            $data['examine_uuid_name']=$this->member_info->name;
            $re=$model->editSaveData($data,$id);
            $m=isset($data['examine_status']) ? $data['examine_status'] : 0 ;
            if ($re['code']=="1001" && in_array($m,[1,-1]) ){
                if ($m=="1"){
                    $model_print=new PrintRequest();
                    $model_print->delData($guid);
                }
                $model_name=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=($m==1)? "预算修改申请审批通过":"预算修改申请审批不通过";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*申请记录页面*/
    public function showAppLog($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        config(['default_ajax_return' => 'html',]);
        $assign_data= [
            'data_url'=>url("showLogChange",['pro_id'=>$guid]),
            'url'=>url('showLogApp',['pro_id'=>$guid]),
        ];
        $this->assign($assign_data);
        return $this->fetch('show_app_log');
    }
    /*申请记录数据*/
    public function showLogApp($pro_id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        $model=new PrintRequest();
        $list=$model->getListNoStatus(['project_id'=>$pro_id]);
        return $list;
    }
    public function showLogChange($pro_id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        $model=new ReviseBudget();
        $list=$model->getListNoStatus(['project_id'=>$pro_id]);
        return $list;
    }
    /*显示待签合同项目(个人)*/
    public function showNoContract(){
        if($this->request->isPost()){
//            $department_type=array_search("设计部",FieldValue::getFieldValue("department_type"))?:3;
//            $budget=Loader::model('base/DesignBudget')->setCacheProjectData()['budget_book'];
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id,'uuid'=>$this->uuid]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont==1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
                    $value['contract_status']=$re;
                    $value['project_name']=$pro_name;
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '个人项目表',
                'dialog_url' => '',
                'data_url' => url('showNoContract'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_no_contract');
        }
    }
    /*申请签订合同页面*/
    public function showProjectAuditEdit($guid=""){   //申请签订合同
        config(['default_ajax_return' => 'html',]);
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        $list=Loader::model("base/Project")->getPerByGuId($guid);
        if(empty($list)){
            return self::showJsonReturnCode("1003");
        }
        $assign_data = [
            'guid'=>isset($list->guid) ? $list->guid : '' ,
            'project_name'=>isset($list->project_name) ? $list->project_name : '',
        ];
        $this->assign($assign_data);
        return $this->fetch('project_audit_edit');
    }
    /*显示待签合同项目(公司)*/
    public function showNoContractByCom(){
        if($this->request->isPost()){
//            $department_type=array_search("设计部",FieldValue::getFieldValue("department_type"))?:3;
//            $budget=Loader::model('base/DesignBudget')->setCacheProjectData()['budget_book'];
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont==1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
                    $value['contract_status']=$re;
                    $value['project_name']=$pro_name;
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '公司项目表',
                'dialog_url' => '',
                'data_url' => url('showNoContractByCom'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_no_contract_com');
        }
    }
    /*显示待签合同项目(部门)*/
    public function showNoContractByDep(){
        if($this->request->isPost()){
//            $department_type=array_search("设计部",FieldValue::getFieldValue("department_type"))?:3;
//            $budget=Loader::model('base/DesignBudget')->setCacheProjectData()['budget_book'];
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id,'uuid'=>$this->uuid]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont==1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
                    $value['contract_status']=$re;
                    $value['project_name']=$pro_name;
                    $flag=Project::quickGet($value['project_id']);
                    //显示同部门下的项目
                    if ($flag['design_department']==$this->member_info->department_id){
                        $arr['rows'][]=$value;
                    }

                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '部门项目表',
                'dialog_url' => '',
                'data_url' => url('showNoContractByDep'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_no_contract_dep');
        }
    }
    /*申请签订合同权限*/
    public function addProjectAuditEdit($guid="",$number=""){
        if(empty($guid)){
            return self::showJsonReturnCode("1003");
        }
        if(empty($number)){
            return self::showJsonReturnCode("1003");
        }
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name = 'base/ProjectAudit.addEdit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["project_id"]=$guid;
            $data['book_number']=$number;
            $data['transfer_name']=$this->member_info->name;
            $data["company_id"]=$this->member_info->company_id;
            $data["transfer_uuid"]=$this->member_info->uuid;
            $data["examine_status"]="0";   //   0  表示正在等待审核   1  表示审核通过   当不通过时改变转部状态
            $model_project=new Project();
            $req=$model_project->where(['guid'=>$guid,'status'=>1])->value('feedback_stage');
            switch ($req){  //判断是从哪个阶段提交的转部申请
                case "1":
                    $text='业务阶段转设计阶段申请';
                    break;
                case "2":
                    $text='设计阶段签订合同申请';
                    break;
                default:
                    $text='未知转部申请';
                    break;
            }
            $model_name=new ProjectContractAudit();
            $result_add=$model_name->saveData($data);
            if($result_add["code"]=="1001"){
                $model=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$text;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log['department_id']=$this->member_info->department_id;
                $model->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('contractSigning');
            }
            return json($result_add);
        }else{
            return self::showJsonReturnCode("1003");
        }
    }
    /*显示需要合同签订审核的列表*/
    public function showProjectContAudit(){ //
        if($this->request->isPost()){
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id]);
            $arr=[];
            $arr['rows']=[];
            if (!empty($proContract['rows'])){
                foreach($proContract["rows"] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                        'examine_status'=>0,
                    ];
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->find();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
//                    dump($value->toArray());
                    if(empty($re)){
                        unset($proContract["rows"][$key]);
                        continue;
                    }
                    $value['project_name']=$pro_name;
                    $value['transfer_name']=$re['transfer_name'];
                    $value['desc']=$re['transfer_desc'];
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=$proContract['total'];
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '审核项目表',
                'dialog_url' => '',
                'data_url' => url('showProjectContAudit'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_edit_contract');
        }

    }
    /*合同签订审核权限*/
    public function auditContract($guid="",$number=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if (empty($number)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            $model=new ProjectContractAudit();
            $data['examine_uuid']=$this->uuid;
            $data['examine_uuid_name']=$this->member_info->name;
            $cont=$model->where(['project_id'=>$guid,'book_number'=>$number,'status'=>1])->count();
            if ($cont==1){
                $re=$model->editSaveData($data,$number,$guid);
                $m=isset($data['examine_status']) ? $data['examine_status'] : 0 ;
                if ($re['code']=="1001" && in_array($m,[1,-1]) ){
                    $model_name=new ProjectTraceLog();
                    $log=[];
                    $log["log_content"]=($m==1)? "签订合同申请审批通过":"签订合同申请审批不通过";
                    $log["guid"]=$guid; //项目id
                    $log["uuid"]=$this->uuid;
                    $log["jobs_id"]=$this->member_info->jobs_id;
                    $log["department_id"]=$this->member_info->department_id;
                    $model_name->addProjectLog($log);
                }
                return $re;
            }else{
                return self::showReturnCodeWithOutData(1030,'请联系管理员');
            }
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*我的合同项目*/
    public function showContractProjectList(){
        if($this->request->isPost()){
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id,'uuid'=>$this->uuid]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                        'examine_status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont!=1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $project=Project::quickGet($value['project_id']);
                    $pro_name=$project['project_name'];
                    $value['contract_status']=$re;
                    $m=new Project();
//                    $user=$m->setCacheSystem()['user'];
//                    $dep=$m->setCacheSystem()['department'];
                    $str='';
                    $depart_id=PersonnelUser::quickGet($value["uuid"])["department_id"];
                    $str.="".PersonnelDepartment::quickGet($depart_id)["department_name"]."---".PersonnelUser::quickGet($value["uuid"])["name"];
                    $value['project_name']=$pro_name;
                    $value['tracking_name']=$str;
                    $apply_re=Loader::model('base/design/DesignApplyTurning')->where(['project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'examine_status'=>['in',[0,1]]])->count();
                    $value['apply_status']=$apply_re;
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '个人项目表',
                'dialog_url' => '',
                'data_url' => url('showContractProjectList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_contract_project_list');
        }
    }

    /*申请转工程部（已取消该功能，将会自动转入） 《---*/
    public function applyTurning($pro_id=""){ //
        if (empty($pro_id)) return self::showReturnCode(1003);
        $project=Project::quickGet($pro_id);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $book_number=Loader::model('base/project/ProjectContract')->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $model=new DesignApplyTurning();
            $data['company_id']=$this->member_info->company_id;
            $data['project_id']=$pro_id;
            $data['transfer_uuid']=$this->uuid;
            $data['transfer_name']=$this->member_info->name;
            $data['examine_status']=0;
            $data['project_name']=$project['project_name'];
            $data['book_number']=$book_number;
            $re=$model->saveCheck($data);
            if ($re['code']=="1001"){
                $model_name=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="申请转工程部";
                $log["guid"]=$pro_id; //项目id
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
            }
            return $re;
        }else{
            $arr=[
                'project_name'=>$project['project_name'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_apply_turning');
        }

    }
    public function showApplyTurningList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/design/DesignApplyTurning',false,['company_id'=>$this->member_info->company_id,'examine_status'=>0]);
            return $list;
        }else{
            $arr=[
                'title'=>'转工程部申请',
                'data_url'=>url("showApplyTurningList"),
                'url'=>url('editApplyTurning'),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_apply_turning_list');
        }
    }
    public function editApplyTurning($id=""){
        if (empty($id)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new DesignApplyTurning();
            $data['examine_uuid']=$this->uuid;
            $data['examine_name']=$this->member_info->name;
            $re=$model->editCheck($data,$id);
            if ($re['code']=="1001" && in_array($data['examine_status'],[1,-1]) ){
                $model_name=new ProjectTraceLog();
                $pro=DesignApplyTurning::quickGet($id);
                $log=[];
                $log["log_content"]=($data['examine_status']==1)? "转工程部申请审批通过":"转工程部申请审批不通过";
                $log["guid"]=$pro['project_id']; //项目id
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_name->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*---》*/

    /*公司已签合同项目*/
    public function showConProListByCom(){
        if($this->request->isPost()){
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                        'examine_status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont!=1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
                    $value['contract_status']=$re;
//                    $m=new Project();
//                    $user=$m->setCacheSystem()['user'];
//                    $dep=$m->setCacheSystem()['department'];
                    $str='';
                    $depart_id=PersonnelUser::quickGet($value["uuid"])["department_id"];
                    $str.="".PersonnelDepartment::quickGet($depart_id)["department_name"]."---".PersonnelUser::quickGet($value["uuid"])["name"];
                    $value['project_name']=$pro_name;
                    $value['tracking_name']=$str;
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=$proContract['total'];
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '已签合同项目表',
                'dialog_url' => '',
                'data_url' => url('showConProListByCom'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_contract_project_list');
        }
    }
    /*空间复制*/
    public function copyS(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new BudgetDefaultProject();
            return $model->copyS($data);
        }else{
            return self::showReturnCode(1003);
        }
    }
}