<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 *  办公用品管理
 */

namespace app\erp\controller;

use app\base\controller\PDF;
use app\base\controller\RedisHash;
use app\base\controller\Word;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\DefaultRateCopy;
use app\base\model\budget\PrintRequest;
use app\base\model\BudgetDefaultBook;
use app\base\model\BudgetDefaultRate;
use app\base\model\BudgetDefaultProject;
use app\base\model\build\BuildContractRint;
use app\base\model\build\BuildProjectCategoryPhoto;
use app\base\model\build\BuildProjectPercentage;
use app\base\model\build\BuildProjectTime;
use app\base\model\build\BuildSupervision;
use app\base\model\build\BuildSupervisionTem;
use app\base\model\build\BuildSupervisionUser;
use app\base\model\design\DesignPhoto;
use app\base\model\DesignBudgetAccess;
use app\base\model\DesignBudgetListAccess;
use app\base\model\DesignPhase;
use app\base\model\engin\EnginProjectBuildTypeAudit;
use app\base\model\engin\EnginProjectMaterial;
use app\base\model\engin\EnginProjectMaterialAddress;
use app\base\model\engin\EnginProjectMaterialApply;
use app\base\model\engin\EnginProjectMaterialCopy;
use app\base\model\MaterialDataStyle;
use app\base\model\MaterialListEdit;
use app\base\model\office\OfficeSuppliesApply;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelUser;
use app\base\model\Project;
use app\base\model\project\ProjectCollectPricePay;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRelatedPerson;
use app\base\model\DesignBudget;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\Auth;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Db;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class OfficeSupplies extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /*办公用品登记*/
    public function addOfficeSupplies(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new \app\base\model\office\OfficeSupplies();
            $validate_name='base/OfficeSupplies.supplies_add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data["company_id"]=$this->member_info->company_id;
            $re=$model->saveData($data);
            return json($re);
        }else{
            $arr=[
                'title'=>'办公用品登记',
                'url'=>url("addOfficeSupplies"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('add_office_supplies');
        }
    }
    /*办公用品列表*/
    public function officeSuppliesList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeSupplies",false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                "title"=>'办公用品管理',
                'data_url'=>url('officeSuppliesList'),
            ];
            $this->assign($arr);
            return $this->fetch("office_supplies_list");
        }
    }
    /*办公用品信息修改*/
    public function editSupplies($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new \app\base\model\office\OfficeSupplies();
            $validate_name='base/OfficeSupplies.supplies_add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return json($model->editCar($data,$guid));
        }else{
            $model=new \app\base\model\office\OfficeSupplies();
            $obj=$model->getInfoByGuId($guid);
            if (empty($obj)) return self::showJsonReturnCode(1003);
            $arr=[
                "car"=>$obj,
                'title'=>'办公用品信息修改',
                'url'=>url("editSupplies",["guid"=>$guid])
            ];
            $this->assign($arr);
            return $this->fetch('edit_supplies');
        }
    }
    /*删除办公用品*/
    public function delSupplies(){
        if ($this->request->isPost()){
            $data=$this->request->post("guid");
            if (empty($data)) return self::showJsonReturnCode(1003);
            $model=new \app\base\model\office\OfficeSupplies();
            return $model->delCar($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*办公用品列表(可领用)*/
    public function showSuppliesList(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeSupplies",false,["company_id"=>$this->member_info->company_id]);
            return $list;
        }else{
            $arr=[
                "title"=>'办公用品列表',
                'data_url'=>url('showSuppliesList'),
            ];
            $this->assign($arr);
            return $this->fetch("show_supplies_list");
        }
    }
    /*领用办公用品*/
    public function applyUseSupplies($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $model=new \app\base\model\office\OfficeSupplies();
        $obj=$model->getInfoByGuId($guid);
        if (empty($obj)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_name='base/OfficeSupplies.supplies_apply';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            if($data["number"]>$obj["number"]){
                return ['code' => '1003', 'msg' => "领取数量超过剩余数量，请重新输入",];
            }
            $model=new OfficeSuppliesApply();
            $data["uuid"]=$this->uuid;
            $data["company_id"]=$this->member_info->company_id;
            $data["supplies_id"]=$guid;
            $data["supplies_name"]=empty($obj)?"":$obj["name"];
            $data["examine_status"]=0;
            $re=$model->saveApplyData($data);
            return $re;
        }else{
            $arr=[
                "obj"=>$obj,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("apply_user_supplies");
        }
    }
    /*用品领取申请列表*/
    public function showSuppliesApply(){
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList("base/office/OfficeSuppliesApply",false,["company_id"=>$this->member_info->company_id,'examine_status'=>0]);
            return $list;
        }else{
            $arr=[
                'title'=>'办公用品领用申请列表',
                'data_url'=>url("showSuppliesApply"),
            ];
            $this->assign($arr);
            return $this->fetch("show_apply_supplies_list");
        }
    }
    /*用品领取申请审核*/
    public function editApply($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new OfficeSuppliesApply();
            $data["examine_uuid"]=$this->member_info->uuid;
            return $model->editProjectAudit($data,$guid);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*用品领取记录*/
    public function showApplySuppliesLog($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNoStatus("base/office/OfficeSuppliesApply",false,["company_id"=>$this->member_info->company_id,'supplies_id'=>$guid]);
            $model=new PersonnelUser();
            if (!empty($list["rows"])){
                foreach ($list["rows"] as $key=>$value){
                    $user=$model->getInfoByGuId($value["examine_uuid"]);
                    $list["rows"][$key]["examine_uuid_name"]=$user["name"];
                }
            }
            return $list;
        }else{
            $arr=[
                'data_url'=>url("showApplySuppliesLog",["guid"=>$guid]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("show_apply_supplies_log");
        }
    }
}