<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\controller\Upload;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\budget\DefaultRateCopy;
use app\base\model\build\BuildContractRint;
use app\base\model\build\BuildProjectPercentage;
use app\base\model\build\BuildProjectTime;
use app\base\model\build\BuildSupervisionTem;
use app\base\model\finance\Bank;
use app\base\model\finance\BankTransactionRecord;
use app\base\model\finance\CollectPlan;
use app\base\model\finance\CollectPlanAccess;
use app\base\model\finance\CollectStyle;
use app\base\model\finance\PaymentStyle;
use app\base\model\MaterialDataStyle;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelUser;
use app\base\model\Project;
use app\base\model\project\ProjectCollectPhoto;
use app\base\model\project\ProjectCollectPlan;
use app\base\model\project\ProjectCollectPrice;
use app\base\model\project\ProjectContract;
use app\base\model\project\ProjectField;
use app\base\model\project\ProjectPhoto;
use app\base\model\ProjectContacts;
use app\base\model\ProjectRemindTime;
use app\base\model\ProjectStructure;
use app\base\model\ProjectBuilding;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class Finance extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$project;
    }
    /*收款方式列表*/
    public function showPaymentList(){
        if ($this->request->isPost()){
            $model="base/finance/PaymentStyle";
            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id],false,false);
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'付款类型',
                'data_url'=>url("showPaymentList"),
                'add_url'=>url('addPaymentStyle'),
                'del_url'=>url('delPaymentStyle'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_payment_list');
        }
    }
    /*收付款方式添加*/
    public function addPaymentStyle(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            if (!isset($data['name'])) return self::showJsonReturnCode(1003);
            if (empty($data['name'])) return self::showJsonReturnCode(1003);
            $model=new PaymentStyle();
            if (!isset($data['company_id'])){
                $data['company_id']=$this->member_info->company_id;
            }
            return $model->addStyle($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*收付款方式删除*/
    public function delPaymentStyle(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
            $model=new PaymentStyle();
            return $model->delStyle($data['id']);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*资金账户列表*/
    public function showBankList(){
        if ($this->request->isPost()){
            $model="base/finance/Bank";
            $list=$this->showEasyUiJsonListNo($model,false,["company_id"=>$this->member_info->company_id],false,false);
            return $list;
        }else{
            $department_type=array_search("财务部",FieldValue::getFieldValue("department_type"))?:5;
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>'资金账户库',
                'data_url'=>url("showBankList"),
                'add_url'=>url('addBank'),
                'del_url'=>url('delBank'),
                'map'=>["company_id"=>$this->member_info->company_id],
                'ma'=>["company_id"=>$this->member_info->company_id,'department_type'=>$department_type],
            ];
            $this->assign($assign_data);
            return $this->fetch('show_bank_list');
        }
    }
    /*添加资金账户*/
    public function addBank(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            if (!isset($data['name'])) return self::showJsonReturnCode(1003);
            if (empty($data['name'])) return self::showJsonReturnCode(1003);
            $model=new Bank();
            if (!isset($data['company_id'])){
                $data['company_id']=$this->member_info->company_id;
            }
            $data['uuid_name']=Loader::model('base/PersonnelUser')->where(['uuid'=>$data['uuid']])->value('name');
            $validate_name='base/FinanceBank.add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return $model->addData($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
//    /*删除资金账户*/
//    public function delBank(){
//        if ($this->request->isPost()){
//            $data=$this->request->post();
//            if (empty($data)) return self::showJsonReturnCode(1003);
//            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
//            $model=new Bank();
//            return $model->delData($data['id']);
//        }else{
//            return self::showJsonReturnCode(1003);
//        }
//    }

    public function showBankJson($guid=""){
        $model=new Bank();
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $list=$model->getList(["company_id"=>$this->member_info->company_id,"status"=>1,"guid"=>["notIn",[$guid]]],"guid,name");
        return $list;
    }
    /*删除资金账户*/
    public function delBank($guid=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        $model=new Bank();
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
            return $model->delData($data['id'],$guid);
        }else{
            $obj=$model->getInfoByGuId($guid);
            $arr=[
                'title'=>empty($obj)?"":$obj["name"],
                'price'=>empty($obj)?"":$obj["balance_price"],
                'url'=>url("showBankJson",["guid"=>$guid]),
            ];
            self::echoHtml();
            $this->assign($arr);
            return $this->fetch("del_bank");
        }
    }
    /*修改资金账户余额*/
    public function editPrice($guid=""){  //
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        $model=new Bank();
        if($this->request->isPost()){
            $data=$this->request->post();
            $validate_name='base/FinanceBank.edit';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return $model->editPrice($data,$guid);
        }else{
            $list=$model->getInfoByGuId($guid);
            if (empty($list)) return self::showReturnCodeWithOutData(1003);
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title'=>$list['name'],
                'balance_price'=>$list['balance_price']

            ];
            $this->assign($assign_data);
            return $this->fetch('show_bank_edit_price');
        }
    }
    /*资金账号交易记录*/
    public function lookBankLog($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/finance/BankTransactionRecord',false,['bank_id'=>$guid],false,[],true);
            $income_price=0;
            $expenditure_price=0;
            $balance_price=0;
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $income_price+=$value['income_price'];
                    $expenditure_price+=$value['expenditure_price'];
                    $balance_price=$value['balance_price'];
                }
            }
            $list['footer'][]=[
                'bank_id'=>'合计',
                'income_price'=>number_format($income_price,2),
                'expenditure_price'=>number_format($expenditure_price,2),
                'balance_price'=>number_format($balance_price,2)
            ];
            return $list;
        }else{
            $model=new Bank();
            $list=$model->getInfoByGuId($guid);
            if (empty($list)) return self::showJsonReturnCodeWithOutData(1003);
            $assign_data= [
                'data_url'=>url('lookBankLog',['guid'=>$guid]),
                'title'=>'交易记录列表',
                'bank_name'=>$list['name'],
            ];
            $this->assign($assign_data);

            self::echoHtml();
            return $this->fetch('show_bank_log');
        }
    }


    /*款项类型列表*/
    public function collectStyleList(){
        if($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/finance/CollectStyle',false,['company_id'=>$this->member_info->company_id],false,[],true);
            return $list;
        }else{
            $assign_data= [
                'data_url'=>url('collectStyleList'),
                'title'=>'收款类型',
                'add_url'=>url("addCollectStyle"),
                'del_url'=>url("delCollectStyle")
            ];
            $this->assign($assign_data);

            self::echoHtml();
            return $this->fetch('show_collect_style');
        }
    }
    /*款项类型添加*/
    public function addCollectStyle(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            $model=new CollectStyle();
            if (!isset($data['company_id'])){
                $data['company_id']=$this->member_info->company_id;
            }
            $validate_name='base/FinanceCollect.add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return $model->addStyle($data);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    public function delCollectStyle(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showJsonReturnCode(1003);
            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
            $model=new CollectStyle();
            return $model->delStyle($data['id']);
        }else{
            return self::showJsonReturnCode(1003);
        }
    }
    /*已签合同收付款*/
    public function showContractProjectList(){  //已签合同
        if($this->request->isPost()){
            $proContract=$this->showEasyUiJsonList('base/project/ProjectContract',false,['company_id'=>$this->member_info->company_id]);
            $arr=[];
            $arr['rows']=[];
            if(!empty($proContract['rows'])){
                foreach ($proContract['rows'] as $key=>$value){
                    $map=[
                        'project_id'=>$value['project_id'],
                        'book_number'=>$value['book_number'],
                        'status'=>1,
                        'examine_status'=>1,
                    ];
                    $cont=Loader::model('base/project/ProjectContractAudit')->where([ 'project_id'=>$value['project_id'],'book_number'=>$value['book_number'],'status'=>1,'examine_status'=>1])->count();
                    if($cont!=1){
                        continue;
                    }
                    $re=Loader::model('base/project/ProjectContractAudit')->where($map)->count();
                    $pro_name=Loader::model('base/Project')->where(['guid'=>$value['project_id']])->value(['project_name']);
                    $value['contract_status']=$re;
                    $str='';
                    $depart_id=PersonnelUser::quickGet($value["uuid"])["department_id"];
                    $str.="".PersonnelDepartment::quickGet($depart_id)["department_name"]."---".PersonnelUser::quickGet($value["uuid"])["name"];
                    $value['project_name']=$pro_name;
                    $value['tracking_name']=$str;
                    //追加收款数据
                    $model_in=new ProjectCollectPrice();
                    $map_count=[
                        'project_id'=>$value['project_id'],
                        'collect_status'=>0,
                        'status'=>1,
                    ];

                    $num=$model_in->getCountObj('base/project/ProjectCollectPrice',$map_count);
                    $value['pay_in']=$num;
                    //追加付款数据
                    $num_out=$model_in->getCountObj('base/project/ProjectCollectPricePay',$map_count);
                    $value['pay_out']=$num_out;

                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '已签合同项目',
                'dialog_url' => '',
                'data_url' => url('showContractProjectList'),
            ];
            $this->assign($assign_data);
            return $this->fetch('show_contract_project_list');
        }
    }

    

    /*收款计划(查看申请的款项)*/
    public function collectionPlan($guid="",$type=""){
        if (empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            if ($type=="1"){
                $list=$this->showEasyUiJsonListNo('base/project/ProjectCollectPrice',false,['company_id'=>$this->member_info->company_id,'project_id'=>$guid,'collect_status'=>$type]);
            }else{
                $list=$this->showEasyUiJsonListNo('base/project/ProjectCollectPrice',false,['company_id'=>$this->member_info->company_id,'project_id'=>$guid,'collect_status'=>0,'cashier_uuid'=>$this->uuid]);
            }
            $model=new Project();
            $list=$model->getTime($list,'collect_date');
            return $list;
        }else{
            $obj=Loader::model("base/project/ProjectContract")->getInfoByGuId($guid);
            $list=Loader::model("base/project/ProjectDeposit")->getList(['project_id'=>$obj['project_id']]);
            $actual_price=0.00;
            if (!empty($list)) {
                foreach ($list as $value) {
                    $actual_price+= $value['collected_price'];
                }
            }
            $assign_data= [
                'data_url'=>url('collectionPlan',['guid'=>$obj['project_id']]),
                'url'=>url('collectionPlan',['guid'=>$obj['project_id'],'type'=>'1']),
                'title'=>'收款',
                'number'=>$obj['book_number'],
                'name'=>$obj['project_name'],
                'obj'=>$obj,
                'price'=>number_format($obj['contract_amount'],2),
                'plan_price'=>number_format($actual_price,2),//已付定金
                'actual_price'=>$obj['price'],//实际收入
                'pay_price'=>$obj['pay_price'],//实际支出
                'surplus_price'=>number_format($obj['contract_amount']-$obj['price'],2),//剩余金额
                'guid'=>$guid,
                'pro_id'=>$obj['project_id'], // 项目的id
                'collection_pay'=>url('collectionPayList',['guid'=>$obj['project_id']]),
                'pay_price_list'=>url('pricePayList',['guid'=>$obj['project_id']]),
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('finance/collection_plan');
        }
    }
    /*付款申请数据显示*/
    public function collectionPayList($guid=""){  //付款申请数据
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/project/ProjectCollectPricePay',false,['collect_status'=>0,'project_id'=>$guid,'examine_status'=>['<>','0']]);
            return $list;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*实际付款数据*/
    public function pricePayList($guid=""){  //
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/project/ProjectCollectPricePay',false,['project_id'=>$guid,'collect_status'=>1]);
            return $list;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*收款计划模板编辑*/
    public function collectPlanList(){  //
        if($this->request->post()){
            $list=$this->showEasyUiJsonListNo('base/finance/CollectPlan',false,['company_id'=>$this->member_info->company_id]);
            return $list;
        }else{
            $assign_data=[
                'title'=>'收款计划',
                'data_url'=>url("collectPlanList"),
                'add_url'=>url("addCollectPlanList"),
                'del_url'=>url('delCollectPlanList'),
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('collect_plan_list');
        }
    }
    /*收款计划模板的添加和修改*/
    public function addCollectPlanList(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new CollectPlan();
            if (!isset($data['company_id'])){
                $data['company_id']=$this->member_info->company_id;
            }
            $validate_name='base/CollectPlan.add';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return $model->addStyle($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*收款计划模板的删除*/
    public function delCollectPlanList(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
            $model=new CollectPlan();
            return $model->delStyle($data['id']);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*编辑收款计划模板子类*/
    public function editCon($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);

        if($this->request->post()){
            $list=$this->showEasyUiJsonListNo('base/finance/CollectPlanAccess',false,['collect_plan_id'=>$guid]);
            return $list;
        }else{
            $model=new CollectPlan();
            $obj=$model->where(['guid'=>$guid])->find();
            $assign_data=[
                'title'=>'收款计划子类',
                'name'=>$obj['collect_plan_name'],
                'data_url'=>url("editCon",['guid'=>$guid]),
                'add_url'=>url("addEditCon",['guid'=>$guid]),
                'del_url'=>url('delEditCon'),
            ];
            $this->assign($assign_data);
            self::echoHtml();
            return $this->fetch('edit_plan_list_con');
        }
    }
    /*	收款计划模板子类项的添加修改*/
    public function addEditCon($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (!isset($data['collect_plan_id'])){
                $data['collect_plan_id']=$guid;
            }
            $model=new CollectPlanAccess();
            $validate_name='base/CollectPlan.editAdd';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            return $model->addStyle($data);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*	收款计划模板子类项的删除*/
    public function delEditCon(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCodeWithOutData(1003);
            if (!isset($data['id'])) return self::showJsonReturnCode(1003);
            $model=new CollectPlanAccess();
            return $model->delStyle($data['id']);
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }
    /*查看款项的附件图片*/
    public function showPhotoList($guid="",$pro_id=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if (empty($pro_id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $map=[
                'project_id'=>$pro_id,
                'price_id'=>$guid,
            ];
            $list=$this->showEasyUiJsonListNo('base/project/ProjectCollectPhoto',false,$map);
            return $list;
        }else{

            $arr=[
                'url'=>url('showPhotoList',['guid'=>$guid,'pro_id'=>$pro_id]),
                'guid'=>$guid,
                'save_url'=>url("savePricePhoto",['guid'=>$guid,'pro_id'=>$pro_id]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('project_collection/show_price_photo_list');
        }
    }

    public function showAddPhotoHtml(){
        config(['default_ajax_return' => 'html',]);
        $assign_data=[
        ];
        $this->assign($assign_data);
        return $this->fetch('add_photo');
    }
    /*保存款项附件图片*/
    public function savePricePhoto($guid="",$pro_id=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if (empty($pro_id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $data['price_id']=$guid;
            $data['project_id']=$pro_id;
            $data['uuid_name']=$this->member_info->name;
            $data['uuid']=$this->uuid;
            $data['company_id']=$this->member_info->company_id;
            $model=new ProjectCollectPhoto();
            $re=$model->saveData($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]='上传款项附件图片';
                $log["guid"]=$pro_id;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*删除款项图片*/
    public function delPictures(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['id'])) return self::showReturnCode(1003);
            $model=new ProjectCollectPhoto();
            return $model->delProPhoto($data['id']);
        }else{
            return self::showReturnCode(1003);
        }
    }


    /*项目监控*/

    /*内控项目(领款核对)*/
    public function showProjectPriceCheck(){
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'feedback_stage'=>3,
                'engin_status'=>0
            ];
            $list=$this->showEasyUiJsonList("base/Project",false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $obj=Loader::model('base/build/BuildProjectTime')->where(['project_id'=>$value['guid'],'status'=>1])->find();
                    $obj=is_object($obj)? $obj->toArray() : $obj ;
                    if (empty($obj)){
                        $list['rows'][$key]['build_time']="";
                        $list['rows'][$key]['build_days']="";
                        $list['rows'][$key]['build_end_time']="";
                    }else{
                        $list['rows'][$key]['build_time']=date("Y-m-d ",$obj['build_time']);
                        $list['rows'][$key]['build_days']=$obj['build_days'];
                        $list['rows'][$key]['build_end_time']=date("Y-m-d ",$obj['build_time']+$obj['build_days']*60*60*24);
                    }

                }
            }
            return $list;
        }else{
            $arr=[
                'title'=>'内控项目',
                'data_url'=>url("showProjectPriceCheck"),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_project_price_check');
        }
    }
    /*查看项目工程()*/
    public function lookBuildFinance($guid=""){
        if (empty($guid)) return self::showReturnCodeWithOutData(1003);
        $numb_model=new BudgetBookNumber();
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/MaterialDataStyle',false,['company_id'=>$this->member_info->company_id]);
            $model=new DefaultProjectCopy();
            $book_number=$numb_model->where(['project_id'=>$guid,'status'=>1])->value('book_number');
            $price_sum=0;
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=>$value){
                    $project_list=$model->getList(['project_id'=>$guid,'book_number'=>$book_number,'category_id'=>$value['guid'],'pid'=>['<>','0']]);
                    $price_control=0;
                    if (!empty($project_list)){
                        foreach ($project_list as $item){
                            $price_control+=($item['zc_dj']+$item['fc_dj']+$item['rg_dj'])*$item['number'];

                        }
                    }
                    $obj=Loader::model("base/build/BuildProjectCategoryTime")->where(['project_id'=>$guid,'book_number'=>$book_number,'category_id'=>$value['guid'],'status'=>1])->find();
                    $obj=is_object($obj)? $obj->toArray() : $obj ;
                    if (empty($obj)){
                        $list['rows'][$key]['build_time']="";
                        $list['rows'][$key]['build_days']="";
                        $list['rows'][$key]['build_end_time']="";
                        $list['rows'][$key]['build_status']="";
                        $list['rows'][$key]['type']='';
                    }else{
                        $list['rows'][$key]['build_time']=date("Y-m-d ",$obj['build_time']);
                        $list['rows'][$key]['build_days']=$obj['build_days'];
                        $list['rows'][$key]['build_end_time']=date("Y-m-d ",$obj['build_time']+$obj['build_days']*60*60*24);
                        $list['rows'][$key]['type']=$obj['type'];
                        if (time()-($obj['build_time']+$obj['build_days']*60*60*24)>=0){
                            $time=(time()-($obj['build_time']+$obj['build_days']*60*60*24))/(60*60*24);
                            $list['rows'][$key]['build_status']=$time;
                            $list['rows'][$key]['build_status_type']=0;
                        }else{
                            $time=(($obj['build_time']+$obj['build_days']*60*60*24)-time())/(60*60*24);
                            $list['rows'][$key]['build_status']=$time;
                            $list['rows'][$key]['build_status_type']=1;
                        }
                    }
                    $list['rows'][$key]['categories_price']=sprintf("%.2f", $price_control);
                    $price_sum+=$price_control;
                }
            }
            $list['footer'][]=[
                'categories_name'=>'合计',
                'categories_price'=>sprintf("%.2f", $price_sum)
            ];
            return $list;
        }else{
            $arr=[
                'title'=>'项目工程',
                'data_url'=>url('lookBuildFinance',['guid'=>$guid]),
                'pro_id'=>$guid,  //项目id

            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('finance_monitor/look_build_project');
        }
    }
    /*项目领款明细(项目阶段领款的金额)*/
    public function showProjectPrice($pro_id=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $model=new BuildProjectPercentage();
            $numb_model=new BudgetBookNumber();
            $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $map=[
                'project_id'=>$pro_id,
                'book_number'=>$book_number,
            ];
            $list=$model->getList($map);
            $price=0;
            $sum=0;
            if (!empty($list)){
                foreach ($list as $value){
                    $category=MaterialDataStyle::quickGet($value['category_id']);
                    $sum+=$value['category_price'];
                    $value['category_name']=empty($category)?'': $category['categories_name'];
                    $value['price']=$value['category_price']*$value['value'];
                    $price+=$value['price'];
                    $value['value']=($value['value']*100).'%';
                }
                $list[]=[
                    'category_name'=>'项目完工结算',
                    'price'=>$sum-$price,
                    'value'=>'',
                ];
            }
            return $list;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*发包预算浏览*/
    public function contractPrintLook($pro_id=""){
        if (empty($pro_id)) return self::showReturnCode(1003);
        if($this->request->isPost()){
            $model=new BuildContractRint();
            $numb_model=new BudgetBookNumber();
            $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $arr=$model->returnBuContract($pro_id,$book_number);
            return $arr;
        }else{
            $arr=[
                'contract_url'=>url("contractPrintLook",['pro_id'=>$pro_id]),
                'pro_id'=>$pro_id,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch("build_none/contract_print_look");
        }
    }
    /*工程明细*/
    public function lookBuildDetailed($pro_id="",$id=""){
        if (empty($pro_id)) return self::showReturnCodeWithOutData(1003);
        if (empty($id)) return self::showReturnCodeWithOutData(1003);
        if ($this->request->isPost()){
            $numb_model=new BudgetBookNumber();
            $model=new DefaultProjectCopy();
            $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $project_list=$model->getList(['project_id'=>$pro_id,'book_number'=>$book_number,'category_id'=>$id,'pid'=>['<>','0']]);
            $num_price=0;
            foreach ($project_list as $value){
                $control_price=0;
                $control_price=$value['zc_dj']+$value['fc_dj']+$value['rg_dj'];
                $value['price_num']=number_format($control_price*$value['number'],2);
                $value['control_price']=$control_price;
                $num_price+=$control_price*$value['number'];
            }
            $project_list[]=[
                'name'=>'合计',
                'price_num'=>$num_price,
            ];
            return $project_list;
        }else{
            $pro=MaterialDataStyle::quickGet($id);
            $arr=[
                'title'=>'项目工程',
                'data_url'=>url('lookBuildDetailed',['pro_id'=>$pro_id,'id'=>$id]),
                'name'=>$pro['categories_name'],
                'pro_id'=>$pro_id,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('build_none/look_build_detailed');
        }
    }
    /*查看工程经理*/
    public function lookBuildUser($pro_id="",$guid=""){
        if(empty($pro_id)) return self::showJsonReturnCode(1003);
        if(empty($guid)) return self::showJsonReturnCode(1003);
        if ($this->request->isPost()){
            $numb_model=new BudgetBookNumber();
            $book_number=$numb_model->where(['project_id'=>$pro_id,'status'=>1])->value('book_number');
            $map=[
                'project_id'=>$pro_id,
                'book_number'=>$book_number,
                'category_id'=>$guid,
                'type'=>1,
            ];
            $model=new BuildSupervisionTem();
            $list=$model->getList($map);
            if (!empty($list)){
                foreach ($list as $value){
                    $user=PersonnelUser::quickGet($value['user_id']);
                    $dep=PersonnelDepartment::quickGet($user['department_id']);
                    $job=PersonnelJobs::quickGet($user['jobs_id']);
                    $value['name']=empty($user)?'':$user['name'];
                    $value['jobs_name']=empty($job)?'':$job['jobs_name'];
                    $value['department_name']=empty($dep)?'':$dep['department_name'];
                    $value['mobile']=empty($user)?'':$user['mobile'];
                }
            }
            return $list;
        }else{

            $arr=[
                'url'=>url("lookBuildUser",['pro_id'=>$pro_id,'guid'=>$guid])
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('build_none/look_build_user');
        }
    }
    /*预算书查看*/
    public function designBook($guid=""){
        if(empty($guid)) return self::showJsonReturnCode(1003);
        $model=new DefaultProjectCopy();
        $numb_model=new BudgetBookNumber();
        $book_number=$numb_model->where(['project_id'=>$guid,'status'=>1])->value('book_number');
        $data=$model->getDataList($guid,$book_number); //装修信息
        $book=Loader::model("base/budget/DefaultBookCopy")->getBook($guid,$book_number); //公司地址
        $contUser=Loader::model("base/ProjectContacts")->getProjectCont($guid);  //业主的信息
        $pro=Loader::model("base/Project")->getProject($guid); //项目的信息
        if (!empty($pro)){
            if (isset($pro['pro_style'])){
                $fi=new FieldValue();
                $pro['pro_style_name']=$fi->decoration_style[$pro['pro_style']];
            }
        }
        //    $sj_user=Loader::model("base/BudgetDefaultProject")->getUserName($guid);
        $sj_user=Loader::model("base/ProjectRelatedPerson")->getFind(['project_id'=>$guid,'department_type'=>3],'uuid');
        if (empty($sj_user)){
            $user_name='';
        }else{
            $user_name=Loader::model("base/PersonnelUser")->getList(["uuid"=>$sj_user['uuid']],'name,mobile');
        }
        $arr_u=[
            'name'=>empty($user_name) ?"": $user_name[0]['name'] ,
            'tel'=>empty($user_name) ?"":$user_name[0]['mobile'],
        ];
        $field=new FieldValue();
        if (isset($field->decoration_style[$book['budget_style']])){
            $book['budget_style']=$field->decoration_style[$book['budget_style']];
        }
        $assign_data=[
            'book'=>$book,
            'cont'=>$contUser,
            'project'=>$pro,
            'body'=>$data['body'],
            'foot'=>$data['foot'],
            'user'=>$arr_u,
            'book_number'=>$book_number
        ];
        $this->assign($assign_data);
        return $this->fetch('design/book');
    }
//    public function binDingCollectPlan($guid=""){ //查看已收款计划模板
//        if (empty($guid)) return self::showReturnCode(1003);  //合同书的guid,
//        $model=new ProjectContract();
//        $obj=$model->getInfoByGuId($guid);
//        if (empty($obj)) return self::showReturnCode(1003);
//        if ($this->request->isPost()){
//
//        }else{
//            $assign_data=[
//                'data_url'=>url("binDingCollectPlan",['guid'=>$guid]),
//            ];
//            $this->assign($assign_data);
//            self::echoHtml();
//            return $this->fetch('project_collection/binDingCollectPlan');
//        }
//    }
//    public function showCollPanList($guid=""){
//        if (empty($guid)) return self::showReturnCode(1003);
//            $model=new ProjectContract();
//            $obj=$model->getInfoByGuId($guid);
//            $assign_data=[
//                'title'=>'收款计划模板',
//                'data_url'=>url("collectPlanList"),
//                'number'=>$obj['book_number'],
//                'pro_id'=>$obj['project_id'],
//                'guid'=>$guid,
//                'url'=>url('addCollPlan')
//            ];
//            $this->assign($assign_data);
//            self::echoHtml();
//            return $this->fetch('show_collect_plan_list');
//    }
//    public function addCollPlan(){
//        if ($this->request->isPost()){
//            $data=$this->request->post();
//            $model=new ProjectCollectPrice();
//            if (empty($data)) return self::showReturnCode(1003);
//            if (!isset($data['id'])) return self::showReturnCode(1003);
//            if (!isset($data['pro_id'])) return self::showReturnCode(1003);
//            if (!isset($data['number'])) return self::showReturnCode(1003);
//            $data['collect_uuid']=$this->uuid;
//            $data['collect_uuid_name']=$this->member_info->name;
//            $re=$model->savePlanData($data,$this->member_info->company_id);
//            if ($re['code']=="1001"){
//                $model=new ProjectTraceLog();
//                $log=[];
//                $log["log_content"]="绑定收款计划";
//                $log["guid"]=$data['pro_id'];
//                $log["uuid"]=$this->uuid;
//                $log["jobs_id"]=$this->member_info->jobs_id;
//                $log["department_id"]=$this->member_info->department_id;
//                $model->addProjectLog($log);
//            }
//            return $re;
//        }else{
//            return self::showReturnCode(1003);
//        }
//    }

}