<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/5/23
 * Time: 13:02
 */

namespace app\erp\controller;

use app\base\controller\PDF;
use app\base\controller\Word;
use app\base\model\Base;
use app\base\model\budget\BudgetBookNumber;
use app\base\model\budget\DefaultProjectCopy;
use app\base\model\engin\EnginProjectBuildDate;
use app\base\model\engin\EnginProjectBuildType;
use app\base\model\engin\EnginProjectBuildTypeAccess;
use app\base\model\engin\EnginProjectBuildTypeAudit;
use app\base\model\engin\EnginProjectBuildTypeDay;
use app\base\model\engin\EnginProjectBuildTypeDayAccess;
use app\base\model\engin\EnginProjectBuildTypeDayAccessPhoto;
use app\base\model\engin\EnginProjectBuildTypeRemind;
use app\base\model\engin\EnginProjectBuildTypeUser;
use app\base\model\engin\EnginProjectCompletionAudit;
use app\base\model\MaterialDataStyle;
use app\base\model\Project;
use app\base\model\ProjectTraceLog;
use app\erp\config\FieldValue;
use app\erp\controller\template_message\SendTemplateMessage;
use mikkle\tp_wechat\support\Db;
use think\Loader;
use think\Session;
use app\erp\config\Config;


class EnginProject extends Auth
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
//        $this->config_list = Config::$Design;
    }
    /**/
    public function showBuildType($guid=""){
        $model=new MaterialDataStyle();
        $list=$model->getList(['company_id'=>$this->member_info->company_id],'guid,categories_name as name');
        if (!empty($list)&&!empty($guid)){
            $book_number=new BudgetBookNumber();
            $model=new DefaultProjectCopy();
            $book_number=$book_number->where(['project_id'=>$guid,'status'=>1])->value('book_number');
            foreach ($list as $key=>$value){
                $count=$model->where(['project_id'=>$guid,'book_number'=>$book_number,'category_id'=>$value['guid']])->count();
                if ($count==0){
                    unset($list[$key]);
                }
                $value['name']=$value['name'];
            }
        }
        return $list;
    }
//    public function showProjectOfUser(){
//        if($this->request->isPost()){
//            $model="base/Project";
//            $list=$this->showEasyUiJsonList($model,false,["company_id"=>$this->member_info->company_id,'feedback_stage'=>'3'],false,false);
//
//            if (!empty($list['rows'])){
//                foreach ($list['rows'] as $key=> $value){
//                   $map=[
//                       'examine_status'=>0,
//                       'project_id'=>$value['guid'],
//                       'status'=>1
//                   ];
//                   //判断有没有完工申请或者已经完工的
//                   $count=Loader::model('base/engin/EnginProjectCompletionAudit')->where($map)->count();
//                   $com=Loader::model('base/engin/EnginProjectCompletionAudit')->where(['examine_status'=>1,'project_id'=>$value['guid']])->count();
//                   $value['project_completion']=$count;
//
//                   if ($com=="1"){
//                       unset($list['rows'][$key]);
//                   }
//                   $value['project_comp']=$com;
//
//                }
//            }
//            return $list;
//        }else{
//            config(['default_ajax_return' => 'html',]);
//            $assign_data= [
//                'title' => '项目表',
//                'data_url' => url('showProjectOfUser'),
//            ];
//            $this->assign($assign_data);
//            return $this->fetch('project_build_plan');
//        }
//    }
    /*显示工程监理的项目数量(显示监理人员的数据)*/
    public function showUserOfProject(){
        if($this->request->isPost()){
            $count=Db::view("mk_build_supervision",['count(*)'=>"num","user_id"])
                ->view("mk_personnel_user","name",'mk_build_supervision.user_id=mk_personnel_user.uuid')
                ->where('mk_build_supervision.company_id',$this->member_info->company_id)
                ->where('mk_build_supervision.status',1)
                ->order("mk_build_supervision.user_id")
                ->where('mk_build_supervision.type',0)
                ->group("mk_build_supervision.user_id")
                ->count();
            $array=Db::view("mk_build_supervision",['count(*)'=>"num","user_id"])
                ->view("mk_personnel_user","name",'mk_build_supervision.user_id=mk_personnel_user.uuid')
                ->where('mk_build_supervision.company_id',$this->member_info->company_id)
                ->where('mk_build_supervision.status',1)
                ->where('mk_build_supervision.type',0)
                ->order("mk_build_supervision.user_id")
                ->group("mk_build_supervision.user_id")
                ->select();

            return ['total'=>$count,'rows'=>$array];
        }
    }
    /*显示所属监理的在建项目*/
    public function showProjectOfUser(){
        if($this->request->isPost()){
            $page=$this->request->param("page")?$this->request->param("page"):1;
            $rows=$this->request->param("rows")?$this->request->param("rows"):20;
            $user_id=$this->request->param("guid");
            $user_array=Db::view("mk_build_supervision",['count(*)'=>"num","user_id"])
                ->view("mk_personnel_user","name",'mk_build_supervision.user_id=mk_personnel_user.uuid')
                ->where('mk_build_supervision.company_id',$this->member_info->company_id)
                ->where('mk_build_supervision.status',1)
                ->where('mk_build_supervision.type',0)
                ->order("mk_build_supervision.user_id")
                ->group("mk_build_supervision.user_id")
                ->select();
            $list=[];
            if(!empty($user_array)){
                $uuid=$user_id?$user_id:$user_array[0]['user_id'];
                $pro_list=Db::view("mk_build_supervision",'project_id as guid')
                    ->view('mk_personnel_user','name','mk_personnel_user.uuid=mk_build_supervision.user_id')
                    ->view('mk_project','project_name,project_address','mk_project.guid=mk_build_supervision.project_id')
                    ->where(["mk_build_supervision.user_id"=>$uuid,'mk_build_supervision.status'=>1])
                    ->where('mk_build_supervision.type','0')
                    ->limit($rows)
                    ->page($page)
                    ->select();
            }else{
                $pro_list=[];
            }


            $list["rows"]=$pro_list;
            $list['total']=empty($user_array)?count($pro_list):$user_array[0]['num'];
           // $user_array= Db::query("SELECT count(mk_build_supervision.project_id) as num,`mk_personnel_user`.`name` FROM `mk_build_supervision` `mk_build_supervision` INNER JOIN `mk_personnel_user` `mk_personnel_user` ON `mk_build_supervision`.`user_id`=`mk_personnel_user`.`uuid` WHERE  `mk_build_supervision`.`company_id` = 'CP595B5F6F26346102505'  AND `mk_build_supervision`.`status` = 1 GROUP BY mk_build_supervision.user_id ORDER BY `mk_build_supervision`.`user_id`");
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $key=> $value){
                    $map=[
                        'examine_status'=>0,
                        'project_id'=>$value['guid'],
                        'status'=>1
                    ];
                    //判断有没有完工申请或者已经完工的
                    $count=Loader::model('base/engin/EnginProjectCompletionAudit')->where($map)->count();
//                    $com=Loader::model('base/engin/EnginProjectCompletionAudit')->where(['examine_status'=>1,'project_id'=>$value['guid']])->count();
                    $value['project_completion']=$count;
//
//                    if ($com=="1"){
//                        unset($list['rows'][$key]);
//                    }
//                    $value['project_comp']=$com;

                }
            }
            return $list;
        }else{
            config(['default_ajax_return' => 'html',]);
            $assign_data= [
                'title' => '项目表',
                'data_url' => url('showProjectOfUser'),
            ];
            $this->assign($assign_data);
            return $this->fetch('project_build_plan_copy');
        }
    }
    /*施工计划开始时间(已删除)*/
    public function buildPlanDate($guid=""){  //
        if (empty($guid)) return self::showReturnCode(1003);
        $numb_model=new BudgetBookNumber();
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_time='base/ProjectBuildPlan.add';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $model=new EnginProjectBuildDate();
            $data['uuid']=$this->uuid;
            $data['project_id']=$guid;
            $data['company_id']=$this->member_info->company_id;
            $data['build_time']=strtotime($data['build_time']);
            $re=$model->addBuildTime($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="制定项目施工时间";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            $project_cont=Project::quickGet($guid);
            $obj=$numb_model->where(['project_id'=>$guid,'status'=>1])->find();
            $arr=[
                'title'=>"工程进度表",
                'pro_id'=>$guid,
                'data_url'=>url('buildPlan',['guid'=>$guid]),
                'name'=>$project_cont['project_name'],
                'book_number'=>$obj['book_number'],
                'address'=>$project_cont['project_address'],
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('build_plan_date');
        }
    }

    /*项目的施工计划页面(已删除)*/
    public function buildPlan($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        $numb_model=new BudgetBookNumber();
        $obj=$numb_model->where(['project_id'=>$guid,'status'=>1])->find();
        if ($this->request->isPost()){
            $map=[
                'project_id'=>$guid,
                'book_number'=>$obj['book_number']
            ];
            $arr=[];
            $build_obj=Loader::model('base/engin/EnginProjectBuildDate')->where($map)->find();
            $build_obj=is_object($build_obj)?$build_obj->toArray():$build_obj;
            $build_obj['build_end_time']=$build_obj['build_time']+($build_obj['build_days']*60*60*24);
            $build_obj=$numb_model->getTime($build_obj,'build_time',false);
            $arr['rows'][]=[
                'build_name'=>'项目总工期',
                'build_time'=>date("Y-m-d ",$build_obj['build_time']),
                'build_end_time'=>date("Y-m-d ",$build_obj['build_end_time']),
                'desc'=>'项目的总工期',
                'guid'=>$build_obj['guid'],
                'build_days'=>$build_obj['build_days']
            ];
            $list=$this->showEasyUiJsonList('base/engin/EnginProjectBuildType',false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $value['build_end_time']=$value['build_time']+($value['build_days']*60*60*24);
                    $value=$numb_model->getTime($value,'build_time',false);
                    $value=$numb_model->getTime($value,'build_end_time',false);
//                    $map=[
//                        'build_id'=>$value['guid'],
//                        'status'=>1,
//                        'examine_status'=>0
//                    ];
                    $arr['rows'][]=$value;
                }
            }
            $arr['total']=count($arr['rows']);
            return $arr;
        }else{
            $project_cont=Project::quickGet($guid);
            $con=Loader::model('base/engin/EnginProjectBuildDate')->where(['project_id'=>$guid])->count();
            $arr=[
                'title'=>"工程进度表",
                'pro_id'=>$guid,
                'data_url'=>url('buildPlan',['guid'=>$guid]),
                'name'=>$project_cont['project_name'],
                'book_number'=>$obj['book_number'],
                'address'=>$project_cont['project_address'],
                'num'=>$con,
            ];
            $this->assign($arr);
            self::echoHtml();
            $success=Loader::model('base/engin/EnginProjectCompletionAudit')->where(['project_id'=>$guid,'examine_status'=>1])->count();
            if ($success==1){
                return $this->fetch('build_plan_success');
            }

            //            if($count==0) {
                return $this->fetch('build_plan');
//            }else{
//                return $this->fetch('build_plan_copy');
//            }
        }
    }
    /*查看所有的施工项目(已删除)*/
    public function assignJobs($guid=""){ //施工项目
        if (empty($guid)) return self::showReturnCode(1003);
        $numb_model=new BudgetBookNumber();
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/MaterialDataStyle',false,['company_id'=>$this->member_info->company_id]);
            $model=new DefaultProjectCopy();
            $book_number=$numb_model->where(['project_id'=>$guid,'status'=>1])->value('book_number');
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $pro_list=$model->getList(['project_id'=>$guid,'book_number'=>$book_number,'category_id'=>$value['guid']]);
                    if (empty($pro_list)){
                        continue;
                    }
                    $value['name']=$value['categories_name'];
                    $arr['rows'][]=$value;
                    if (!empty($pro_list)){
                        foreach ($pro_list as $item){
                            $item['_parentId']=$value['guid'];
                            $item['iconCls']='icon-blank';
                            $arr['rows'][]=$item;
                        }
                    }
                }
            }
            return $arr;
        }else{
            $arr=[
                'title'=>"施工项目列表",
                'pro_id'=>$guid,
                'data_url'=>url('assignJobs',['guid'=>$guid]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('assign_jobs_html');
        }
    }
    /*创建施工阶段(已删除)*/
    public function addBuildPlan($guid=""){ //创建一个施工阶段
        if (empty($guid)) return self::showReturnCode(1003);
        $numb_model=new BudgetBookNumber();
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_time='base/ProjectBuildPlan.addBuild';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $obj=$numb_model->where(['project_id'=>$guid,'status'=>1])->find();
            $data['uuid']=$this->uuid;
            $data['project_id']=$guid;
            $data['company_id']=$this->member_info->company_id;
            $data['build_time']=strtotime($data['build_time']);
            $data['book_number']=$obj['book_number'];
            $model=new EnginProjectBuildType();
            $re=$model->addBuildType($data);
            if ($re['code']=="1001"){
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="创建项目施工阶段";
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            $arr=[
                'pro_id'=>$guid
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('add_build_plan');
        }
    }
    /*添加施工阶段的施工人员(已删除)*/
    public function chargeUser($id=""){
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectBuildTypeUser',false,['build_type_id'=>$id]);
            return $list;
        }else{
            $arr=[
                'url'=>url('chargeUser',['id'=>$id]),
                'guid'=>$id
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('project_charge_user');
        }
    }
    /**/
    public function showUser($id=""){
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $map=[
              'company_id'=>$this->member_info->company_id,
            ];
            $list=$this->showEasyUiJsonList('base/PersonnelUser',false,$map);
            if (!empty($list['rows'])){
                foreach ($list['rows'] as $value){
                    $re=Loader::model('base/engin/EnginProjectBuildTypeUser')->where(['build_uuid'=>$value['uuid'],'status'=>1])->count();
                    $value['check']=$re;
                }
            }
            return $list;
        }else{
            $arr=[
                'url'=>url('showUser',['id'=>$id]),
                'guid'=>$id
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_user');
        }
    }
    /*选择施工人员(已删除)*/
    public function addComplaintUuid(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['guid'])) return self::showReturnCode(1003);
            if (!isset($data['appoint_uuid'])) return self::showReturnCode(1003);
            $model=new EnginProjectBuildTypeUser();
            $re=$model->addBuildUuid($data);
            if ($re['code']=="1001"){
                $project_id=EnginProjectBuildType::quickGet($data['guid']);
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="添加项目施工阶段的施工人员";
                $log["guid"]=$project_id['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*设置阶段负责人(已删除)*/
    public function changChargeUser(){  //设置阶段负责人
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildTypeUser();
            $re=$model->changChargeUser($data);
            if ($re['code']=="1001"){
                $id=EnginProjectBuildTypeUser::quickGet($data['id']);
                $project_id=EnginProjectBuildType::quickGet($id['build_type_id']);
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="设置项目施工阶段的负责人";
                $log["guid"]=$project_id['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*删除施工人员(已删除)*/
    public function delUser(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildTypeUser();
            $re=$model->delUser($data);
            if ($re['code']=="1001"){
                $id=EnginProjectBuildTypeUser::quickGet($data['id']);
                $project_id=EnginProjectBuildType::quickGet($id['build_type_id']);
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="删除项目施工阶段的施工人员";
                $log["guid"]=$project_id['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*添加施工人员的提醒(已删除)*/
    public function remindAppointUser($id=""){  //添加提醒
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_time='base/ProjectTraceLog.time';
            $data['remind_time']=strtotime($data['remind_time']);
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['uuid']=$this->uuid;
            $data['uuid_name']=$this->member_info->name;
            $model=new EnginProjectBuildTypeRemind();
            $re=$model->addBuildRemind($data,$id);
            if ($re['code']=="1001"){
                $project=EnginProjectBuildType::quickGet($id);
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]="添加施工阶段人员提醒";
                $log["guid"]=$project['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('remind_appoint_user');
        }
    }
    /*查看提醒(已删除)*/
    public function showAppointUser($id=""){  //查看提醒
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $map=[
                'build_type_id'=>$id,
            ];
            $list=$this->showEasyUiJsonList('base/engin/EnginProjectBuildTypeRemind',false,$map);
            $model=new EnginProjectBuildTypeRemind();
            $list=$model->getTimeHours($list,'remind_time');
            return $list;
        }else{
            $arr=[
                'url'=>url('showAppointUser',['id'=>$id]),
                'guid'=>$id
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_user_remind');
        }
    }
    /*删除提醒(已删除)*/
    public function delRemind(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildTypeRemind();
            $re=$model->delRemind($data);
            if ($re['code']=="1001"){
                $rem=EnginProjectBuildTypeRemind::quickGet($data['id']);
                if (!empty($rem)){
                    $project=EnginProjectBuildType::quickGet($rem['build_type_id']);
                    if (!empty($project)){
                        $model_log=new ProjectTraceLog();
                        $log=[];
                        $log["log_content"]="删除施工阶段人员提醒";
                        $log["guid"]=$project['project_id'];
                        $log["uuid"]=$this->uuid;
                        $log["jobs_id"]=$this->member_info->jobs_id;
                        $log["department_id"]=$this->member_info->department_id;
                        $model_log->addProjectLog($log);
                    }
                }

            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*施工阶段具体明细(已删除)*/
    public function showBuildTime($id=""){
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $map=[
                'build_type_id'=>$id,
            ];
            $list=$this->showEasyUiJsonList('base/engin/EnginProjectBuildTypeDay',false,$map,false,[],true);
            $model=new EnginProjectBuildTypeDay();
            $arr=[];
            $arr['rows']=[];
            if (!empty($list['rows'])) {
                $list = $model->getTime($list, 'day_time');
                foreach ($list['rows'] as $value) {
                    $day_list = Loader::model('base/engin/EnginProjectBuildTypeDayAccess')->getList(['day_id' => $value['guid']]);
                    $value['iconCls'] = 'icon-blank';
                    $arr['rows'][] = $value;
                    if (!empty($day_list)) {
                        foreach ($day_list as $item) {
                            $item['_parentId'] = $value['guid'];
                            $item['iconCls'] = 'icon-blank';
                            $arr['rows'][] = $item;
                        }
                    }
                }
            }
            return $arr;
        }else{
            $obj=EnginProjectBuildType::quickGet($id);
            $project=Loader::model('base/engin/EnginProjectBuildDate')->where(['project_id'=>$obj['project_id']])->find();
            $end_time=$obj['build_time']+(60*60*24*($obj['build_days']-1));
            $arr=[
                'url'=>url('showBuildTime',['id'=>$id]),
                'name'=>$project['project_name'],
                'address'=>$project['project_address'],
                'book_number'=>$project['book_number'],
                'build_name'=>$obj['build_name'],
                'build_id'=>$obj['build_id'],
                'id'=>$id,
                'status'=>$obj['type']==0?'inline-block':'none',
                'time'=>date("Y-m-d ",$obj['build_time']).'——'.date("Y-m-d ",$end_time)
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_build_time');
        }
    }
    /*删除施工阶段(已删除)*/
    public function delBuildPlan(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildType();
            $re=$model->delBuildPlan($data);
            if ($re['code']=="1001"){
                $project=EnginProjectBuildType::quickGet($data['id']);
                if (!empty($project)){
                    $model_log=new ProjectTraceLog();
                    $log=[];
                    $log["log_content"]="删除施工阶段";
                    $log["guid"]=$project['project_id'];
                    $log["uuid"]=$this->uuid;
                    $log["jobs_id"]=$this->member_info->jobs_id;
                    $log["department_id"]=$this->member_info->department_id;
                    $model_log->addProjectLog($log);
                }
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*添加工作内容(已删除)*/
    public function addBuildCon($guid="",$build=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildTypeDayAccess();
            $validate_time='base/ProjectBuildPlan.addDay';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['uuid']=$this->uuid;
            $data['uuid_name']=$this->member_info->name;
            $re=$model->addDayAccess($data);
            return $re;
        }else{
            $arr=[
                'day_id'=>$guid,
                'build'=>$build,
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('add_day_con');
        }
    }
    /*选择工作内容(已删除)*/
    public function showAddCon($id=""){
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $obj=Loader::model('base/engin/EnginProjectBuildType')->where(['build_id'=>$id,'status'=>1])->find();
//            dump($obj);
            $model=new DefaultProjectCopy();
            $list=$model->getList(['category_id'=>$id,'project_id'=>$obj['project_id'],'book_number'=>$obj['book_number']]);
            return $list;
        }else{
            $arr=[
                'build'=>$id,
                'url'=>url("showAddCon",['id'=>$id]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_add_con');
        }
    }
    /*选择工作时间(已删除)*/
    public function showAddTime($id=""){
        if (empty($id)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
//            $obj=Loader::model('base/engin/EnginProjectBuildType')->where(['build_id'=>$id,'status'=>1])->find();
            $model=new EnginProjectBuildTypeDay();
            $list=$model->getList(['build_type_id'=>$id]);
            $list=$model->getTime($list,'day_time',false);
            return $list;
        }else{
            $arr=[
                'build'=>$id,
                'url'=>url("showAddTime",['id'=>$id]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_add_time');
        }
    }
    /*删除工作内容(已删除)*/
    public function delDataCon(){
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['id'])) return self::showReturnCode(1003);
            $model=new EnginProjectBuildTypeDayAccess();
            $re=$model->delDataCon($data['id']);
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*查看施工图片(已删除)*/
    public function addBuildPhoto($guid=""){ //添加施工图片
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectBuildTypeDayAccessPhoto',false,['build_con_id'=>$guid]);
            return $list;
        }else{
            $arr=[
                'guid'=>$guid, //施工内容的id
                'url'=>url("addBuildPhoto",['guid'=>$guid]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_add_build_photo');
        }
    }
    /*上传施工图片(已删除)*/
    public function showAddSchedulePhotoHtml($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $validate_time='base/ProjectField.addP';
            if ($validate_time!= false) {
                $result = $this->validate($data, $validate_time);
                if (true !== $result) return self::showJsonReturnCodeWithOutData(1003,$result);
            }
            $data['add_uuid']=$this->uuid;
            $data['add_uuid_name']=$this->member_info->name;
            $data['build_con_id']=$guid;
            $model=new EnginProjectBuildTypeDayAccessPhoto();
            $re=$model->addDayAccessPhoto($data);
            return $re;
        }else{
            self::echoHtml();
            return $this->fetch('show_add_build_photo_edit');
        }
    }
    /*删除施工图片(已删除)*/
    public function delBuildPhoto(){ //删除施工图片
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['id']))  return self::showReturnCode(1003);
            $model=new EnginProjectBuildTypeDayAccessPhoto();
            $re=$model->delPhoto($data['id']);
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*施工阶段完成申请验收(已删除)*/
    public function buildContApply($guid=""){  //施工阶段完工申请
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            $model=new EnginProjectBuildTypeAudit();
            $data['company_id']=$this->member_info->company_id;
            $data['apply_uuid']=$this->uuid;
            $data['apply_name']=$this->member_info->name;
            $re=$model->addBuildTypeAuidt($data,$guid);
            if ($re['code']=="1001"){
                $title="项目阶段完工申请";
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
                //项目阶段完工通知验收
                SendTemplateMessage::sendTemplateMessage('projectStageCheck');
            }
            return $re;
        }else{
            $arr=[

            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('build_cont_apply');
        }
    }
    /*施工阶段申请记录(已删除)*/
    public function showBuildContApply($guid=""){ //施工阶段申请记录
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonListNoStatus('base/engin/EnginProjectBuildTypeAudit',false,['build_id'=>$guid]);
            return $list;
        }else{
            $arr=[
                'data_url'=>url('showBuildContApply',['guid'=>$guid]),
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_build_cont_apply_log');
        }
    }
    /*需要阶段验收的项目列表*/
    public function showBuildApplyProject(){
        if ($this->request->isPost()){
            $map=[
                'company_id'=>$this->member_info->company_id,
                'examine_status'=>0
            ];
            $list=$this->showEasyUiJsonListNo('base/engin/EnginProjectBuildTypeAudit',false,$map);
            return $list;
        }else{
            $arr=[
                'title'=>'项目阶段表',
                'data_url'=>url('showBuildApplyProject')
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_build_apply_project');
        }
    }
    /*确认验收项目阶段完工*/
    public function auditBuildApply($guid=""){
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectBuildTypeAudit();
            $data['examine_uuid']=$this->uuid;
            $data['examine_name']=$this->member_info->name;
            $re=$model->auditBuildApply($data,$guid);
            if ($re['code']=="1001"){
                $obj=EnginProjectBuildTypeAudit::quickGet($guid);
                $title=$data['examine_status']=="1"?"项目阶段完工验收通过":"项目阶段完工验收不通过";
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=$obj['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return  $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*工程完工申请*/
    public function projectCompletion($guid=""){   //项目施工完成申请
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectCompletionAudit();
            $data['company_id']=$this->member_info->company_id;
            $data['apply_uuid']=$this->uuid;
            $data['apply_name']=$this->member_info->name;
            $re=$model->addProjectCompletionAuidt($data,$guid);
            if ($re['code']=="1001"){
                $title="项目完工申请";
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=$guid;
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
                SendTemplateMessage::sendTemplateMessage('projectCheck');
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*显示需要完工验收的项目*/
    public function showProjectCompletionList(){   //
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/engin/EnginProjectCompletionAudit',false,['company_id'=>$this->member_info->company_id,'examine_status'=>0]);
            return $list;
        }else{
            $arr=[
                'data_url'=>url('showProjectCompletionList'),
                'title'=>'项目表',
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_project_completion_list');
        }
    }
    /*确认验收项目竣工*/
    public function auditProjectCompApply($guid=""){  //验收
        if (empty($guid)) return self::showReturnCode(1003);
        if ($this->request->isPost()){
            $data=$this->request->post();
            $model=new EnginProjectCompletionAudit();
            $data['examine_uuid']=$this->uuid;
            $data['examine_name']=$this->member_info->name;
            $re=$model->auditProjectApply($data,$guid);
            if ($re['code']=="1001"){
                $obj=EnginProjectCompletionAudit::quickGet($guid);
                $title=$data['examine_status']=="1"?"项目完工验收通过":"项目完工验收不通过";
                $model_log=new ProjectTraceLog();
                $log=[];
                $log["log_content"]=$title;
                $log["guid"]=$obj['project_id'];
                $log["uuid"]=$this->uuid;
                $log["jobs_id"]=$this->member_info->jobs_id;
                $log["department_id"]=$this->member_info->department_id;
                $model_log->addProjectLog($log);
            }
            return $re;
        }else{
            return self::showReturnCode(1003);
        }
    }
    /*完工项目列表*/
    public function showProjectSuccess(){   //
        if ($this->request->isPost()){
            $list=$this->showEasyUiJsonList('base/engin/EnginProjectCompletionAudit',false,['company_id'=>$this->member_info->company_id,'examine_status'=>1]);
            return $list;
        }else{
            $arr=[
                'data_url'=>url('showProjectSuccess'),
                'title'=>'完工项目表',
            ];
            $this->assign($arr);
            self::echoHtml();
            return $this->fetch('show_project_success');
        }
    }

//    public function assignJobs($guid=""){ //施工项目
//        if (empty($guid)) return self::showReturnCode(1003);
//        $numb_model=new BudgetBookNumber();
//        if ($this->request->isPost()){
//            $list=$this->showEasyUiJsonListNo('base/MaterialDataStyle',false,['company_id'=>$this->member_info->company_id]);
//            $model=new DefaultProjectCopy();
//            $book_number=$numb_model->where(['project_id'=>$guid,'status'=>1])->value('book_number');
//            $price_sum=0;
//            $price_control=0;
//            $arr=[];
//            $arr['rows']=[];
//            if (!empty($list['rows'])){
//                foreach ($list['rows'] as $value){
//                    $pro_list=$model->getList(['project_id'=>$guid,'book_number'=>$book_number]);
//                    $sum_price=0;
//                    $price=0;
//                    if (!empty($pro_list)){
//                        foreach ($pro_list as $item){
//                            $sum_price+=$item['number']*$item['price'];
//                            if ($item['control_price']=='0.00'){
//                                $price+=$item['number']*($item['zc_dj']+$item['fc_dj']+$item['rg_dj']);
//                                $item['control_price']=$item['number']*($item['zc_dj']+$item['fc_dj']+$item['rg_dj']);
//                            }else{
//                                $price+=$item['control_price'];
//                            }
//                            $item['_parentId']=$value['guid'];
//                            $item['iconCls']='icon-blank';
////                            $arr['rows'][]=$item;
//                        }
//                    }
//                    $price_sum+=$sum_price; //合计
//                    $price_control+=$price;
//                    $value['sum_price']=number_format($sum_price,2); //金额
//                    $value['control_price']=number_format($price,2); //内控金额
//                    $value['name']=$value['categories_name'];
//                    $arr['rows'][]=$value;
//                    if (!empty($pro_list)){
//                        foreach ($pro_list as $item){
////                            $sum_price+=$item['number']*$item['price'];
////                            if ($item['control_price']=='0.00'){
////                                $price+=$item['number']*($item['zc_dj']+$item['fc_dj']+$item['rg_dj']);
////                                $item['control_price']=$item['number']*($item['zc_dj']+$item['fc_dj']+$item['rg_dj']);
////                            }else{
////                                $price+=$item['control_price'];
////                            }
////                            $item['_parentId']=$value['guid'];
////                            $item['iconCls']='icon-blank';
//                            $arr['rows'][]=$item;
//                        }
//                    }
//                }
//            }
//            $arr['footer'][]=[
//                'name'=>'合计',
//                'iconCls'=>'icon-blank',
//                'sum_price'=>number_format($price_sum,2),
//                'control_price'=>number_format($price_control,2),
//            ];
//            return $arr;
//        }else{
//            $project_cont=Project::quickGet($guid);
//            $obj=$numb_model->where(['project_id'=>$guid,'status'=>1])->find();
//            $arr=[
//                'title'=>"工程类别列表",
//                'pro_id'=>$guid,
//                'data_url'=>url('assignJobs',['guid'=>$guid]),
//                'name'=>$project_cont['project_name'],
//                'price'=>$obj['total_price'],
//                'book_number'=>$obj['book_number'],
//            ];
//            $this->assign($arr);
//            self::echoHtml();
//            return $this->fetch('assign_jobs_html');
//        }
//    }
//    //指定人做事
//    public function appointJobsByUser(){
//        if ($this->request->isPost()){
//
//        }else{
//            $arr=[
//
//            ];
//            $this->assign($arr);
//            self::echoHtml();
//            return $this->fetch('appoint_jobs_by_user');
//        }
//    }
}