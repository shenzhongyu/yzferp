<?php

/**

 * Created by PhpStorm.

 * Power by Mikkle

 * QQ:776329498

 * Date: 2017/4/18

 * Time: 13:14

 */

namespace app\erp\controller;


use app\base\model\OfficeLeave;
use app\base\model\OfficePlan;
use app\base\model\OfficePlanLog;
use app\base\model\PersonnelCompany;
use app\base\model\PersonnelJobs;
use app\base\model\PersonnelRole;
use app\base\model\PersonnelRoleNodeAccess;
use app\base\model\PersonnelUser;
use app\base\model\PersonnelTrackStatus;
use app\base\model\PersonnelDepartment;
use app\base\model\PersonnelNode;
use app\base\model\Project;
use app\base\model\ProjectContacts;
use app\base\model\We;
use app\base\model\WeMenu;
use app\erp\config\Config;
use app\erp\controller\template_message\SendTemplateMessage;
use think\Session;
use app\base\model\WeMenuButton;
use think\Loader;


class System extends Auth
{
    protected $config_list = [];


    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->config_list = Config::$system;
    }

    public function _empty()
    {
        $action = $this->request->action();
        if (isset($this->config_list[$action])) {
            $action_name = $this->config_list[$action]['action_name'];
            if (method_exists($this, $action_name)) {
                return $this->$action_name($action);
            } else {
                $this->error('你配置的方法不存在');
            }
        } else {
            $this->error('你配置的参数不存在');
        }
    }

    //删除假条
    public function delLeave(){
        if ($this->request->isPost()){
            $model=new OfficeLeave();
            $data=$this->request->post("id");
            if (empty($data)) return self::showJsonReturnCode(1003);
            $re=$model->delData($data);
            return $re;
        }else{
            return self::showJsonReturnCode(1003);
        }
    }

    /**
     * 修改个人密码
     * Power by Mikkle
     * QQ:776329498
     * @param $password
     * @return \think\response\Json
     */
    public function setPersonnelPassword($password, $ajax = false)
    {
        if ($this->request->isPost() && $ajax == false) {
            return $this->savePersonnelPassword($password);
        } else {
            if ($ajax) {
                config(['default_ajax_return' => 'html',]);
            }
            return $this->fetch();
        }
    }
    /**
     * 修改密码
     * Power by Mikkle
     * QQ:776329498
     * @param $password
     * @param bool|false $uuid
     * @return \think\response\Json
     */
    protected function savePersonnelPassword($password, $uuid = false)
    {
        if (empty($this->uuid)) return self::showJsonReturnCodeWithOutData(1004);
        if (empty($password)) return self::showJsonReturnCodeWithOutData(1003);
        $uuid = empty($uuid) ? $this->uuid : $uuid;
        $model = new PersonnelUser();
        $re = $model->setPersonnelPassword($uuid, $password);
        if ($re) return self::showJsonReturnCode(1001);
        return self::showJsonReturnCodeWithOutData(1007, "修改密码失败");
    }


    public function editUserNodeRole($rid = false,$is_mobile=0)
    {
        $is_mobile = empty($is_mobile) ? 0 : 1 ;

        if ($this->request->isPost()) {
            if (empty($rid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $post_data = [
                'rid' => $rid,
                'rule' => $this->request->post('rule'),
            ];
            $model = new PersonnelRoleNodeAccess();
            return $model->saveRoleNodeAccess($post_data['rid'], $post_data['rule'],$is_mobile);

        } else {

            if (empty($rid)) {
                $this->error('缺少参数');
            }
            $assign_data = [
                'title' => '权限管理',
                'rid' => $rid,
                'tree_node_url' => url('showNodeJson', ['top' => 1,'is_mobile'=>$is_mobile]),
                'role_node_url' => '',
                'is_mobile'=>$is_mobile,
                'close_title'=>$is_mobile==0?'权限编辑':'手机端权限编辑'
            ];
            $this->assign($assign_data);
            return $this->fetch('node_role_edit');
        }
    }

    public function getMenuList($role_id,$is_mobile=0)
    {
        $is_mobile = empty($is_mobile) ? 0 : 1 ;
        $model = new PersonnelRoleNodeAccess();
        return $model->getRoleMenuList($role_id,$is_mobile);
    }


    public function showNodeJson($top = 0,$is_mobile=0)
    {
        $node = new PersonnelNode();

        if ($top == 1) {
            $json = $node->getNodeListToTreeJson($where=[],$is_mobile);
            return json($json);
        }
        $json = $node->getInputNodeListToTreeJson($where=[],$is_mobile);
        $obj = ['id' => 0, 'text' => '顶级菜单', 'children' => $json];
        return json([$obj]);

    }


    public function showCompanyJson($company = false)
    {
        if (!empty($company)) {
            $map['guid'] = $company;
        } else {
            $map =[];
        }
        $model = new PersonnelCompany();
        return json($model->getList($map));
    }

    public function showUserJson()
    {
        $model = new PersonnelUser();
        return json($model->getList());
    }

    public function showDepartmentJson($company = false)
    {
        if (!empty($company)) {
            $map['company_id'] = $company;
        } else {
            $map = [];
        }
        $model = new PersonnelDepartment();
        return json($model->getList($map));
    }

    public function showDepartmentJsonUser($department = false)
    {
        if (!empty($department)) {
            $map['guid'] = $department;
        } else {
            $map = [];
        }
        $model = new PersonnelDepartment();
        return json($model->getList($map));
    }

    public function showJobsJson($jobs = false)
    {
        if (!empty($jobs)) {
            $map['guid'] = $jobs;
        } else {
            $map = [];
        }
        $model = new PersonnelJobs();
        return json($model->getList($map));

    }

    public function showRoleJson()
    {
        $model = new PersonnelRole();
        return json($model->getList());
    }



    public function showProjectContactsJson($project = false)
    {
        if (!empty($project)) {
            $map['project_guid'] = $project;
        } else {
            $map = [];
        }
        $model = new ProjectContacts();
        return json($model->getList($map));
    }

    public function showTrackStatusJson()
    {
        $model = new PersonnelTrackStatus();
        return json($model->getList());
    }

    public function showMaterialJson()
    {
        $model = new Material();
        return json($model->getList());
    }

    //显示修改密码页面
    public function showUserPassword()
    {
        return $this->fetch('index/user_password');
    }

    public function showAppIdJson()
    {
        $model = new We();
        return json($model->getList());
    }

    public function showMenuJson()
    {
        $model = new WeMenu();
        return json($model->getList());
    }

    public function showButtonJson($top = 0)
    {
        $button = new WeMenuButton();
        $json = $button->getNodeListToTreeJson();
        if ($top == 1) {
            return json($json);
        }
        $obj = ['id' => 0, 'text' => '顶级菜单', 'children' => $json];
        return json([$obj]);

    }

    public function showMenuButton($guid)
    {
        config(['default_ajax_return' => 'html',]);
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $model = new WeMenuButton();
            return json($model->getList(["menu" => $guid, 'status' => 1]));
        } else {
            if (empty($guid)) {
                $this->error('缺少参数');
            }
            $assign_data = [
                'title' => '菜单按钮列表',
                'url' => url('EditMenuButton', ['guid' => $guid]),
                'edit' => '/erp/system/EditMenuButtonGuid',
                'loadurl' => '/erp/system/loadMenuButtonGuid',
                'delurl' => '/erp/system/delMenuButtonGuid',
                'data_url' => url('ShowMenuButton', ['guid' => $guid])
            ];
            $this->assign($assign_data);
            return $this->fetch('we_menu_button_list');
        }

    }

    public function loadMenuButtonGuid($guid)
    {  //加载按钮
        if (isset($guid)) {
            return json(Loader::model('base/WeMenuButton')->getInfoByGuid($guid));
        } else {
            return json([]);
        }
    }

    public function delMenuButtonGuid()
    { //删除按钮
        $guid = $this->request->param("guid");
        $model_name = 'base/WeMenuButton';
        if (isset($guid)) {
            return self::showReturnCodeWithOutData(Loader::model($model_name)->setStatusDelGuid($guid) ? 1001 : 1010);
        } else {
            return self::showReturnCodeWithOutData(1010);
        }
    }

    public function EditMenuButtonGuid($guid)
    {  //修改按钮
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $validate_name = 'base/WeMenuButton.edit';
            $model_name = 'base/WeMenuButton';
            $save_data = $this->request->post();
            $save_data['guid'] = $guid;
            return json($this->doModelAction($save_data, $validate_name, $model_name, 'saveInfoByGuid'));

        }
    }

    public function EditMenuButton($guid = '')
    {
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $data = $this->request->post();
            $data['menu'] = $guid;
            $validate_name = 'base/WeMenuButton.edit';
            $model_name = 'base/WeMenuButton';
            return json($this->editData(false, $validate_name, $model_name, $data));
        } else {
            config(['default_ajax_return' => 'html',]);
            if (empty($guid)) {
                $this->error('缺少参数');
            }

            return $this->fetch('we_menu_button_edit');
        }

    }

    public function ShowMenuButtonList($guid = "")
    {
        if (empty($guid)) {
            return self::showReturnCodeWithOutData(1003);
        }
        $model = new WeMenuButton();
        return json($model->getList(["menu" => $guid, 'status' => 1]));
    }

    //请假申请页面
    public function showAddLeave()
    {
        $model_user = new PersonnelUser();
        $username = $model_user->getInfoByUuId($this->member_info->uuid);
        $model_user = new PersonnelCompany();
        $com_name = $model_user->getPerByGuId($this->member_info->company_id);
        $model_dep = new PersonnelDepartment();
        $dep_name = $model_dep->getPerByGuId($this->member_info->department_id);
        $model_jobs = new PersonnelJobs();
        $jobs_name = $model_jobs->getPerByGuId($this->member_info->jobs_id);
        $assign_data = [
            'name' => $username->name,
            'company' => $com_name->company_name,
            'department' => $dep_name->department_name,
            'jobs' => $jobs_name->jobs_name,
        ];
        $this->assign($assign_data);
//        $this->member_info;
        return $this->fetch('leave_add');
    }

    public function addLeaveData()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            $data['start_time'] = strtotime($data['start_time']);
            $data['end_time'] = strtotime($data['end_time']);
            $data['leave_name'] = $this->uuid;
            $data['leave_username'] = $this->member_info->name;
            $data['company_id'] = $this->member_info->company_id;
            $data['department_id'] = $this->member_info->department_id;
            $data['jobs_id'] = $this->member_info->jobs_id;
//            $model=new PersonnelUser();
//            $sy=$model->setCacheSystem();
//            $com=$sy['company'];
//            $dep=$sy['department'];
//            $job=$sy['jobs'];
            $data['company_name'] =PersonnelCompany::quickGet($this->member_info->company_id)['company_name'];
            $data['department_name'] = PersonnelDepartment::quickGet($this->member_info->department_id)['department_name'];
            $data['jobs_name'] = PersonnelJobs::quickGet($this->member_info->jobs_id)['jobs_name'];
            $validate_name = 'base/OfficeLeave.edit';
            $model_name = 'base/OfficeLeave';
            $re= $this->editData(false, $validate_name, $model_name, $data);
            if ($re['code']=="1001"){
                SendTemplateMessage::sendTemplateMessage('leaveAudit');
            }
            return json($re);

        } else {
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //推送菜单
    public function sendMenu($guid)
    {
        $model = new WeMenu();
        if (empty($guid)) {
            return self::showReturnCodeWithOutData(1003);
        };
        $res = $model->sendMenu($guid);
        if ($res === true) {
            return self::showReturnCodeWithOutData(1001);
        } else {
            return self::showReturnCodeWithOutData(1003, $res);
        }
    }


    //员工录入
    public function showStaff()
    {
        return $this->fetch('staff_add');
    }

    public function addStaff(){
        if ($this->request->isPost()){
            $data = $this->request->post();
            if (empty($data)) return self::showReturnCode(1003);
            if (!isset($data['department_id'])) return self::showReturnCode(1003);
            $dep=PersonnelDepartment::quickGet($data['department_id']);
            
            $data['department_type']=empty($dep)?"":$dep['department_type'];
            $validate_name = 'base/PersonnelUser.add';
            $model_name = 'base/PersonnelUser';
            return json($this->editData(false, $validate_name, $model_name, $data));
        } else {
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //创建工作计划
    public function showWorkPlan()
    {
        return $this->fetch('workplan');
    }

    //添加个人工作计划
    public function addPlan()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            $data['start_time'] = strtotime($data['start_time']);
            $data['end_time'] = strtotime($data['end_time']);
            $validate_name = 'base/OfficePlan.edit';
            $model_name = 'base/OfficePlan';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['uuid'] = $this->uuid;
            $data['company_id'] = $this->member_info->company_id;
            $data['department_id'] = $this->member_info->department_id;
            $data['jobs_id'] = $this->member_info->jobs_id;
            $data['dep_manager'] = "0";
            $data['work_schedule'] = "0";
            return json($this->editData(false, false, $model_name, $data));
        } else {
            return self::showReturnCodeWithOutData(1003);
        }
    }
    //修改工作计划
    public function showPlanEdit(){
        config(['default_ajax_return' => 'html',]);
        return $this->fetch('work_plan_edit');
    }
    public function planEdit($guid=""){
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $data = $this->request->post();
            $data['start_time'] = strtotime($data['start_time']);
            $data['end_time'] = strtotime($data['end_time']);
            $validate_name = 'base/OfficePlan.edit';
            $model_name = 'base/OfficePlan';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['uuid'] = $this->uuid;
            $data['guid']=$guid;
            $result_add=$this->doModelAction($data, false, $model_name, 'saveInfoByGuid');
            if($result_add["code"]=="1001"){
                $log["log_content"]='工作计划更改';
                $log["log_time"]=intval(time());
                $log["log_desc"]=$data;
                $model_name = 'base/OfficePlanLog';
                $log["uuid"]=$this->uuid;
                $log["plan_id"]=$guid;
                $log_add=$this->editData(false, false, $model_name, $log);
            }
            return json( $result_add );
        }else{
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //
    public function showWorkLog()
    {
        config(['default_ajax_return' => 'html',]);
        $assign_data = [
            'user' => $this->member_info->name,
            'logData' => date('Y-m-d H:i:s', time()),
        ];
        $this->assign($assign_data);
        return $this->fetch('worklog');
    }

    //添加计划日记
    public function addWorkLog($guid="")
    {
        if ($this->request->isPost()) {
            if (empty($guid)) {
                return self::showReturnCodeWithOutData(1003);
            }
            $data = $this->request->post();
            $data['log_time'] = strtotime($data['log_time']);
            $validate_name = 'base/OfficePlanLog.edit';
            $model_name = 'base/OfficePlanLog';
            $result = $this->validate($data, $validate_name);
            if (true !== $result) return ['code' => '1003', 'msg' => $result,];
            $data['uuid'] = $this->uuid;
            $data['plan_id']=$guid;
            return json($this->editData(false, false, $model_name, $data));
        } else {
            return self::showReturnCodeWithOutData(1003);
        }
    }

    //查看计划日志
    public function showLogWork($guid="")
    {
        config(['default_ajax_return' => 'html',]);
        if (empty($guid)) {
                $this->error('缺少参数');
        }
        $model=new OfficePlan();
        $name=$model->getPerByGuId($guid);
        $model_user=new PersonnelUser();
        $username=$model_user->getInfoByUuId($name["uuid"]);
        $assign_data = [
            'url' => url('showLogWorkList', ['guid' => $guid]),
            'plan_name'=>$name["plan_name"],
            'user_name'=>$username["name"],
        ];
        $this->assign($assign_data);
        return $this->fetch('worklogshow');
    }

    //显示计划日志
    public function showLogWorkList($guid=""){
        if (empty($guid)) {
            $this->error('缺少参数');
        };
        $model=new OfficePlanLog();
        $list=$model->getList(["plan_id" => $guid]);
        foreach($list as $value){
            if(isset($value["uuid"])){
                $userModel=new PersonnelUser();
                $user=$userModel->getInfoByUuId($value["uuid"]);
                $value["username"]=$user["name"];
            }
            if(isset($value["log_time"])){
                $value["log_time"]=date('Y-m-d H:i:s', $value["log_time"]);
            }
        }
        return json($list);
    }


   



}
